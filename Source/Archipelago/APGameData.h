#pragma once

#include "../DataTypes.h"

#include <algorithm>
#include <map>
#include <set>
#include <string>
#include <vector>

#define SIGMA_NORMAL 0
#define SIGMA_EXPERT 1
#define NO_PUZZLE_RANDO 2
#define UMBRA_VARIETY 3

#define TARGET 0x2B4

#define PANEL 0
#define CABLE 1
#define MULTIPANEL 2
#define PRESSURE_PLATE 3

#define CABLE_TARGET_0 0xCC
#define CABLE_TARGET_1 0xD0
#define CABLE_TARGET_2 0xD4

#define CABLE_POWER 0xC4

#define EP_SOLVED 0xD8

#define LASER_TARGET 0xD0

#define CABLE_COLOR_R 0x158
#define CABLE_COLOR_G 0x15C
#define CABLE_COLOR_B 0x160

#define DOOR_OPEN_T 0x1D0
#define DOOR_OPEN_T_TARGET 0x1D4

#define DOOR_OPEN 0x1E4
#define DOOR_OPEN_RATE 0xE0

#define MULTIPANEL_TARGET 0xD4
#define MOUNT_PARENT_ID 0x80

#define PRESSURE_PLATE_PATTERN_POINT_ID 0x144
#define PRESSURE_PLATE_TARGET 0x170

#define ENTITY_NAME 0x58
#define LIGHTMAP_TABLE 0x68

#define AUDIO_LOG_IS_PLAYING 0xE4
#define AUDIO_LOG_PLAYED 0xE8
#define AUDIO_LOG_LILYPAD_SIZE 0x128

#define EP_ITEMS 0x240
#define EP_NUM_ITEMS 0x238
#define EP_PARTICLE_SIZE_SCALE 0x208
#define EP_TRAIL_COLORS 0x128 
#define EP_PATTERN_POINT_SIZE 0xE8
#define EP_PATTERN_POINT_IS_ENDPOINT 0x108

struct Connection
{
	int id;
	int entity_type;
	int target_no;
};

inline std::map<int, std::vector<Connection>> severTargetsById = {
	//{0x03BA2, {{0x03BA7, CABLE, 0 }}}, // Tutorial Back Left -> Door to Outpost 1

	{0x03BA2, {{0x03BA7, CABLE, ENTITY_NAME }}}, // Tutorial Back Left -> Door to Outpost 1
	{0x0A170, {{0x0A171, PANEL, TARGET }}}, // Outside Tutorial Door to Outpost
	{0x04CA3, {{0x04CA4, PANEL, TARGET }}}, // Outside Tutorial Exit Door from Outpost

	{0x01A29, {{0x01A54, PANEL, TARGET }, /*{0x01A54, PANEL, MOUNT_PARENT_ID}*/}}, // Glass Factory Entry Door
	{0x0D7ED, {{0x04AC9, CABLE, CABLE_TARGET_1 }, /*{0x0005A, MULTIPANEL, MOUNT_PARENT_ID}*/}}, // Glass Factory Back Wall
	{0x17F3E, {{0x000B0, PANEL, TARGET }, /*{0x000B0, PANEL, MOUNT_PARENT_ID }*/}}, // Symmetry Island Door to Symmetry Island Lower
	{0x18269, {{0x1C349, PANEL, TARGET }, /*{0x1C349, PANEL, MOUNT_PARENT_ID }*/}}, // Symmetry Island Door to Symmetry Island Upper

	{0x03307, {{0x0330F, CABLE, CABLE_TARGET_0}}}, // Orchard Mid Gate
	{0x03313, {{0x032FF, PANEL, TARGET}}}, // Orchard Mid Gate

	{0x09FEE, {{0x0C339, PANEL, TARGET }}}, // Desert Door to Desert Flood Light Room
	{0x0C2C3, {{0x0A02D, PANEL, TARGET }}}, // Desert Door to Pond Room
	{0x0A24B, {{0x0A249, PANEL, TARGET }}}, // Desert Door to Water Levels Room
	{0x0C316, {{0x18076, PANEL, TARGET }}}, // Desert Door to Elevator Room

	{0x09D6F, {{0x09E57, PANEL, TARGET }, /*{0x09E57, PANEL, MOUNT_PARENT_ID }*/ }}, // Quarry Door to Quarry 1
	{0x17C07, {{0x17C09, PANEL, TARGET }, /*{0x17C09, PANEL, MOUNT_PARENT_ID }*/ }}, // Quarry Door to Quarry 2

	{0x02010, {{0x01D8D, MULTIPANEL, MULTIPANEL_TARGET }, {0x01D8D, MULTIPANEL, MOUNT_PARENT_ID }}}, // Quarry Door to Mill
	{0x275FF, {{0x275ED, PANEL, TARGET }}}, // Quarry Mill Ground Floor Shortcut Door
	{0x17CE8, {{0x17CAC, PANEL, TARGET }}}, // Quarry Mill Door to Outside Quarry Stairs
	{0x0368A, {{0x03677, PANEL, TARGET }}}, // Quarry Mill Stairs

	{0x2769B, {{0x04D70, CABLE, CABLE_TARGET_0 }}}, // Quarry Boathouse Boat Staircase
	{0x17C50, {{0x021AE, PANEL, TARGET }}}, // Quarry Boathouse First Barrier
	{0x3865F, {{0x38663, PANEL, TARGET }}}, // Quarry Boathouse Second Barrier

	{0x19B24, {{0x0A3A9, PRESSURE_PLATE, PRESSURE_PLATE_TARGET}, {0x334DB, PANEL, TARGET}, {0x334DC, PANEL, TARGET}, {0x334DB, PANEL, ENTITY_NAME}, {0x334DC, PANEL, ENTITY_NAME}}}, // Shadows Timed Door
	{0x194B2, {{0x1972F, PANEL, TARGET }}}, // Shadows Laser Right Door
	{0x19665, {{0x197E5, PANEL, TARGET }}}, // Shadows Laser Left Door

	{0x19865, {{0x319AC, CABLE, CABLE_TARGET_1 }, {0x0ABEA, CABLE, CABLE_TARGET_1 }}}, // Shadows Barrier to Quarry
	{0x1855B, {{0x319FA, CABLE, CABLE_TARGET_0 }, /*{0x319F9, CABLE, CABLE_TARGET_1}, {0x319F9, CABLE, CABLE_TARGET_2},*/ {0x1C347, CABLE, CABLE_TARGET_1}, {0x1C347, CABLE, CABLE_TARGET_2}}}, // Shadows Ledge Barrier

	{0x01954, {{0x00139, PANEL, TARGET }, /*{0x00139, PANEL, MOUNT_PARENT_ID}*/ }}, // Keep Hedge Maze 1 Exit
	{0x018CE, {{0x00521, PANEL, TARGET }, /*{0x00139, PANEL, MOUNT_PARENT_ID}*/ }}, // Shortcut
	{0x019D8, {{0x019DC, PANEL, TARGET }, /*{0x019DC, PANEL, MOUNT_PARENT_ID}*/ }}, // Keep Hedge Maze 2 Exit
	{0x019B5, {{0x019DC, PANEL, TARGET }, /*{0x019DC, PANEL, MOUNT_PARENT_ID}*/ }}, // Shortcut
	{0x019E6, {{0x019E7, PANEL, TARGET }, /*{0x019E7, PANEL, MOUNT_PARENT_ID}*/ }}, // Keep Hedge Maze 3 Exit
	{0x0199A, {{0x019E7, PANEL, TARGET }, /*{0x019E7, PANEL, MOUNT_PARENT_ID}*/ }}, // Shortcut
	{0x01A0E, {}}, // Keep Hedge Maze 4 Exit

	{0x01BEC, {{0x033EA, PANEL, TARGET }}}, // Keep Pressure Plates 1
	{0x01BEA, {{0x01BE9, PANEL, TARGET }}}, // Keep Pressure Plates 2
	{0x01CD5, {{0x01CD3, PANEL, TARGET }}}, // Keep Pressure Plates 3
	{0x01D40, {{0x09E11, CABLE, CABLE_TARGET_0 }}}, // Keep Pressure Plates 4

	{0x04F8F, {{0x0361B, PANEL, TARGET }}}, // Keep Tower Shortcut

	{0x09E3D, {{0x09E49, PANEL, TARGET }}}, // Keep Shortcut to Shadows

	{0x0364E, {{0x03713, PANEL, TARGET }}}, // Monastery Shortcut
	{0x0C128, {{0x00CAE, CABLE, CABLE_TARGET_0 }}}, // Monastery Left Door
	{0x0C153, {{0x00C92, PANEL, TARGET }}}, // Monastery Right Door
	{0x03750, {{0x38F22, CABLE, CABLE_TARGET_1 }}}, // Monastery Door to Garden

	{0x0A0C9, {{0x0A0C8, PANEL, TARGET }}}, // Cargo Box
	{0x034F5, {{0x0351C, CABLE, CABLE_TARGET_0 }}}, // Town Wooden Roof Staircase
	{0x28A61, {{0x28998, PANEL, TARGET }}}, // Town Tinted Door to RGB House
	{0x2897B, {{0x034EB, CABLE, CABLE_TARGET_0}, {0x034EB, CABLE, CABLE_COLOR_R}, {0x034EB, CABLE, CABLE_COLOR_G}, {0x034EB, CABLE, CABLE_COLOR_B}} }, // Town RGB Staircase
	{0x03BB0, {{0x28A0D, PANEL, TARGET }, {0x28A0D, PANEL, MOUNT_PARENT_ID }}}, // Town Door to Church
	{0x28AA2, {{0x28A79, PANEL, TARGET }}}, // Maze Staircase
	{0x1845B, {{0x17F5F, PANEL, TARGET }, /*{0x17F5F, PANEL, MOUNT_PARENT_ID }*/}}, // Windmill Door

	{0x27798, {{0x28ACC, PANEL, TARGET}}}, // Blue Panels Door
	{0x27799, {{0x28A69, PANEL, TARGET}}}, // Square Avoid Door
	{0x2779A, {{0x28B39, PANEL, TARGET}}}, // Environmental Set Door
	{0x2779C, {{0x28AD9, PANEL, TARGET}}}, // Eraser Set Door

	{0x17F88, {{0x17F89, PANEL, TARGET}}}, // Door to Front of Theater
	{0x0A16D, {{0x0A168, PANEL, TARGET}}}, // Door to Cargo Box Left)
	{0x3CCDF, {{0x33AB2, PANEL, TARGET}}}, // Door to Cargo Box Right) 

	{0x3873B, {{0x337FA, PANEL, TARGET}}}, // Jungle Shortcut to River
	{0x0CF2A, {{0x17CAA, PANEL, TARGET}, {0x17CAA, PANEL, MOUNT_PARENT_ID}}}, // Jungle Shortcut to Monastery Garden
	{0x1475B, {{0x17CAB, PANEL, TARGET}}}, // Jungle Popup Wall

	{0x0C2A4, {{0x17C2E, PANEL, TARGET}}}, // Bunker Entry
	{0x17C79, {{0x0A099, PANEL, TARGET}}}, // Bunker Tinted Door
	{0x0C2A3, {{0x0A01F, PANEL, TARGET}}}, // Door to UV
	{0x0A08D, {{0x17E67, PANEL, TARGET}}}, // Door to Elevator

	{0x00C1C, {{0x0056E, PANEL, TARGET}}}, // Swamp Entry
	{0x184B7, {{0x00BFC, CABLE, CABLE_TARGET_1}}}, // Door to Broken Shapers
	{0x38AE6, {{0x17C0E, PANEL, TARGET}}}, // Platform Shortcut
	{0x04B7F, {{0x00006, PANEL, TARGET}}}, // Cyan Pump

	{0x18507, {{0x00bc9, CABLE, CABLE_TARGET_0}}}, // Door to Broken Shapers
	{0x183F2, {{0x00596, PANEL, TARGET}}}, // Red Pump
	{0x305D5, {{0x00BED, CABLE, CABLE_TARGET_0}, {0x00BED, CABLE, CABLE_COLOR_R}, {0x00BED, CABLE, CABLE_COLOR_G}, {0x00BED, CABLE, CABLE_COLOR_B}} }, // Red Exit

	{0x18482, {{0x00E3A, PANEL, TARGET}}}, // Blue Pump
	{0x0A1D6, {{0x00E3A, PANEL, TARGET}}}, // Purple Pump

	{0x2D880, {{0x17C02, PANEL, TARGET}}}, //Near Laser Shortcut


	{0x0C309, {{0x0288C, PANEL, TARGET}}}, // Treehouse Entry Door 1
	{0x0C310, {{0x02886, PANEL, TARGET}, {0x02886, PANEL, MOUNT_PARENT_ID}}}, // Treehouse Entry Door 2
	{0x0A181, {{0x0A182, PANEL, TARGET}}}, // Treehouse Entry Door 3
	{0x0C323, {{0x034FC, PRESSURE_PLATE, PRESSURE_PLATE_TARGET}, {0x2700B, PANEL, TARGET}, {0x17CBC, PANEL, TARGET}, {0x2700B, PANEL, ENTITY_NAME}, {0x17CBC, PANEL, ENTITY_NAME}} }, // Treehouse Timed Door
	{0x0C32D, {{0x037FF, PANEL, TARGET}}}, // Treehouse Draw Bridge

	{0x09E54, {{0x09EAF, PANEL, TARGET}, {0x09F6E, PANEL, TARGET}, {0x09E6B, PANEL, TARGET}, {0x09E7B, PANEL, TARGET}} }, // Mountain Door to 2nd Layer

	{0x09FFB, {{0x09FD8, PANEL, TARGET}} }, // Mountain 2nd layer staircase near
	{0x09E07, {{0x09FCD, CABLE, CABLE_TARGET_0}, {0x09FCD, CABLE, CABLE_COLOR_R}, {0x09FCD, CABLE, CABLE_COLOR_G}, {0x09FCD, CABLE, CABLE_COLOR_B}} }, // Mountain 2nd layer staircase far

	{ 0x09EDD, {{0x09ED8, PANEL, TARGET}, {0x09E86, PANEL, TARGET}} }, // Door to Elevator

	{ 0x09F89, {{0x09FDA, PANEL, TARGET}} }, // Metapuzzle Glass Doors

	{ 0x0C141, {{0x01983, PANEL, TARGET}, {0x01987, PANEL, TARGET}} }, // Final Room Entry Door

	{ 0x17F33, {{0x17FA2, PANEL, TARGET},{0x17FA2, PANEL, ENTITY_NAME}, {0x334E1, PANEL, TARGET},{0x334E1, PANEL, ENTITY_NAME}, {0x0A3AF, PRESSURE_PLATE, PRESSURE_PLATE_TARGET}} }, // Rock

	{ 0x2D77D, {{0x00FF8, PANEL, TARGET}} }, // Door to Caves
	{ 0x019A5, {{0x09DD5, PANEL, TARGET}} }, // Pillar Door
	{ 0x2D73F, {{0x021D7, PANEL, TARGET}, {0x021D7, PANEL, MOUNT_PARENT_ID}} }, // Caves Mountain Shortcut
	{ 0x2D859, {{0x17CF2, PANEL, TARGET}} }, // Caves Swamp Shortcut
	{ 0x0A19A, {{0x0A16E, PANEL, TARGET}} }, // Door to Challenge

	{ 0x0348A, {{0x039B4, PANEL, TARGET}} }, // Challenge to Theater Walkway

	{ 0x27739, {{0x27732, PANEL, TARGET}} }, // Walkway to Theater
	{ 0x27263, {{0x2773D, PANEL, TARGET}} }, // Walkway to Desert
	{ 0x09E87, {{0x09E85, PANEL, TARGET}} }, // Walkway to Town




	{ 0x01A54 , {} }, // Glass Factory Entry Door (Panel)
	{ 0x000B0 , {{0x0343A, PANEL, TARGET}} }, // Symmetry Island Lower (Panel)
	{ 0x1C349, {}}, // Symmetry Island Upper (Panel)

	{ 0x0C339 , {{0x09F94, PANEL, TARGET}} }, // Desert Light Room Entry (Panel)
	{ 0x0A249 , {{0x18313, PANEL, TARGET}} }, // Desert Flood Room Entry (Panel)
	{ 0x1C2DF , {} }, // Desert Flood Room Controls
	{ 0x1831E , {} }, // Desert Flood Room Controls
	{ 0x1C260 , {} }, // Desert Flood Room Controls
	{ 0x1831C , {} }, // Desert Flood Room Controls
	{ 0x1C2F3 , {} }, // Desert Flood Room Controls
	{ 0x1831D , {} }, // Desert Flood Room Controls
	{ 0x1C2B1 , {} }, // Desert Flood Room Controls
	{ 0x1831B , {} }, // Desert Flood Room Controls

		//CONTROL PANEL RANDO
		
	{ 0x01E5A, {} }, // Mill Gate Left
	{ 0x01E59 , {} }, // Mill Gate Right
	{ 0x03678 ,{} }, // Quarry Mill Lower Ramp Control
	{ 0x03675 , {} }, // Quarry Mill Upper Ramp Control
	{ 0x03679, {{0x014E8, PANEL, TARGET}} }, // Quarry Mill Lower Elevator Control
	{ 0x03676, {} }, // Quarry Mill Upper Elevator Control
	
	{ 0x03852, { {0x021C1, MULTIPANEL, MULTIPANEL_TARGET}} }, // Quarry Boathouse Ramp Height
	{ 0x03858, {} }, // Quarry Boathouse Ramp Horizontal	 

	{ 0x334DB, {}}, // Shadows Timer
	{ 0x334DC, {}}, // Shadows Timer
		
	{ 0x00B10, {{0x00CAE, CABLE, CABLE_TARGET_1 }} }, // Monastery Left
	{ 0x00C92, {} }, // Monastery Right

	{ 0x28998, {} }, // Town RGB House
	{ 0x28A0D, {} }, // Town Church
	{ 0x28A79, {} }, // Town Maze Panel
	{ 0x17F5F, {} }, // Windmill

	{ 0x0288C, {} }, // Treehouse First Door
	{ 0x02886, {} }, // Treehouse Second Door
	{ 0x0A182, {} }, // Treehouse Third Door
	{ 0x2700B, {} }, // Treehouse Timer 1
	{ 0x334DC, {} }, // Treehouse Timer 2
	{ 0x17CBC, {} }, // Treehouse Drop-Down

	{ 0x17CAB, {{0x002C7, PANEL, TARGET}} }, // Jungle Popup Wall
	{ 0x17C2E, {} }, // Bunker Entry Door
	{ 0x0A099, {{0x09DAF, PANEL, TARGET}} }, // Bunker Tinted Door
	{ 0x0A079, {} }, // Bunker Elevator
	{ 0x0056E, {} }, // Swamp Entry 

	{ 0x00609, {} }, // Swamp Slide Bridge
	{ 0x18488, {} }, // Swamp Slide Bridge
	{ 0x181F5, {} }, // Swamp Rotating Bridge
	{ 0x17C0A, {} }, // Swamp Maze Control
	{ 0x17E07, {} }, // Swamp Maze Control

	{ 0x17CDF, {} }, // Boat
	{ 0x17CC8, {} }, // Boat
	{ 0x17CA6, {} }, // Boat
	{ 0x09DB8, {} }, // Boat
	{ 0x17C95, {} }, // Boat
	{ 0x0A054, {} }, // Boat


	// Lasers
	{ 0x00509, {{0x0360D, PANEL, TARGET }} }, // Symmetry
	{ 0x01539, {{0x03612, PANEL, TARGET }} }, // Quarry
	{ 0x181B3, {{0x19650, PANEL, TARGET }} }, // Shadows
	{ 0x014BB, {{0x0360E, PANEL, TARGET },{0x03317, PANEL, TARGET }} }, // Keep
	{ 0x17C65, {{0x17CA4, PANEL, TARGET }} }, // Monastery
	{ 0x032F9, {{0x032F5, PANEL, TARGET }} }, // Town
	{ 0x00274, {{0x03616, PANEL, TARGET }} }, // Jungle
	{ 0x0C2B2, {{0x09DE0, PANEL, TARGET }} }, // Bunker
	{ 0x00BF6, {{0x03615, PANEL, TARGET }} }, // Swamp
	{ 0x028A4, {{0x03613, PANEL, TARGET }} }, // Treehouse

	// Desert Laser
	{ 0x012FB, {{0x012FB, PANEL, MOUNT_PARENT_ID, }, {0x34BD2, PANEL, MOUNT_PARENT_ID, }, {0x34F1E, PANEL, MOUNT_PARENT_ID, }, {0x34BD2, PANEL, LIGHTMAP_TABLE, }, {0x34F1E, PANEL, LIGHTMAP_TABLE, }} }, // Desert Laser
	{ 0x01317, {{0x012FB, PANEL, MOUNT_PARENT_ID, }, {0x34BD2, PANEL, MOUNT_PARENT_ID, }, {0x34F1E, PANEL, MOUNT_PARENT_ID, }, {0x34BD2, PANEL, LIGHTMAP_TABLE, }, {0x34F1E, PANEL, LIGHTMAP_TABLE, }} }, // Desert Elevator
	
	// Quarry Elevator
	{ 0x17CC4, {{0x03689, CABLE, CABLE_TARGET_1}}},

	// Desert Final Hexagonal Control
	{ 0x0A015, {{0x17C31, PANEL, TARGET}}},

};

inline std::map<int, std::vector<int>> doorCollisions = {
{ 0x0, { 0x271b, 0x182, 0x302ba,}},
{ 0x85, { 0x2a6, 0xbff2,}},
{ 0x5a2, { 0x38756, 0x181f5, 0x2d874, 0x2d873, 0xb8e, 0x22086, 0x33651, 0x335d9, 0x791, 0x7a3, 0x7a1, 0xa1b4, 0xa1b3, 0xa1b2, 0xa1b0, 0xa1b1, 0xa1af, 0x22088, 0x3357f, 0x3357c, 0x22087, 0xa1b5, 0xa191, 0xa190, 0x3291a, 0x3291d, 0x3291b, 0x3291e, 0x32921, 0x32922, 0xa1a3, 0xa1ad, 0xa1ae, 0xa193, 0x33a9c,}},
{ 0x61a, { 0x609, 0x2d774, 0x61b, 0x15f4, 0x1620, 0x3385b, 0x3385a, 0x33622, 0x16da, 0xa3d3, 0xa3c9, 0xa3c3, 0xa3ca, 0xa3d1, 0xa3d2, 0x3507, 0x34da, 0x2bf29, 0x2bf28, 0x34ee, 0x2bf26, 0xa188, 0xa18a, 0xa189, 0xa18b, 0x33790,}},
{ 0xb0c, { 0x37a3,}},
{ 0xc1c, { 0x56e, 0x2677a,}},
{ 0x12c8, { 0x12d7,}},
{ 0x1300, { 0x17eca, 0x1027,}},
{ 0x1317, { 0x3608, 0x277ab, 0x277a8, 0x277a6, 0x277aa, 0x277a9, 0x277a7, 0x3064d, 0x3064c, 0x3064b, 0x30659, 0x30658,}},
{ 0x18b3, { 0x18ae,}},
{ 0x18ce, { 0x1aaeb,}},
{ 0x1954, { 0x31ccb, 0x139, 0x1418d,}},
{ 0x199a, { 0x1aaed,}},
{ 0x19a5, { 0x33782,}},
{ 0x19b5, { 0x1aaec,}},
{ 0x19d8, { 0x3345e, 0x19dc, 0x1418c,}},
{ 0x19e6, { 0x335d7, 0x19e7, 0x14473,}},
{ 0x1a0e, { 0x335da, 0x1a0f, 0x14470,}},
{ 0x1a29, { 0x1a54, 0x1fd5f, 0x2fa23, 0x3937c,}},
{ 0x1bea, { 0x1abb2,}},
{ 0x1bec, { 0x1abb6,}},
{ 0x1cd5, { 0x1abb4,}},
{ 0x1d40, { 0x1447a,}},
{ 0x2010, { 0x18169,}},
{ 0x21ba, { 0x4016,}},
{ 0x270f, {}},
{ 0x3307, { 0x330a,}},
{ 0x3313, { 0x274cf,}},
{ 0x33ac, { 0x339e,}},
{ 0x33d0, { 0x1febc, 0x33d4, 0x17d11,}},
{ 0x3444, { 0xcc7b, 0x17da1,}},
{ 0x348a, { 0x31eca, 0x392d1, 0x39b4, 0x39df,}},
{ 0x34f5, { 0x2dd70, 0x3cd4d,}},
{ 0x3506, { 0x3481,}},
{ 0x3538, { 0x3535,}},
{ 0x354a, { 0x3542,}},
{ 0x3614, { 0x356b,}},
{ 0x364e, { 0xcf31, 0x364f,}},
{ 0x368a, { 0x368f,}},
{ 0x3703, { 0x3702,}},
{ 0x3750, { 0xcf2c, 0x3758,}},
{ 0x3839, { 0x3838, 0x3624,}},
{ 0x3ba2, { 0x3ba3,}},
{ 0x3bb0, { 0x35435,}},
{ 0x4b7f, { 0xa2c4, 0xa2c1,}},
{ 0x4ca3, { 0x3381e, 0x4ca4, 0x4ca6,}},
{ 0x4d37, { 0x3cc1, 0x3cc8, 0x18487, 0x3cc6, 0x18485, 0x18465, 0x3cc7, 0x181d8, 0x181dd, 0x181db, 0x181d7, 0x18462, 0x184e6, 0x1845e, 0x1845d, 0x184df, 0x1845c, 0x1849b, 0x1848e, 0x1848c, 0x17d90, 0x17dc5, 0x18505, 0x28b4a, 0x28b49, 0x38a9,}},
{ 0x4d75, { 0x4d7a,}},
{ 0x4f8f, { 0x1abb5,}},
{ 0x9d6f, { 0x9e57, 0xc471,}},
{ 0x9da0, {}},
{ 0x9e02, {}},
{ 0x9e03, {}},
{ 0x9e07, { 0xa06d,}},
{ 0x9e15, {}},
{ 0x9e16, {}},
{ 0x9e1d, {}},
{ 0x9e1e, { 0x3387c,}},
{ 0x9e26, {}},
{ 0x9e3d, { 0x1418f,}},
{ 0x9e54, {}},
{ 0x9e87, { 0x33881, 0x9e85, 0xa0f1,}},
{ 0x9e98, {}},
{ 0x9ed4, {}},
{ 0x9edd, {}},
{ 0x9ee3, { 0x3929, 0x3992,}},
{ 0x9eec, { 0x3375a, 0x9eeb,}},
{ 0x9f10, {}},
{ 0x9f11, {}},
{ 0x9f21, {}},
{ 0x9f2a, {}},
{ 0x9f2b, {}},
{ 0x9f3c, {}},
{ 0x9f3d, {}},
{ 0x9f3e, {}},
{ 0x9f89, { 0x38aa6,}},
{ 0x9f8a, { 0x38aa5,}},
{ 0x9f95, { 0x9f94,}},
{ 0x9fa1, { 0x38c79, 0x9f92,}},
{ 0x9fa2, { 0x1c344, 0x1c343, 0x335aa,}},
{ 0x9fee, { 0xc31b,}},
{ 0x9ff9, {}},
{ 0x9ffb, { 0xa176,}},
{ 0x9ffc, {}},
{ 0xa001, {}},
{ 0xa003, {}},
{ 0xa00b, {}},
{ 0xa00f, {}},
{ 0xa01a, {}},
{ 0xa01e, {}},
{ 0xa069, {}},
{ 0xa06a, {}},
{ 0xa06b, {}},
{ 0xa06c, {}},
{ 0xa070, {}},
{ 0xa071, {}},
{ 0xa072, {}},
{ 0xa073, {}},
{ 0xa074, {}},
{ 0xa075, {}},
{ 0xa076, {}},
{ 0xa077, {}},
{ 0xa08d, { 0xa092,}},
{ 0xa0c9, { 0x39a3, 0xa0c8, 0x1414b, 0x14149,}},
{ 0xa16d, { 0xa168, 0x277ee,}},
{ 0xa170, { 0x3381c, 0xa171, 0xa17a,}},
{ 0xa181, { 0xa182, 0xa187,}},
{ 0xa19a, { 0xa16e, 0x27074,}},
{ 0xa1d6, { 0x26a4b, 0x4c71,}},
{ 0xa24b, { 0xc347,}},
{ 0xa2df, { 0x32ed,}},
{ 0xc128, { 0x17df7, 0x17d17,}},
{ 0xc141, { 0x1983, 0x1987, 0x305d4, 0x305d3,}},
{ 0xc153, { 0x17d98, 0x17d9a,}},
{ 0xc160, {}},
{ 0xc161, {}},
{ 0xc164, {}},
{ 0xc179, {}},
{ 0xc19d, {}},
{ 0xc29d, { 0x34bc5, 0x17e63, 0x17e67, 0x34bc6, 0xa08c,}},
{ 0xc29e, {}},
{ 0xc2a3, { 0xa093,}},
{ 0xc2a4, { 0x33484, 0x17c2e, 0x17c5d,}},
{ 0xc2bc, {}},
{ 0xc2c3, { 0xc340,}},
{ 0xc309, { 0x288c, 0xc30f, 0x2219,}},
{ 0xc310, { 0xc314, 0x360b, 0x360c, 0x35c4,}},
{ 0xc316, { 0xbfb0,}},
{ 0xc323, { 0xc31f, 0x362d, 0x3631,}},
{ 0xc32d, { 0xc330, 0x3886d,}},
{ 0xcf2a, { 0xc3e5,}},
{ 0xd7ed, { 0x62, 0x5c, 0x59, 0x87, 0x86, 0x5a, 0x4d04,}},
{ 0x1467c, {}},
{ 0x14685, {}},
{ 0x14724, {}},
{ 0x14733, {}},
{ 0x14734, {}},
{ 0x1475b, { 0xc41, 0xc3f, 0x26d, 0x26e, 0x26f, 0x14b2, 0x26c, 0xd610, 0xd612,}},
{ 0x15287, { 0x15add, 0x18025,}},
{ 0x17bb4, { 0xafb, 0x3557, 0x353e, 0x34fb, 0x34dc,}},
{ 0x17c07, { 0x17c09, 0x17c92,}},
{ 0x17c50, { 0x2724a,}},
{ 0x17c6a, {}},
{ 0x17c79, { 0x3798, 0x35f6, 0x3c5e, 0x3c5d, 0x3c5f, 0x35f4,}},
{ 0x17cc1, { 0x2bf42, 0x395b6, 0x396b4, 0x17cc4, 0x17d2b,}},
{ 0x17ce8, { 0x17d86,}},
{ 0x17e1d, {}},
{ 0x17e57, {}},
{ 0x17e66, {}},
{ 0x17e70, {}},
{ 0x17e74, { 0x17f86, 0x2d875, 0x37f6, 0x37d4, 0x372f, 0x37f4, 0x37f9, 0x37f5, 0x37ce, 0x37fb, 0x37fa, 0x37d2, 0x37cf, 0x37f3, 0x372d, 0x372c, 0x37e4, 0x37f8, 0x37d6, 0x372b,}},
{ 0x17ec0, {}},
{ 0x17ec5, {}},
{ 0x17ec6, {}},
{ 0x17ecd, {}},
{ 0x17f02, {}},
{ 0x17f33, { 0xc197,}},
{ 0x17f3e, { 0xb0, 0x18272, 0x18271,}},
{ 0x17f88, { 0x17f89, 0x17f9e, 0x2787a,}},
{ 0x17f90, {}},
{ 0x1802c, { 0x180a9, 0x2d878,}},
{ 0x18269, { 0x1c349, 0x28959, 0x1826a,}},
{ 0x183f2, { 0x26a4a, 0x18400,}},
{ 0x1845b, { 0x17f5f, 0x2662d,}},
{ 0x18482, { 0x3863, 0x1847a,}},
{ 0x184b1, {}},
{ 0x184b7, { 0x2674d,}},
{ 0x184ca, {}},
{ 0x184e3, {}},
{ 0x184fa, {}},
{ 0x18507, { 0x26762,}},
{ 0x18511, {}},
{ 0x1852e, {}},
{ 0x18545, {}},
{ 0x1855b, { 0x3302,}},
{ 0x1855c, {}},
{ 0x1856d, {}},
{ 0x1859b, {}},
{ 0x194b2, { 0x3398b, 0x3399a, 0x3399b, 0x33988, 0x3399c, 0x18460, 0x33985, 0x3399d, 0x3399e, 0x3398a, 0x339a0, 0x3399f, 0x33989, 0x3398e,}},
{ 0x19665, { 0x3398c, 0x33999, 0x33990, 0x33998, 0x3398f, 0x33997, 0x1845a, 0x33991, 0x33996, 0x33995, 0x33992, 0x33994, 0x3398d, 0x33993,}},
{ 0x19865, {}},
{ 0x19ade, {}},
{ 0x19b24, { 0x334dc, 0x334db, 0x19800,}},
{ 0x27163, { 0x27326,}},
{ 0x27263, { 0x2773d, 0x27294,}},
{ 0x272dd, { 0x3852, 0x338cf, 0x338ce, 0x35c0, 0x338d0, 0x36cc, 0x378a, 0x17c5c, 0x1a7b,}},
{ 0x2733d, {}},
{ 0x2733e, {}},
{ 0x2733f, {}},
{ 0x27340, {}},
{ 0x27341, {}},
{ 0x27342, {}},
{ 0x275ff, { 0x27636,}},
{ 0x2762c, { 0x17e45,}},
{ 0x2769b, { 0x229f,}},
{ 0x27739, { 0x27732, 0x2773a,}},
{ 0x27798, { 0x2782f,}},
{ 0x27799, { 0x2782e,}},
{ 0x2779a, { 0x27830,}},
{ 0x2779c, { 0x27831,}},
{ 0x288e8, { 0x3657b,}},
{ 0x288e9, {}},
{ 0x288f3, { 0x3657d,}},
{ 0x288f9, {}},
{ 0x28907, {}},
{ 0x28942, { 0x3657c,}},
{ 0x2897b, { 0x289df,}},
{ 0x2897c, { 0x61e0, 0x28b8f,}},
{ 0x289a1, { 0x3362f,}},
{ 0x289a2, {}},
{ 0x289ae, { 0x33630,}},
{ 0x289b0, {}},
{ 0x289c4, {}},
{ 0x289ca, {}},
{ 0x289cd, {}},
{ 0x289d7, {}},
{ 0x289da, {}},
{ 0x289dc, {}},
{ 0x289dd, {}},
{ 0x28a61, { 0x28998,}},
{ 0x28aa2, { 0x28aa4, 0x3397e,}},
{ 0x28ad4, {}},
{ 0x28ade, {}},
{ 0x28ae2, {}},
{ 0x28ae8, {}},
{ 0x28aed, {}},
{ 0x2d73f, { 0x2d743, 0x2d741, 0x2d742, 0x2d740,}},
{ 0x2d77d, { 0x336cc, 0x392ce, 0xff8, 0x2d781,}},
{ 0x2d859, { 0x17cf2, 0x2d85b,}},
{ 0x2d880, { 0x17c02, 0x17c05, 0x3a36, 0x2d881,}},
{ 0x2facf, {}},
{ 0x2fad4, {}},
{ 0x2fad6, {}},
{ 0x2fad7, {}},
{ 0x2fada, {}},
{ 0x2fadb, {}},
{ 0x2fafb, { 0x2faf6,}},
{ 0x2fd5e, {}},
{ 0x2fd76, {}},
{ 0x2fdae, {}},
{ 0x2fdaf, {}},
{ 0x2fdb0, {}},
{ 0x2fe2d, {}},
{ 0x2fe94, {}},
{ 0x2fe95, {}},
{ 0x305d5, { 0x305d6,}},
{ 0x307d7, {}},
{ 0x307d8, {}},
{ 0x31486, { 0x3930d,}},
{ 0x31487, { 0x3930f,}},
{ 0x31488, { 0x39310,}},
{ 0x3148a, { 0x3930c,}},
{ 0x314b0, { 0x39324,}},
{ 0x314e1, { 0x3d2e,}},
{ 0x314e2, { 0x3d2f,}},
{ 0x314e3, { 0x3d30,}},
{ 0x314e4, { 0x3d31,}},
{ 0x314e5, { 0x3d32,}},
{ 0x314e6, { 0x3d33,}},
{ 0x314e7, { 0x3d34,}},
{ 0x314e8, { 0x3d35,}},
{ 0x314e9, { 0x3d36,}},
{ 0x314ea, { 0x3d38,}},
{ 0x314eb, { 0x3d3a,}},
{ 0x314ec, { 0x39336,}},
{ 0x314ed, { 0x39335,}},
{ 0x314ee, { 0x39334,}},
{ 0x314ef, { 0x3d40,}},
{ 0x314f0, { 0x3d41,}},
{ 0x314f1, { 0x3d42,}},
{ 0x314f2, { 0x3933e,}},
{ 0x314f3, { 0x3d92,}},
{ 0x314f4, { 0x3934c,}},
{ 0x314f5, { 0x3934b,}},
{ 0x31511, { 0x3934a,}},
{ 0x31512, { 0x3930e,}},
{ 0x31514, { 0x39349,}},
{ 0x31515, { 0x39348,}},
{ 0x317fd, { 0x3490, 0x34b2, 0x348e, 0x349c, 0x3498, 0x652b, 0x347e, 0x38bed, 0x6523, 0x6539, 0x347d, 0x6525, 0x65ac, 0x38bee, 0x6524, 0x38bec, 0x6526, 0x6602, 0x6527, 0x65fb, 0x65da, 0x38bef, 0x38bdb, 0x6603, 0x6604, 0x33cd, 0x65ff, 0x62d4, 0x6608, 0x62a5, 0x38bda, 0x6605, 0x650f, 0x6606, 0x6682, 0x347c, 0x629c, 0x652a, 0x6607, 0x668f, 0x38bf0, 0x6687, 0x667f, 0x6231, 0x668e, 0x668d, 0x6529, 0x38bf1, 0x665f, 0x6685, 0x6684, 0x347f, 0x6683, 0x631a, 0x6688, 0x6686, 0x651f, 0x64eb, 0x38bf2, 0x66b2, 0x348b, 0x66aa, 0x6694, 0x66a9, 0x668b, 0x6690, 0x668a, 0x6689, 0x6691, 0x6693, 0x62f4, 0x6692, 0x6520, 0x630e, 0x62d3, 0x6313, 0x66cb, 0x66cc,}},
{ 0x318a2, { 0x6922, 0x692f, 0x6921, 0x6923, 0x692e, 0x6929, 0x692c, 0x694d, 0x6934, 0x6935, 0x692d, 0x694a, 0x6949, 0x691f, 0x6948, 0x694c,}},
{ 0x31903, { 0x391a1, 0x68ad, 0x68ae, 0x68d0, 0x68b8, 0x68cf, 0x68c9, 0x68cc, 0x68b7, 0x68ca, 0x68b6, 0x6890, 0x68ac, 0x6891, 0x687d, 0x689f, 0x6892, 0x687e, 0x68a0, 0x6893, 0x687f, 0x68ab, 0x68a1, 0x68a7, 0x68aa, 0x6880, 0x6896, 0x6894, 0x68a2, 0x68a6, 0x6881, 0x6898, 0x68a3, 0x6882, 0x6895, 0x68a8, 0x68a9, 0x68a5, 0x68a4, 0x6883, 0x6899, 0x6884, 0x6897, 0x6887, 0x689a, 0x6886, 0x689b, 0x6888, 0x6889, 0x688c, 0x688b, 0x688d, 0x688a, 0x688e, 0x688f, 0x68d1, 0x68b0,}},
{ 0x32969, {}},
{ 0x3296f, {}},
{ 0x32975, {}},
{ 0x3297b, {}},
{ 0x32981, {}},
{ 0x334ca, {}},
{ 0x335d6, { 0x3001b, 0x3001e, 0x331d, 0x3533c, 0x302d8, 0xd69d, 0x3036b, 0x3318, 0x30041, 0x2c38e, 0x17ed, 0x18de, 0x334ed, 0x17fe,}},
{ 0x33780, {}},
{ 0x33794, { 0x337cf,}},
{ 0x33795, { 0x337d1,}},
{ 0x33796, { 0x337d0,}},
{ 0x337a0, { 0x337d5,}},
{ 0x337a1, { 0x337d4,}},
{ 0x337a4, { 0x337d3,}},
{ 0x337c1, { 0x337d2,}},
{ 0x338d4, {}},
{ 0x338d5, {}},
{ 0x338d6, {}},
{ 0x33982, {}},
{ 0x33aa9, {}},
{ 0x33aea, {}},
{ 0x33b38, {}},
{ 0x34eda, { 0x64, 0x14481,}},
{ 0x34f46, { 0x337ce, 0x39dc9, 0x3379d, 0x3379a,}},
{ 0x35306, {}},
{ 0x35308, {}},
{ 0x36343, {}},
{ 0x36360, { 0x3c134,}},
{ 0x3636d, { 0x337b2, 0x337c7, 0x337b3, 0x337c6, 0x337b4, 0x33829, 0x3382b, 0x3382a, 0x33716, 0x33828, 0x337b0, 0x337ae, 0x337f5, 0x3371b, 0x3371d, 0x3371e, 0x3371c, 0x3371f, 0x33720, 0x2c3b3, 0x2c3cc, 0x2c3d2, 0x337af, 0x2c3d0, 0x33717, 0x337b6, 0x33a5f, 0x33a5d, 0x33a5b, 0x33a5c, 0x33a5a, 0x33a5e, 0x33a59,}},
{ 0x36373, { 0x3c133,}},
{ 0x363d5, { 0x3c116,}},
{ 0x3645a, { 0x2c399,}},
{ 0x3645b, { 0x2c39c,}},
{ 0x3865f, { 0x33762,}},
{ 0x386b7, {}},
{ 0x3873b, { 0x3873f,}},
{ 0x38acb, { 0x335ab, 0x3ce36, 0x38a9e, 0x3ce34,}},
{ 0x38ae6, { 0x17c0d, 0x17c0e, 0x3381, 0x38ae7,}},
{ 0x38c10, { 0x33958, 0x33959, 0x27837, 0x3395a,}},
{ 0x391a5, {}},
{ 0x391de, { 0x33aeb,}},
{ 0x3ccdf, { 0x33ab2, 0x2787c,}},
{ 0x3d9ec, {}},
{ 0x3da76, {}},
{ 0x3da78, {}},
};

inline std::set<int> allLasers = {
	0x00509,
	0x012FB,
	0x01539,
	0x181B3,
	0x014BB,
	0x17C65,
	0x032F9,
	0x00274,
	0x0C2B2,
	0x00BF6,
	0x028A4,
};

inline std::set<int> knownIrrelevantCollisions = { // We will still update these collisions once for safety.
	0x01e59,
	0x01e5a,
	0x01d8d,
	0x28a0d,
	0x17caa,
	0x21d7,
	0x2d740,
	0x2d741,
	0x2d743,
	0x0360b,
	0x02886,
	0x035c4,
	0x0360c,
};

inline std::set<int> audioLogs = {
	0x3C0F7,0x3C0FD,0x32A00,0x3C0FE,0x338B0,0x338B7,0x338AD,0x338A5,0x338AE,0x338AF,0x338A7,0x338A3,0x338A4,0x3C108,0x338EF,0x336E5,0x338A6,0x3C100,0x3C0F4,0x3C102,0x3C10D,0x3C10E,0x3C10B,0x0074F,0x012C7,0x329FF,0x3C106,0x33AFF,0x011F9,0x00763,0x32A08,0x3C101,0x3C0FF,0x3C103,0x00A0F,0x339A9,0x015C0,0x33B36,0x3C10C,0x32A0E,0x329FE,0x32A07,0x00761,0x3C109,0x33B37,0x3C107,0x3C0F3,0x015B7,0x3C10A,0x32A0A,0x015C1,0x3C12A,0x3C104,0x3C105,0x339A8,0x0050A,0x338BD,0x3C135,0x338C9,0x338D7,0x338C1,0x338CA
};

inline std::map<int, std::string> laserNames = {
	{0x028A4, "Treehouse"},
	{0x00274, "Jungle"},
	{0x032F9, "Town"},
	{0x01539, "Quarry"},
	{0x181B3, "Shadows"},
	{0x0C2B2, "Bunker"},
	{0x00509, "Symmetry"},
	{0x00BF6, "Swamp"},
	{0x014BB, "Keep"},
	{0x012FB, "Desert"},
	{0x17C65, "Monastery"},
};

const inline int UnlockableDoors[]{
	0x2D73F, // Caves Mountain Shortcut
	0x03BA2, // Outside Tutorial Outpost Path
	0x0A170, // Outside Tutorial Outpost Entry
	0x04CA3, // Outside Tutorial Outpost Exit
	0x01A29, // Glass Factory Entry
	0x0D7ED, // Glass Factory Back Wall
	0x17F3E, // Symmetry Island Lower
	0x18269, // Symmetry Island Upper
	0x03307, // Orchard First Gate
	0x03313, // Orchard Second Gate
	0x09FEE, // Desert Light Room Entry
	0x0C2C3, // Desert Pond Room Entry
	0x0A24B, // Desert Flood Room Entry
	0x0C316, // Desert Elevator Room Entry
	0x01317, // Desert Elevator
	0x09D6F, // Quarry Entry 1
	0x17C07, // Quarry Entry 2
	0x02010, // Quarry Stoneworks Entry
	0x275FF, // Quarry Stoneworks Side Exit
	0x17CE8, // Quarry Stoneworks Roof Exit
	0x0368A, // Quarry Stoneworks Stairs
	0x2769B,0x27163, // Quarry Boathouse Dock
	0x17C50, // Quarry Boathouse First Barrier
	0x3865F, // Quarry Boathouse Second Barrier
	0x19B24, // Shadows Timed
	0x194B2, // Shadows Laser Entry Right
	0x19665, // Shadows Laser Entry Left
	0x19865,0x0A2DF, // Shadows Quarry Barrier
	0x1855B,0x19ADE, // Shadows Ledge Barrier
	0x01954, // Keep Hedge Maze 1 Exit
	0x01BEC, // Keep Pressure Plates 1 Exit
	0x018CE, // Keep Hedge Maze 2 Shortcut
	0x019D8, // Keep Hedge Maze 2 Exit
	0x019B5, // Keep Hedge Maze 3 Shortcut
	0x019E6, // Keep Hedge Maze 3 Exit
	0x0199A, // Keep Hedge Maze 4 Shortcut
	0x01A0E, // Keep Hedge Maze 4 Exit
	0x01BEA, // Keep Pressure Plates 2 Exit
	0x01CD5, // Keep Pressure Plates 3 Exit
	0x01D40, // Keep Pressure Plates 4 Exit
	0x09E3D, // Keep Shadows Shortcut
	0x04F8F, // Keep Tower Shortcut
	0x0364E, // Monastery Laser Shortcut
	0x0C128, // Monastery Entry Inner
	0x0C153, // Monastery Entry Outer
	0x03750, // Monastery Garden Entry
	0x0A0C9, // Town Cargo Box Entry
	0x034F5, // Town Wooden Roof Stairs
	0x28A61, // Town RGB House Entry
	0x03BB0, // Town Church Entry
	0x28AA2, // Town Maze Stairs
	0x1845B, // Town Windmill Entry
	0x2897B, // Town RGB House Stairs
	0x27798, // Town Tower Second
	0x27799, // Town Tower First
	0x2779A, // Town Tower Fourth
	0x2779C, // Town Tower Third
	0x17F88, // Theater Entry
	0x0A16D, // Theater Exit Left
	0x3CCDF, // Theater Exit Right
	0x3873B, // Jungle Laser Shortcut
	0x1475B, // Jungle Popup Wall
	0x0CF2A, // Jungle Monastery Garden Shortcut
	0x0C2A4, // Bunker Entry
	0x17C79, // Bunker Tinted Glass
	0x0C2A3, // Bunker UV Room Entry
	0x0A08D, // Bunker Elevator Room Entry
	0x00C1C, // Swamp Entry
	0x184B7, // Swamp Between Bridges First
	0x38AE6, // Swamp Platform Shortcut
	0x04B7F, // Swamp Cyan Water Pump
	0x18507, // Swamp Between Bridges Second
	0x183F2, // Swamp Red Water Pump
	0x305D5, // Swamp Red Underwater Exit
	0x18482, // Swamp Blue Water Pump
	0x0A1D6, // Swamp Purple Water Pump
	0x2D880, // Swamp Laser Shortcut
	0x0C309, // Treehouse First
	0x0C310, // Treehouse Second
	0x0A181, // Treehouse Third
	0x0C32D, // Treehouse Drawbridge
	0x0C323, // Treehouse Laser House Entry
	0x09E54, // Mountain Floor 1 Exit
	0x09FFB, // Mountain Floor 2 Staircase Near
	0x09EDD, // Mountain Floor 2 Exit
	0x09E07, // Mountain Floor 2 Staircase Far
	0x09F89, // Mountain Bottom Floor Giant Puzzle Exit
	0x0C141, // Mountain Bottom Floor Pillars Room Entry
	0x17F33, // Mountain Bottom Floor Rock
	0x2D77D, // Caves Entry
	0x019A5, // Caves Pillar
	0x2D859, // Caves Swamp Shortcut
	0x0A19A, // Challenge Entry
	0x0348A, // Challenge Tunnels Entry
	0x27739, // Tunnels Theater Shortcut
	0x27263, // Tunnels Desert Shortcut
	0x09E87, // Tunnels Town Shortcut
};


const inline std::set<int> deathlinkExcludeList = {
	0x0008F, // UTM Invisible Dots 1
	0x0006B, // UTM Invisible Dots 2
	0x0008B, // UTM Invisible Dots 3
	0x0008C, // UTM Invisible Dots 4
	0x0008A, // UTM Invisible Dots 5
	0x00089, // UTM Invisible Dots 6
	0x0006A, // UTM Invisible Dots 7
	0x0006C, // UTM Invisible Dots 8
	0x00027, // UTM Invisible Dots Symmetry 1
	0x00028, // UTM Invisible Dots Symmetry 2
	0x00029, // UTM Invisible Dots Symmetry 3
	0x0C373, // Patio Floor
	0x0A079, // Bunker Elevator Panel
	0x09E7A, // Mountain 1 Green 1
	0x09E71, // Mountain 1 Green 2
	0x09E72, // Mountain 1 Green 3
	0x09E69, // Mountain 1 Green 4
	0x09E7B, // Mountain 1 Green 5
};

const inline std::set<int> deathlinkExpertExcludeList = {
	0x03C0C, // Town RGB Room Left
	0x00065, 0x0006D, 0x00072, 0x0006F, 0x00070, 0x00071, 0x00076, // Symmetry Island Fading Lines
	0x288EA, 0x288FC, 0x289E7, 0x288AA, // Caves Wooden Beams
};

const inline std::set<int> deathlinkVarietyExcludeList = {
	0x17FB9, // Left Upstairs Singls
	0x0A16B, 0x0A2CE, 0x0A2D7, 0x0A2DD, 0x0A2EA, // Left Upstairs Left
};

const inline std::vector<int> alwaysDeathLinkPanels = {
	0x09FCC, 0x09FCE, 0x09FCF, 0x09FD0, 0x09FD1, 0x09FD2, // Same Solution Set
	0x033EA, 0x01BE9, 0x01CD3, 0x01D3F, // Keep Pressure Plates
};

const inline std::set<int> movingMemoryPanels = {
	0x00CDB, 0x0051F, 0x00524, 0x00CD4
};

const inline std::set<int> allEPs = {
	0x0332B, 0x03367, 0x28B8A, 0x037B6, 0x037B2, 0x000F7, 0x3351D, 0x0053C
	, 0x00771, 0x335C8, 0x335C9, 0x337F8, 0x037BB, 0x220E4, 0x220E5, 0x334B9
	, 0x334BC, 0x22106, 0x0A14C, 0x0A14D, 0x03ABC, 0x03ABE, 0x03AC0, 0x03AC4
	, 0x03AC5, 0x03BE2, 0x03BE3, 0x0A409, 0x006E5, 0x006E6, 0x006E7, 0x034A7
	, 0x034AD, 0x034AF, 0x03DAB, 0x03DAC, 0x03DAD, 0x03E01, 0x289F4
	, 0x289F5, 0x0053D, 0x0053E, 0x00769, 0x33721, 0x220A7, 0x220BD, 0x03B22
	, 0x03B23, 0x03B24, 0x03B25, 0x03A79, 0x28ABD, 0x28ABE, 0x3388F, 0x28B29
	, 0x28B2A, 0x018B6, 0x033BE, 0x033BF, 0x033DD, 0x033E5, 0x28AE9, 0x3348F
	, 0x001A3, 0x335AE, 0x000D3, 0x035F5, 0x09D5D, 0x09D5E, 0x09D63, 0x3370E
	, 0x035DE, 0x03601, 0x03603, 0x03D0D, 0x3369A
	, 0x336C8, 0x33505, 0x03A9E, 0x016B2, 0x3365F, 0x03731, 0x036CE, 0x03C07
	, 0x03A93, 0x03AA6, 0x3397C, 0x0105D, 0x0A304, 0x035CB, 0x035CF, 0x28A7B
	, 0x005F6, 0x00859, 0x17CB9, 0x28A4A, 0x334B6, 0x0069D, 0x28A4C, 0x289CF
	, 0x289D1, 0x33692, 0x03E77, 0x03E7C, 0x035C7, 0x01848, 0x03D06, 0x33530
	, 0x33600, 0x28A2F, 0x28A37, 0x334A3, 0x3352F, 0x33857, 0x33879, 0x03C19
	, 0x28B30, 0x035C9, 0x03335, 0x03412, 0x038A6, 0x038AA, 0x03E3F
	, 0x03E40, 0x28B8E, 0x28B91, 0x03BCE, 0x03BCF, 0x03BD1, 0x339B6, 0x33A20
	, 0x33A29, 0x33A2A, 0x33B06, 0x00614
};

const inline std::set<int> allObelisks = {
	0x00367, 0x0A16C, 0x00097, 0x00263, 0x00359, 0x22073,
};

const inline std::set<int> omniDirectionalEntities = {
	0x09D9B, 0x09FAA, 0x034F5,
};

const inline std::set<int> swampLowContrastPanels = {
	0x0056E,
	0x00390,
	0x010CA,
	0x00983,
	0x00984,
	0x00986,
	0x00985,
	0x00987,
	0x181A9,
	0x00999,
	0x0099D,
	0x009A0,
	0x009A1,
	0x00007,
	0x00008,
	0x00009,
	0x0000A,
	0x00609,
	0x18488,
	0x181F5,
	0x17E2B,
};

const inline std::set<int> notThatBadSwampPanels = {
	0x00469,
	0x00472,
	0x00262,
	0x00474,
	0x00553,
	0x0056F,
	0x009A6, // Purple Underwater
};

const inline std::map<int, std::string> precompletableEpToName = {
	{ 0x01848, "sconce" }, //First Hallway
	{ 0x33530, "the_wall"}, //Tutorial Cloud
	{ 0x33600, "completion"}, //Patio Floor
	{ 0x3352F, "sun" }, // Gate
	{ 0x03D06, "pool"}, // Garden
	{ 0x28A2F, "dock_stripe"}, //Short Sewer
	{ 0x334A3, "trail"}, //Path
	{ 0x035C7, "hitch"}, //Tractor

	{ 0x28B91, "cloud2"}, //Thundercloud

	{ 0x28B8A, "pot"}, //Vase
	{ 0x0332B, "symmetry_glass_down"}, //Black Line Reflection
	{ 0x03367, "symmetry_glass_up"}, //Black Line

	{ 0x3351D, "sand"}, //Sand Snake
	{ 0x0053C, "spec_ruin_2"}, //Facade Right
	{ 0x00771, "spec_ruin"}, //Facade Left
	{ 0x335C8, "spec_plaza_a"}, //Stairs Left
	{ 0x335C9, "spec_plaza_b"}, //Stairs Right
	{ 0x220E4, "spec_wall_a"}, //Broken Wall Straight
	{ 0x220E5, "spec_wall_b"}, //Broken Wall Bend
	{ 0x334B9, "DesertShorelinePuzzle"}, //Shore
	{ 0x334BC, "DesertStaircasePuzzle"}, //Island
	{ 0x0A14C, "spec_reflect_lineup"}, //Pond Room Reflection
	{ 0x0A14D, "spec_reflect_lineup_b"}, //Pond Room Reflection Far
	{ 0x337F8, "water_level"}, //Flood Room
	{ 0x037BB, "lift_bottom"}, //Elevator

	{ 0x28A4A, "quarry_rock"}, //Shore
	{ 0x334B6, "dam"}, //Entrance Pipe
	{ 0x28A4C, "quarry_sand"}, //Sand Pile
	{ 0x289CF, "lake_dip"}, //Rock Line
	{ 0x289D1, "lake_dip_b"}, //Rock Line
	{ 0x17CB9, "tracks"}, //Railroad
	{ 0x0069D, "askew"}, //Ramp
	{ 0x00614, "elevator_crossing"}, //Lift
	{ 0x00859, "church"}, //Moving Ramp
	{ 0x005F6, "stretched_line"}, //Hook
	{ 0x28A7B, "quarry_d"}, //Vent

	{ 0x0053D, "shadow_tree_1"}, //Rock Shadow
	{ 0x0053E, "shadow_tree_2"}, //Beach Shadow
	{ 0x220BD, "tree_bridge_b"}, //Long Bridge

	{ 0x03E77, "field_a"}, //Red Flowers
	{ 0x03E7C, "field_b"}, //Purple Flowers

	{ 0x03B24, "three_over_c"}, //Circle Near
	{ 0x03B23, "three_over_b"}, //Circle Left
	{ 0x03B22, "three_over_a"}, //Circle Far
	{ 0x03A79, "ship_wrinkle"}, //Stern
	{ 0x28ABD, "rope_inner"}, //Rope Inner
	{ 0x28ABE, "rope_outer"}, //Rope Outer
	{ 0x3388F, "metal" }, // Couch

	{ 0x28AE9, "keep_dirt"}, //Path
	{ 0x3348F, "mazes"}, //Hedges
	{ 0x033BE, "e_pressure_plates1"}, //PP1
	{ 0x033BF, "e_pressure_plates2"}, //PP2
	{ 0x033DD, "e_pressure_plates3"}, //PP3
	{ 0x033E5, "e_pressure_plates4"}, //PP4
	{ 0x018B6, "e_pressure_plates4b"}, //PP4b

	{ 0x006E5, "monastery_a"}, //Facade Left Near
	{ 0x006E6, "monastery_b"}, //Facade Left Far Short
	{ 0x006E7, "monastery_c"}, //Facade Left Far Long
	{ 0x03DAB, "monastery_d"}, //Facade Right Near
	{ 0x03DAC, "monastery_e"}, //Facade Left Stairs
	{ 0x03DAD, "monastery_f"}, //Facade Right Stairs
	{ 0x03E01, "grassy_switchback"}, //Grass Stairs
	{ 0x034A7, "monastery_side_a"}, //Shutters 1
	{ 0x034AD, "monastery_side_b"}, //Shutters 2
	{ 0x034AF, "monastery_side_c"}, //Shutters 3

	{ 0x037B6, "windmill_b" }, // Windmill 1st Blade
	{ 0x037B2, "windmill_a" }, // Windmill 2nd Blade
	{ 0x000F7, "windmill"} , // Windmill 3rd Blade
	{ 0x03335, "tower_mid"}, // "First" Tower Underside
	{ 0x03412, "tower_mid_a"}, // "Second" Tower Underside
	{ 0x038A6, "tower_mid_b"}, // "Third" Tower Underside
	{ 0x038AA, "tower_mid_c"}, // "Fourth" Tower Underside
	{ 0x03E40, "hub_lights_b"}, // RGB Green
	{ 0x28B8E, "platform"}, // Maze underside
	{ 0x03BCF, "hub_walls_b"}, // Black Line Redirect
	{ 0x03E3F, "hub_lights_a"}, // RGB Red
	{ 0x03BD1, "hub_walls_c"}, // Black Line Church
	{ 0x33692, "bridge"}, // Tower Bridge
	{ 0x03BCE, "hub_walls_a"}, // Black Line Tower

	{ 0x339B6, "moriarty" }, //Eclipse
	{ 0x33A29, "burke_a" }, // Theater Window
	{ 0x33A2A, "burke_b" }, // Theater Doorway
	{ 0x33B06, "nostalghia" }, // Theater Church
	{ 0x33A20, "burke_c" }, // Walkway Flowers

	{ 0x03ABC, "banyan_a"}, // Moss Long Arch
	{ 0x03ABE, "banyan_b"}, // Moss Straight Left
	{ 0x03AC0, "banyan_c"}, // Popup Wall Moss
	{ 0x03AC4, "banyan_d"}, // Moss Short Arch
	{ 0x289F4, "forest_big"}, // Entrance
	{ 0x289F5, "forest_trail"}, // Tree Halo
	{ 0x035CB, "bamboo_a"}, // Bamboo CCW
	{ 0x035CF, "bamboo_b"}, // Bamboo CW
	{ 0x03AC5, "banyan_e"}, // Green Leaf Moss
	{ 0x03BE2, "tile_occlusion"}, // Garden Left
	{ 0x03BE3, "tile_occlusion_b"}, // Garden Right
	{ 0x0A409, "from_above"}, // Wall

	{ 0x035F5, "colored_glass_door"}, // Tinted Door
	{ 0x000D3, "flowers1"}, // Green Room Flowers

	{ 0x035DE, "flow_inward"}, // Purple Sand Bottom
	{ 0x03601, "flow_outward"}, // Purple Sand Top
	{ 0x03603, "flow_around"}, // Purple Sand Middle
	{ 0x0A304, "shapers_slide_b"}, // Sliding Bridge Right
	{ 0x0105D, "shapers_slide"}, // Sliding Bridge Left
	{ 0x03AA6, "marsh_c"}, // Cyan Underwater Sliding Bridge
	{ 0x016B2, "shapers_rotate"}, // Rotating CCW
	{ 0x036CE, "shapers_rotate_b"}, // Rotating CW
	{ 0x3365F, "b_rear"}, // Boat Rear
	{ 0x03731, "surface_angle"}, // Long Bridge Side
	{ 0x03A9E, "marsh_b"}, // Purple Underwater Right
	{ 0x03A93, "marsh_a"}, // Purple Underwater Left

	{ 0x33721, "b_front"}, // Buoy
	{ 0x220A7, "tree_bridge_a"}, // Short Bridge
	{ 0x00769, "shadow_tree_3"}, // Burned House

	{ 0x33505, "bush"}, // Bush
	{ 0x03C07, "surprise"}, // Surprise River
	{ 0x001A3, "path"}, // River
	{ 0x3370E, "top2_a"}, // Arch Black
	{ 0x336C8, "top_b"}, // Arch EGG_WHITE Right
	{ 0x3369A, "tob_a"}, // Arch EGG_WHITE Left
	{ 0x335AE, "cloud1" }, // Cloud Cycle

	{ 0x28B30, "speed_run_water" }, // Challenge Water
	{ 0x3397C, "opening" }, // Caves Skylight
	{ 0x09D63, "generated_force_bridge_a" }, // Pink Bridge
    { 0x09D5D, "generated_force_bridge_b2" }, // Orange Bridge
	{ 0x09D5E, "generated_force_bridge_b1" }, // Blue Bridge

	{ 0x28B29, "ship_positive"}, //Shipwreck Green
	{ 0x33857, "starting_wall"}, //Tutorial Wall
	{ 0x33879, "starting_wall_b"}, //Tutorial Wall Reflection
	{ 0x22106, "spec_boat"}, // Desert
	{ 0x28B2A, "ship_negative"}, //Shipwreck CW
	{ 0x03B25, "three_under"}, //Shipwreck CCW
	{ 0x03D0D, "mountain1"}, //Bunker Yellow
	{ 0x28A37, "dock_stripe_b"}, //Long Sewer
	{ 0x03C19, "start_cliff_b"}, //Tutorial Moss
	{ 0x035C9, "hub_windows"}, //Cargo
};

const inline std::map<int, int> EPtoStartPoint = {
	{ 0x01848, 0x017ed }, //First Hallway
	{ 0x33530, 0x33524 }, //Tutorial Cloud
	{ 0x33600, 0x09f65 }, //Patio Floor
	{ 0x3352F, 0x018ae }, // Gate
	{ 0x03D06, 0x03cf7 }, // Garden
	{ 0x28A2F, 0x289ce }, //Short Sewer
	{ 0x334A3, 0x33490 }, //Path
	{ 0x035C7, 0x186a1 }, //Tractor

	{ 0x28B91, 0x28b9a }, //Thundercloud

	{ 0x28B8A, 0x3379a }, //Vase
	{ 0x0332B, 0x033dc }, //Black Line Reflection
	{ 0x03367, 0x03386 }, //Black Line

	{ 0x3351D, 0x33506 }, //Sand Snake
	{ 0x0053C, 0x0073f }, //Facade Right
	{ 0x00771, 0x0073f }, //Facade Left
	{ 0x335C8, 0x274f5 }, //Stairs Left
	{ 0x335C9, 0x274f5 }, //Stairs Right
	{ 0x220E4, 0x220b1 }, //Broken Wall Straight
	{ 0x220E5, 0x220b1 }, //Broken Wall Straight
	{ 0x334B9, 0x27557 }, //Shore
	{ 0x334BC, 0x27af4 }, //Island
	{ 0x0A14C, 0x0a09f }, //Pond Room Reflection
	{ 0x0A14D, 0x0a09f }, //Pond Room Reflection Far
	{ 0x337F8, 0x337f4 }, //Flood Room
	{ 0x037BB, 0x3064b }, //Elevator

	{ 0x28A4A, 0x3067a }, //Shore
	{ 0x334B6, 0x334a6 }, //Entrance Pipe
	{ 0x28A4C, 0x3063f }, //Sand Pile
	{ 0x289CF, 0x288d0 }, //Rock Line
	{ 0x289D1, 0x288d0 }, //Rock Line
	{ 0x17CB9, 0x17dd3 }, //Railroad
	{ 0x0069D, 0x016e6 }, //Ramp
	{ 0x00614, 0x016e6 }, //Lift
	{ 0x00859, 0x0a2d9 }, //Moving Ramp
	{ 0x005F6, 0x01a96 }, //Hook
	{ 0x28A7B, 0x30670 }, //Vent

	{ 0x0053D, 0x0052d }, //Rock Shadow
	{ 0x0053E, 0x0054d }, //Beach Shadow
	{ 0x220BD, 0x220ba }, //Long Bridge

	{ 0x03E77, 0x03e03 }, //Red Flowers
	{ 0x03E7C, 0x03e3d }, //Purple Flowers

	{ 0x03B24, 0x0350d }, //Circle Near
	{ 0x03B23, 0x03500 }, //Circle Left
	{ 0x03B22, 0x03380 }, //Circle Far
	{ 0x03A79, 0x03655 }, //Stern
	{ 0x28ABD, 0x2898b }, //Rope Inner
	{ 0x28ABE, 0x28a86 }, //Rope Outer
	{ 0x3388F, 0x33886 }, // Couch

	{ 0x28AE9, 0x28a7c }, //Path
	{ 0x3348F, 0x3344f }, //Hedges
	{ 0x033BE, 0x1AE8 }, // PP1 - THIS IS THE ID OF THE PRESSURE PLATE. THE PATTERN POINT GETS REALLOCATED
	{ 0x033BF, 0x01C0D }, //PP2 - THIS IS THE ID OF THE PRESSURE PLATE. THE PATTERN POINT GETS REALLOCATED
	{ 0x033DD, 0x01DC7 }, //PP3 - THIS IS THE ID OF THE PRESSURE PLATE. THE PATTERN POINT GETS REALLOCATED
	{ 0x033E5, 0x01E12 }, //PP4 - THIS IS THE ID OF THE PRESSURE PLATE. THE PATTERN POINT GETS REALLOCATED
	{ 0x018B6, 0x01E52 }, //PP4b - THIS IS THE ID OF THE PRESSURE PLATE. THE PATTERN POINT GETS REALLOCATED

	{ 0x006E5, 0x0c138 }, //Facade Left Near
	{ 0x006E6, 0x0c138 }, //Facade Left Far Short
	{ 0x006E7, 0x0c138 }, //Facade Left Far Long
	{ 0x03DAB, 0x0c138 }, //Facade Right Near
	{ 0x03DAC, 0x0c138 }, //Facade Left Stairs
	{ 0x03DAD, 0x0c138 }, //Facade Right Stairs
	{ 0x03E01, 0x032f8 }, //Grass Stairs
	{ 0x034A7, 0x039cc }, //Shutters 1
	{ 0x034AD, 0x035b9 }, //Shutters 2
	{ 0x034AF, 0x2894e }, //Shutters 3

	{ 0x037B6, 0x17d90 }, // Windmill 1st Blade
	{ 0x037B2, 0x17d90 }, // Windmill 2nd Blade
	{ 0x000F7, 0x17d90 }, // Windmill 3rd Blade
	{ 0x03335, 0x27907 }, // "First" Tower Underside
	{ 0x03412, 0x27885 }, // "Second" Tower Underside
	{ 0x038A6, 0x278d3 }, // "Third" Tower Underside
	{ 0x038AA, 0x278f7 }, // "Fourth" Tower Underside
	{ 0x03E40, 0x33748 }, // RGB Green
	{ 0x28B8E, 0x28b8f }, // Maze underside
	{ 0x03BCF, 0x03924 }, // Black Line Redirect
	{ 0x03E3F, 0x33732 }, // RGB Red
	{ 0x03BD1, 0x03924 }, // Black Line Church
	{ 0x33692, 0x33683 }, // Tower Bridge
	{ 0x03BCE, 0x03924 }, // Black Line Tower

	{ 0x339B6, 0x339b8 }, //Eclipse
	{ 0x33A29, 0x33a10 }, // Theater Window
	{ 0x33A2A, 0x33a0c }, // Theater Doorway
	{ 0x33B06, 0x33b07 }, // Theater Church
	{ 0x33A20, 0x33a35 }, // Walkway Flowers

	{ 0x03ABC, 0x035c2 }, // Moss Long Arch
	{ 0x03ABE, 0x03a8d }, // Moss Straight Left
	{ 0x03AC0, 0x03ac9 }, // Popup Wall Moss
	{ 0x03AC4, 0x03b09 }, // Moss Short Arch
	{ 0x289F4, 0x288f2 }, // Entrance
	{ 0x289F5, 0x146d5 }, // Tree Halo
	{ 0x035CB, 0x19c9a }, // Bamboo CCW
	{ 0x035CF, 0x19c9a }, // Bamboo CW
	{ 0x03AC5, 0x03c81 }, // Green Leaf Moss
	{ 0x03BE2, 0x03a24 }, // Garden Left
	{ 0x03BE3, 0x03a24 }, // Garden Right
	{ 0x0A409, 0x0a7e7 }, // Wall

	{ 0x035F5, 0x035f1 }, // Tinted Door
	{ 0x000D3, 0x0035d }, // Green Room Flowers

	{ 0x035DE, 0x0a1bf }, // Purple Sand Bottom
	{ 0x03601, 0x0a0b2 }, // Purple Sand Top
	{ 0x03603, 0x0a0e6 }, // Purple Sand Middle
	{ 0x0A304, 0x0a3c3 }, // Sliding Bridge Right
	{ 0x0105D, 0x015f4 }, // Sliding Bridge Left
	{ 0x03AA6, 0x03799 }, // Cyan Underwater Sliding Bridge
	{ 0x016B2, 0x00791 }, // Rotating CCW
	{ 0x036CE, 0x00791 }, // Rotating CW
	{ 0x3365F, 0x3365c }, // Boat Rear
	{ 0x03731, 0x0372b }, // Long Bridge Side
	{ 0x03A9E, 0x037a2 }, // Purple Underwater Right
	{ 0x03A93, 0x0379f }, // Purple Underwater Left

	{ 0x33721, 0x3365a }, // Buoy
	{ 0x220A7, 0x22094 }, // Short Bridge
	{ 0x00769, 0x00579 }, // Burned House

	{ 0x33505, 0x334ef }, // Bush
	{ 0x03C07, 0x032f6 }, // Surprise River
	{ 0x001A3, 0x00245 }, // River
	{ 0x3370E, 0x336e6 }, // Arch Black
	{ 0x336C8, 0x3368a }, // Arch EGG_WHITE Right
	{ 0x3369A, 0x3368a }, // Arch EGG_WHITE Left
	{ 0x335AE, 0x3359c }, // Cloud Cycle

	{ 0x28B30, 0x288c7 }, // Challenge Water
	{ 0x3397C, 0x33970 }, // Caves Skylight
	{ 0x09D63, 0x2c630 }, // Pink Bridge
	{ 0x09D5D, 0x2c4b1 }, // Orange Bridge
	{ 0x09D5E, 0x2c05d }, // Blue Bridge

	{ 0x28B29, 0x035b2 }, //Shipwreck Green
	{ 0x33857, 0x336f7 }, //Tutorial Wall
	{ 0x33879, 0x33865 }, //Tutorial Wall Reflection
	{ 0x22106, 0x220e6 }, // Desert
	{ 0x28B2A, 0x28887 }, //Shipwreck CW
	{ 0x03B25, 0x03aa0 }, //Shipwreck CCW
	{ 0x03D0D, 0x03333 }, //Bunker Yellow
	{ 0x28A37, 0x289ce }, //Long Sewer
	{ 0x03C19, 0x03c46 }, //Tutorial Moss
	{ 0x035C9, 0x183f6 }, //Cargo
};

const inline std::map<int, std::vector<int>> startPointToEPs = {
	{ 0x017ed, { 0x01848 }},
{ 0x33524, { 0x33530 }},
{ 0x09f65, { 0x33600 }},
{ 0x018ae, { 0x3352F }},
{ 0x03cf7, { 0x03D06 }},
{ 0x289ce, { 0x28A2F, 0x28A37 }},
{ 0x33490, { 0x334A3 }},
{ 0x186a1, { 0x035C7 }},
{ 0x28b9a, { 0x28B91 }},
{ 0x3379a, { 0x28B8A }},
{ 0x033dc, { 0x0332B }},
{ 0x03386, { 0x03367 }},
{ 0x33506, { 0x3351D }},
{ 0x0073f, { 0x0053C, 0x00771 }},
{ 0x274f5, { 0x335C8, 0x335C9 }},
{ 0x220b1, { 0x220E4, 0x220E5 }},
{ 0x27557, { 0x334B9 }},
{ 0x27af4, { 0x334BC }},
{ 0x0a09f, { 0x0A14C, 0x0A14D }},
{ 0x337f4, { 0x337F8 }},
{ 0x3064b, { 0x037BB }},
{ 0x3067a, { 0x28A4A }},
{ 0x334a6, { 0x334B6 }},
{ 0x3063f, { 0x28A4C }},
{ 0x288d0, { 0x289CF, 0x289D1 }},
{ 0x17dd3, { 0x17CB9 }},
{ 0x016e6, { 0x0069D, 0x00614 }},
{ 0x0a2d9, { 0x00859 }},
{ 0x01a96, { 0x005F6 }},
{ 0x30670, { 0x28A7B }},
{ 0x0052d, { 0x0053D }},
{ 0x0054d, { 0x0053E }},
{ 0x220ba, { 0x220BD }},
{ 0x03e03, { 0x03E77 }},
{ 0x03e3d, { 0x03E7C }},
{ 0x0350d, { 0x03B24 }},
{ 0x03500, { 0x03B23 }},
{ 0x03380, { 0x03B22 }},
{ 0x03655, { 0x03A79 }},
{ 0x2898b, { 0x28ABD }},
{ 0x28a86, { 0x28ABE }},
{ 0x33886, { 0x3388F }},
{ 0x28a7c, { 0x28AE9 }},
{ 0x3344f, { 0x3348F }},
{ 0x1AE8 , { 0x033BE }},
{ 0x01C0D, { 0x033BF }},
{ 0x01DC7, { 0x033DD }},
{ 0x01E12, { 0x033E5 }},
{ 0x01E52, { 0x018B6 }},
{ 0x0c138, { 0x006E5, 0x006E6, 0x006E7, 0x03DAB, 0x03DAC, 0x03DAD }},
{ 0x032f8, { 0x03E01 }},
{ 0x039cc, { 0x034A7 }},
{ 0x035b9, { 0x034AD }},
{ 0x2894e, { 0x034AF }},
{ 0x17d90, { 0x037B6, 0x037B2, 0x000F7 }},
{ 0x27907, { 0x03335 }},
{ 0x27885, { 0x03412 }},
{ 0x278d3, { 0x038A6 }},
{ 0x278f7, { 0x038AA }},
{ 0x33748, { 0x03E40 }},
{ 0x28b8f, { 0x28B8E }},
{ 0x03924, { 0x03BCF, 0x03BD1, 0x03BCE }},
{ 0x33732, { 0x03E3F }},
{ 0x33683, { 0x33692 }},
{ 0x339b8, { 0x339B6 }},
{ 0x33a10, { 0x33A29 }},
{ 0x33a0c, { 0x33A2A }},
{ 0x33b07, { 0x33B06 }},
{ 0x33a35, { 0x33A20 }},
{ 0x035c2, { 0x03ABC }},
{ 0x03a8d, { 0x03ABE }},
{ 0x03ac9, { 0x03AC0 }},
{ 0x03b09, { 0x03AC4 }},
{ 0x288f2, { 0x289F4 }},
{ 0x146d5, { 0x289F5 }},
{ 0x19c9a, { 0x035CB, 0x035CF }},
{ 0x03c81, { 0x03AC5 }},
{ 0x03a24, { 0x03BE2, 0x03BE3 }},
{ 0x0a7e7, { 0x0A409 }},
{ 0x035f1, { 0x035F5 }},
{ 0x0035d, { 0x000D3 }},
{ 0x0a1bf, { 0x035DE }},
{ 0x0a0b2, { 0x03601 }},
{ 0x0a0e6, { 0x03603 }},
{ 0x0a3c3, { 0x0A304 }},
{ 0x015f4, { 0x0105D }},
{ 0x03799, { 0x03AA6 }},
{ 0x00791, { 0x016B2, 0x036CE }},
{ 0x3365c, { 0x3365F }},
{ 0x0372b, { 0x03731 }},
{ 0x037a2, { 0x03A9E }},
{ 0x0379f, { 0x03A93 }},
{ 0x3365a, { 0x33721 }},
{ 0x22094, { 0x220A7 }},
{ 0x00579, { 0x00769 }},
{ 0x334ef, { 0x33505 }},
{ 0x032f6, { 0x03C07 }},
{ 0x00245, { 0x001A3 }},
{ 0x336e6, { 0x3370E }},
{ 0x3368a, { 0x336C8, 0x3369A }},
{ 0x3359c, { 0x335AE }},
{ 0x288c7, { 0x28B30 }},
{ 0x33970, { 0x3397C }},
{ 0x2c630, { 0x09D63 }},
{ 0x2c4b1, { 0x09D5D }},
{ 0x2c05d, { 0x09D5E }},
{ 0x035b2, { 0x28B29 }},
{ 0x336f7, { 0x33857 }},
{ 0x33865, { 0x33879 }},
{ 0x220e6, { 0x22106 }},
{ 0x28887, { 0x28B2A }},
{ 0x03aa0, { 0x03B25 }},
{ 0x03333, { 0x03D0D }},
{ 0x03c46, { 0x03C19 }},
{ 0x183f6, { 0x035C9 }},
};

const inline std::map<int, int> EPtoEndPoint= {
	{ 0xd3, 0x363},
{ 0xf7, 0x18485},
{ 0x1a3, 0x34dd},
{ 0x53c, 0x740},
{ 0x53d, 0x196b7},
{ 0x53e, 0x569},
{ 0x5f6, 0x1a97},
{ 0x614, 0x184e},
{ 0x69d, 0x16e4},
{ 0x6e5, 0xcb35},
{ 0x6e6, 0x3ab1},
{ 0x6e7, 0x3bf0},
{ 0x769, 0xb87},
{ 0x771, 0x73e},
{ 0x859, 0x1a78},
{ 0x105d, 0x16da},
{ 0x16b2, 0xa1ae},
{ 0x1848, 0x17fe},
{ 0x18b6, 0x18DA}, // PP4b: This is a Pressure Plate
{ 0x332b, 0x342d},
{ 0x3335, 0x27912},
{ 0x3367, 0x1988},
{ 0x33be, 0x17DF}, // PP1: This is a Pressure Plate
{ 0x33bf, 0x1786}, // PP2: This is a Pressure Plate
{ 0x33dd, 0x18E7}, // PP3: This is a Pressure Plate
{ 0x33e5, 0x18f4}, // PP4 Left Exit (Hopefully)
{ 0x3412, 0x278be},
{ 0x34a7, 0x3cef},
{ 0x34ad, 0x3d4e},
{ 0x34af, 0x2896f},
{ 0x35c7, 0x186a3},
{ 0x35c9, 0x18419},
{ 0x35cb, 0x19ca7},
{ 0x35cf, 0x19c96},
{ 0x35de, 0xa1c1},
{ 0x35f5, 0x3c5e},
{ 0x3601, 0xa0d7},
{ 0x3603, 0xa0e7},
{ 0x36ce, 0xa1b3},
{ 0x3731, 0x37d4},
{ 0x37b2, 0x181db},
{ 0x37b6, 0x184df},
{ 0x37bb, 0x3065f},
{ 0x38a6, 0x278e7},
{ 0x38aa, 0x27902},
{ 0x3a79, 0x3a12},
{ 0x3a93, 0x37a1},
{ 0x3a9e, 0x37a6},
{ 0x3aa6, 0x379b},
{ 0x3abc, 0x3a8c},
{ 0x3abe, 0x34d6},
{ 0x3ac0, 0x3ae9},
{ 0x3ac4, 0x356f},
{ 0x3ac5, 0x3caa},
{ 0x3b22, 0x3a80},
{ 0x3b23, 0x350c},
{ 0x3b24, 0x3512},
{ 0x3b25, 0x3aa2},
{ 0x3bce, 0x399f},
{ 0x3bcf, 0x3bae},
{ 0x3bd1, 0x3bd4},
{ 0x3be2, 0x3a47},
{ 0x3be3, 0x3be1},
{ 0x3c07, 0x36d5},
{ 0x3c19, 0x3c53},
{ 0x3d06, 0x3cfe},
{ 0x3d0d, 0x3d0c},
{ 0x3dab, 0xcb46},
{ 0x3dac, 0x3d17},
{ 0x3dad, 0x3d57},
{ 0x3e01, 0x38fc},
{ 0x3e3f, 0x33743},
{ 0x3e40, 0x33758},
{ 0x3e77, 0x3e4a},
{ 0x3e7c, 0x3e50},
{ 0x9d5d, 0x2c4d5},
{ 0x9d5e, 0x2c065},
{ 0x9d63, 0x2c65b},
{ 0xa14c, 0xa0df},
{ 0xa14d, 0xa149},
{ 0xa304, 0x16da},
{ 0xa409, 0xa7f2},
{ 0x17cb9, 0x17e22},
{ 0x220a7, 0x220a4},
{ 0x220bd, 0x220a4},
{ 0x220e4, 0x220c0},
{ 0x220e5, 0x220e3},
{ 0x22106, 0x220e8},
{ 0x289cf, 0x2893e},
{ 0x289d1, 0x28994},
{ 0x289f4, 0x288f5},
{ 0x289f5, 0x149e9},
{ 0x28a2f, 0x289e3},
{ 0x28a37, 0x28a3e},
{ 0x28a4a, 0x306c1},
{ 0x28a4c, 0x30667},
{ 0x28a7b, 0x27b5f},
{ 0x28abd, 0x2898e},
{ 0x28abe, 0x28a88},
{ 0x28ae9, 0x28a7f},
{ 0x28b29, 0x3d8a},
{ 0x28b2a, 0x28b5c},
{ 0x28b30, 0x28b18},
{ 0x28b8a, 0x33799},
{ 0x28b8e, 0x28b93},
{ 0x28b91, 0x28ba0},
{ 0x3348f, 0x33461},
{ 0x334a3, 0x33492},
{ 0x334b6, 0x334b1},
{ 0x334b9, 0x27561},
{ 0x334bc, 0x27537},
{ 0x33505, 0x334f1},
{ 0x3351d, 0x33508},
{ 0x3352f, 0x33ca},
{ 0x33530, 0x33525},
{ 0x335ae, 0x335a1},
{ 0x335c8, 0x2751a},
{ 0x335c9, 0x2751a},
{ 0x33600, 0x9fe1},
{ 0x3365f, 0x33658},
{ 0x33692, 0x33689},
{ 0x3369a, 0x336b9},
{ 0x336c8, 0x336bc},
{ 0x3370e, 0x336fa},
{ 0x33721, 0x337b3},
{ 0x337f8, 0x337dd},
{ 0x33857, 0x3384f},
{ 0x33879, 0x3371a},
{ 0x3388f, 0x33898},
{ 0x3397c, 0x33972},
{ 0x339b6, 0x339b9},
{ 0x33a20, 0x33a1f},
{ 0x33a29, 0x33a26},
{ 0x33a2a, 0x33a16},
{ 0x33b06, 0x33b08},
};

const inline std::map<int, std::vector<int>> endPointToEPs = {
	{ 0x363, { 0xd3 }},
{ 0x18485, { 0xf7 }},
{ 0x34dd, { 0x1a3 }},
{ 0x740, { 0x53c }},
{ 0x196b7, { 0x53d }},
{ 0x569, { 0x53e }},
{ 0x1a97, { 0x5f6 }},
{ 0x184e, { 0x614 }},
{ 0x16e4, { 0x69d }},
{ 0xcb35, { 0x6e5 }},
{ 0x3ab1, { 0x6e6 }},
{ 0x3bf0, { 0x6e7 }},
{ 0xb87, { 0x769 }},
{ 0x73e, { 0x771 }},
{ 0x1a78, { 0x859 }},
{ 0x16da, { 0x105d, 0xa304 }},
{ 0xa1ae, { 0x16b2 }},
{ 0x17fe, { 0x1848 }},
{ 0x18DA, { 0x18b6 }},
{ 0x342d, { 0x332b }},
{ 0x27912, { 0x3335 }},
{ 0x1988, { 0x3367 }},
{ 0x17DF, { 0x33be }},
{ 0x1786, { 0x33bf }},
{ 0x18E7, { 0x33dd }},
{ 0x18f4, { 0x33e5 }},
{ 0x278be, { 0x3412 }},
{ 0x3cef, { 0x34a7 }},
{ 0x3d4e, { 0x34ad }},
{ 0x2896f, { 0x34af }},
{ 0x186a3, { 0x35c7 }},
{ 0x18419, { 0x35c9 }},
{ 0x19ca7, { 0x35cb }},
{ 0x19c96, { 0x35cf }},
{ 0xa1c1, { 0x35de }},
{ 0x3c5e, { 0x35f5 }},
{ 0xa0d7, { 0x3601 }},
{ 0xa0e7, { 0x3603 }},
{ 0xa1b3, { 0x36ce }},
{ 0x37d4, { 0x3731 }},
{ 0x181db, { 0x37b2 }},
{ 0x184df, { 0x37b6 }},
{ 0x3065f, { 0x37bb }},
{ 0x278e7, { 0x38a6 }},
{ 0x27902, { 0x38aa }},
{ 0x3a12, { 0x3a79 }},
{ 0x37a1, { 0x3a93 }},
{ 0x37a6, { 0x3a9e }},
{ 0x379b, { 0x3aa6 }},
{ 0x3a8c, { 0x3abc }},
{ 0x34d6, { 0x3abe }},
{ 0x3ae9, { 0x3ac0 }},
{ 0x356f, { 0x3ac4 }},
{ 0x3caa, { 0x3ac5 }},
{ 0x3a80, { 0x3b22 }},
{ 0x350c, { 0x3b23 }},
{ 0x3512, { 0x3b24 }},
{ 0x3aa2, { 0x3b25 }},
{ 0x399f, { 0x3bce }},
{ 0x3bae, { 0x3bcf }},
{ 0x3bd4, { 0x3bd1 }},
{ 0x3a47, { 0x3be2 }},
{ 0x3be1, { 0x3be3 }},
{ 0x36d5, { 0x3c07 }},
{ 0x3c53, { 0x3c19 }},
{ 0x3cfe, { 0x3d06 }},
{ 0x3d0c, { 0x3d0d }},
{ 0xcb46, { 0x3dab }},
{ 0x3d17, { 0x3dac }},
{ 0x3d57, { 0x3dad }},
{ 0x38fc, { 0x3e01 }},
{ 0x33743, { 0x3e3f }},
{ 0x33758, { 0x3e40 }},
{ 0x3e4a, { 0x3e77 }},
{ 0x3e50, { 0x3e7c }},
{ 0x2c4d5, { 0x9d5d }},
{ 0x2c065, { 0x9d5e }},
{ 0x2c65b, { 0x9d63 }},
{ 0xa0df, { 0xa14c }},
{ 0xa149, { 0xa14d }},
{ 0xa7f2, { 0xa409 }},
{ 0x17e22, { 0x17cb9 }},
{ 0x220a4, { 0x220a7, 0x220bd }},
{ 0x220c0, { 0x220e4 }},
{ 0x220e3, { 0x220e5 }},
{ 0x220e8, { 0x22106 }},
{ 0x2893e, { 0x289cf }},
{ 0x28994, { 0x289d1 }},
{ 0x288f5, { 0x289f4 }},
{ 0x149e9, { 0x289f5 }},
{ 0x289e3, { 0x28a2f }},
{ 0x28a3e, { 0x28a37 }},
{ 0x306c1, { 0x28a4a }},
{ 0x30667, { 0x28a4c }},
{ 0x27b5f, { 0x28a7b }},
{ 0x2898e, { 0x28abd }},
{ 0x28a88, { 0x28abe }},
{ 0x28a7f, { 0x28ae9 }},
{ 0x3d8a, { 0x28b29 }},
{ 0x28b5c, { 0x28b2a }},
{ 0x28b18, { 0x28b30 }},
{ 0x33799, { 0x28b8a }},
{ 0x28b93, { 0x28b8e }},
{ 0x28ba0, { 0x28b91 }},
{ 0x33461, { 0x3348f }},
{ 0x33492, { 0x334a3 }},
{ 0x334b1, { 0x334b6 }},
{ 0x27561, { 0x334b9 }},
{ 0x27537, { 0x334bc }},
{ 0x334f1, { 0x33505 }},
{ 0x33508, { 0x3351d }},
{ 0x33ca, { 0x3352f }},
{ 0x33525, { 0x33530 }},
{ 0x335a1, { 0x335ae }},
{ 0x2751a, { 0x335c8, 0x335c9 }},
{ 0x9fe1, { 0x33600 }},
{ 0x33658, { 0x3365f }},
{ 0x33689, { 0x33692 }},
{ 0x336b9, { 0x3369a }},
{ 0x336bc, { 0x336c8 }},
{ 0x336fa, { 0x3370e }},
{ 0x337b3, { 0x33721 }},
{ 0x337dd, { 0x337f8 }},
{ 0x3384f, { 0x33857 }},
{ 0x3371a, { 0x33879 }},
{ 0x33898, { 0x3388f }},
{ 0x33972, { 0x3397c }},
{ 0x339b9, { 0x339b6 }},
{ 0x33a1f, { 0x33a20 }},
{ 0x33a26, { 0x33a29 }},
{ 0x33a16, { 0x33a2a }},
{ 0x33b08, { 0x33b06 }},
};

const inline std::map<int, std::vector<uint8_t>> precompletableEpToPatternPointBytes = {
	{
		0x01848, {0xEE,0x17,0x00,0x00,0xDF,0x18,0x00,0x00,0xEE,0x34,0x03,0x00,0xFF,0x17,0x00,0x00}
	}, //First Hallway
	{
		0x33530, {0x25,0x35,0x03,0x00,0x29,0x35,0x03,0x00,0x34,0x35,0x03,0x00,0x28,0x35,0x03,0x00,0x33,0x35,0x03,0x00,0x27,0x35,0x03,0x00,0x35,0x35,0x03,0x00,0x2E,0x35,0x03,0x00,0x36,0x35,0x03,0x00,0x2B,0x35,0x03,0x00,0x2D,0x35,0x03,0x00,0x2C,0x35,0x03,0x00,0x2F,0x35,0x03,0x00,0x2A,0x35,0x03,0x00,0x38,0x35,0x03,0x00,0x37,0x35,0x03,0x00,0x39,0x35,0x03,0x00,0x26,0x35,0x03,0x00}
	}, //Tutorial Cloud
	{ 
		0x33600, {0x66,0x9F,0x00,0x00,0x3D,0x36,0x00,0x00,0x03,0x36,0x03,0x00,0xF6,0x35,0x03,0x00,0xF8,0x35,0x03,0x00,0xF9,0x35,0x03,0x00,0xF7,0x35,0x03,0x00,0x5F,0x9F,0x00,0x00,0x6C,0x9F,0x00,0x00,0x1E,0xE6,0x01,0x00,0x1F,0xE6,0x01,0x00,0x20,0xE6,0x01,0x00,0x21,0xE6,0x01,0x00,0x22,0xE6,0x01,0x00,0x23,0xE6,0x01,0x00,0x24,0xE6,0x01,0x00,0x25,0xE6,0x01,0x00,0x26,0xE6,0x01,0x00,0x27,0xE6,0x01,0x00,0x28,0xE6,0x01,0x00,0x29,0xE6,0x01,0x00,0x2A,0xE6,0x01,0x00,0x2B,0xE6,0x01,0x00,0x2C,0xE6,0x01,0x00,0x2D,0xE6,0x01,0x00,0x2E,0xE6,0x01,0x00,0x2F,0xE6,0x01,0x00,0x30,0xE6,0x01,0x00,0x31,0xE6,0x01,0x00,0x32,0xE6,0x01,0x00,0x72,0x9F,0x00,0x00,0xFA,0x35,0x03,0x00,0xFB,0x35,0x03,0x00,0xFD,0x35,0x03,0x00,0xFE,0x35,0x03,0x00,0xFF,0x35,0x03,0x00,0xFC,0x35,0x03,0x00,0xE2,0x9F,0x00,0x00}
	}, //Patio Floor
	{ 
		0x03D06, {0xF8,0x3C,0x00,0x00,0xF9,0x3C,0x00,0x00,0x02,0x3D,0x00,0x00,0x03,0x3D,0x00,0x00,0x01,0x3D,0x00,0x00,0xFF,0x3C,0x00,0x00}
	}, //Garden
	{ 
		0x28A2F, {0xCF,0x89,0x02,0x00,0x79,0x8A,0x02,0x00,0xE5,0x89,0x02,0x00,0x76,0x8A,0x02,0x00,0x73,0x8A,0x02,0x00,0x74,0x8A,0x02,0x00,0x00,0x8A,0x02,0x00,0x71,0x8A,0x02,0x00,0x08,0x8A,0x02,0x00,0x47,0x8D,0x03,0x00,0xE7,0x89,0x02,0x00,0xF1,0x89,0x02,0x00,0x48,0x8D,0x03,0x00,0x63,0x8A,0x02,0x00,0x46,0x8A,0x02,0x00,0x64,0x8A,0x02,0x00,0xE6,0x89,0x02,0x00,0x61,0x8A,0x02,0x00,0x4F,0x8A,0x02,0x00,0x60,0x8A,0x02,0x00,0x4E,0x8A,0x02,0x00,0x56,0x8A,0x02,0x00,0x57,0x8A,0x02,0x00,0x5D,0x8A,0x02,0x00,0x5E,0x8A,0x02,0x00,0xF2,0x89,0x02,0x00,0xE4,0x89,0x02,0x00}
	}, //Short Sewer
	{ 
		0x334A3, {0x91,0x34,0x03,0x00,0x80,0xA9,0x03,0x00,0x92,0x34,0x03,0x00,0x97,0x88,0x02,0x00,0x97,0x34,0x03,0x00,0x9D,0x34,0x03,0x00,0x9A,0x34,0x03,0x00,0x96,0x34,0x03,0x00,0x9B,0x34,0x03,0x00,0x9C,0x34,0x03,0x00,0x99,0x34,0x03,0x00,0x17,0x3B,0x03,0x00,0x9E,0x34,0x03,0x00,0x98,0x34,0x03,0x00,0x9F,0x34,0x03,0x00,0x19,0x3B,0x03,0x00,0x14,0x3B,0x03,0x00,0x16,0x3B,0x03,0x00,0x94,0x34,0x03,0x00,0xA0,0x34,0x03,0x00,0x1A,0x3B,0x03,0x00,0xA1,0x34,0x03,0x00,0x1B,0x3B,0x03,0x00,0x18,0x3B,0x03,0x00,0x95,0x34,0x03,0x00,0x13,0x3B,0x03,0x00,0xA2,0x34,0x03,0x00,0x93,0x34,0x03,0x00}
	}, //Path
	{ 
		0x035C7, {0xA2,0x86,0x01,0x00,0xA3,0x86,0x01,0x00,0xEC,0x34,0x03,0x00,0xEA,0x34,0x03,0x00,0xA4,0x86,0x01,0x00}
	}, //Tractor

	{ 
		0x28B91, {0x9B,0x8B,0x02,0x00,0xA0,0x8B,0x02,0x00,0xAE,0x8B,0x02,0x00,0xA4,0x8B,0x02,0x00,0xB0,0x8B,0x02,0x00,0xC6,0x36,0x03,0x00,0xAC,0x8B,0x02,0x00,0xAF,0x8B,0x02,0x00,0xC5,0x36,0x03,0x00,0xA3,0x8B,0x02,0x00,0xAB,0x8B,0x02,0x00,0xA5,0x8B,0x02,0x00,0xA9,0x8B,0x02,0x00,0xC4,0x36,0x03,0x00,0x42,0x8D,0x03,0x00,0xA6,0x8B,0x02,0x00,0xC2,0x36,0x03,0x00,0xC7,0x36,0x03,0x00,0xC0,0x36,0x03,0x00,0xC3,0x36,0x03,0x00,0xAA,0x8B,0x02,0x00,0xA1,0x8B,0x02,0x00}
	}, //Thundercloud

	{ 
		0x28B8A, {0x9B,0x37,0x03,0x00,0xCA,0x9D,0x03,0x00,0x9E,0x37,0x03,0x00,0x72,0x36,0x03,0x00,0x98,0x37,0x03,0x00,0x99,0x37,0x03,0x00,0x9A,0x37,0x03,0x00}
	}, //Vase
	{ 
		0x0332B, {0xDD,0x33,0x00,0x00,0x94,0x7D,0x01,0x00,0xD3,0x35,0x00,0x00,0xD4,0x35,0x00,0x00,0x88,0x81,0x01,0x00,0x87,0x81,0x01,0x00,0xDE,0x7F,0x01,0x00,0x2E,0x34,0x00,0x00}
	}, //Black Line Reflection
	{ 
		0x03367, {0x87,0x33,0x00,0x00,0x64,0x35,0x00,0x00,0xC9,0x7F,0x01,0x00,0x8B,0x19,0x00,0x00,0xBC,0x36,0x00,0x00,0x8A,0x33,0x00,0x00,0xCC,0x33,0x00,0x00,0x89,0x19,0x00,0x00}
	}, //Black Line

	{ 
		0x3351D, {0x07,0x35,0x03,0x00,0x08,0x35,0x03,0x00,0x16,0x35,0x03,0x00,0x0D,0x35,0x03,0x00,0x1D,0x35,0x03,0x00,0x09,0x8E,0x03,0x00,0x17,0x35,0x03,0x00,0x08,0x8E,0x03,0x00,0x1C,0x35,0x03,0x00,0x0E,0x35,0x03,0x00,0x04,0x8E,0x03,0x00,0x18,0x35,0x03,0x00,0x0C,0x35,0x03,0x00,0x0B,0x8E,0x03,0x00,0x19,0x35,0x03,0x00,0x0F,0x35,0x03,0x00,0x0B,0x35,0x03,0x00,0x1A,0x35,0x03,0x00,0x1B,0x35,0x03,0x00,0x10,0x35,0x03,0x00,0x15,0x35,0x03,0x00,0x0C,0x8E,0x03,0x00,0x11,0x35,0x03,0x00,0x0D,0x8E,0x03,0x00,0x12,0x35,0x03,0x00,0x0E,0x8E,0x03,0x00,0x13,0x35,0x03,0x00,0x0F,0x8E,0x03,0x00,0x10,0x8E,0x03,0x00,0x14,0x35,0x03,0x00,0x09,0x35,0x03,0x00}
	}, //Sand Snake
	{ 
		0x0053C, {0x40,0x07,0x00,0x00,0x1A,0x03,0x00,0x00,0x66,0x39,0x03,0x00,0x95,0x03,0x00,0x00,0x41,0x07,0x00,0x00}
	}, //Facade Right
	{ 
		0x00771, {0x40,0x07,0x00,0x00,0x47,0x01,0x00,0x00,0x64,0x39,0x03,0x00,0x44,0x04,0x00,0x00,0x3F,0x07,0x00,0x00}
	}, //Facade Left
	{ 
		0x335C8, {0xF6,0x74,0x02,0x00,0xF7,0x74,0x02,0x00,0xF8,0x74,0x02,0x00,0x1D,0x75,0x02,0x00,0xFE,0x74,0x02,0x00,0x68,0x39,0x03,0x00,0xC8,0x39,0x03,0x00,0xBE,0x39,0x03,0x00,0xFF,0x74,0x02,0x00,0x00,0x75,0x02,0x00,0x01,0x75,0x02,0x00,0xC0,0x35,0x03,0x00,0x6F,0x36,0x03,0x00,0xBF,0x35,0x03,0x00,0x1A,0x75,0x02,0x00,0x1B,0x75,0x02,0x00}
	}, //Stairs Left
	{ 
		0x335C9, {0xF6,0x74,0x02,0x00,0x05,0x75,0x02,0x00,0x06,0x75,0x02,0x00,0xCC,0x35,0x03,0x00,0x1D,0x75,0x02,0x00,0x07,0x75,0x02,0x00,0xB9,0x35,0x03,0x00,0x19,0x75,0x02,0x00,0xCB,0x35,0x03,0x00,0x67,0x36,0x03,0x00,0x1A,0x75,0x02,0x00,0x1B,0x75,0x02,0x00}
	}, //Stairs Right
	{
		0x220E4, {0xB2,0x20,0x02,0x00,0xC0,0x20,0x02,0x00,0x61,0x35,0x03,0x00,0x5D,0x35,0x03,0x00,0x62,0x35,0x03,0x00,0xD5,0x20,0x02,0x00,0x5E,0x35,0x03,0x00,0x5C,0x35,0x03,0x00,0x56,0x35,0x03,0x00,0x59,0x35,0x03,0x00,0x75,0x20,0x02,0x00,0xB0,0x20,0x02,0x00,0x5A,0x35,0x03,0x00,0x5B,0x35,0x03,0x00,0xD3,0x20,0x02,0x00,0xC1,0x20,0x02,0x00}
	}, //Broken Wall Straight
	{ 
		0x220E5, {0xB2,0x20,0x02,0x00,0xC0,0x20,0x02,0x00,0x61,0x35,0x03,0x00,0x5D,0x35,0x03,0x00,0x62,0x35,0x03,0x00,0xD5,0x20,0x02,0x00,0x5E,0x35,0x03,0x00,0x5C,0x35,0x03,0x00,0x56,0x35,0x03,0x00,0x59,0x35,0x03,0x00,0x73,0x20,0x02,0x00,0x53,0x35,0x03,0x00,0xD8,0x20,0x02,0x00,0x52,0x35,0x03,0x00,0xDB,0x20,0x02,0x00,0x50,0x35,0x03,0x00,0x51,0x35,0x03,0x00,0xE1,0x20,0x02,0x00,0x54,0x35,0x03,0x00,0x55,0x35,0x03,0x00,0x3E,0x35,0x03,0x00,0xCA,0xC3,0x02,0x00,0xE4,0x20,0x02,0x00}
	}, //Broken Wall Bend
	{ 
		0x334B9, {0x58,0x75,0x02,0x00,0x5A,0x75,0x02,0x00,0x63,0x75,0x02,0x00,0x5B,0x75,0x02,0x00,0x5C,0x75,0x02,0x00,0x5D,0x75,0x02,0x00,0x64,0x75,0x02,0x00,0x5E,0x75,0x02,0x00,0x5F,0x75,0x02,0x00,0x24,0x8D,0x03,0x00,0x61,0x75,0x02,0x00,0x62,0x75,0x02,0x00}
	}, //Shore
	{ 
		0x334BC, {0xF5,0x7A,0x02,0x00,0xF7,0x7A,0x02,0x00,0x25,0x8D,0x03,0x00,0xF6,0x7A,0x02,0x00,0x68,0x8E,0x03,0x00,0xE4,0x86,0x03,0x00,0x26,0x8D,0x03,0x00,0xF9,0x7A,0x02,0x00,0x69,0x8E,0x03,0x00,0x6A,0x8E,0x03,0x00,0xFA,0x7A,0x02,0x00,0xFB,0x7A,0x02,0x00,0x6B,0x8E,0x03,0x00,0x6C,0x8E,0x03,0x00,0x6D,0x8E,0x03,0x00,0x27,0x8D,0x03,0x00,0x28,0x8D,0x03,0x00,0xFC,0x7A,0x02,0x00,0x0D,0x6B,0x00,0x00,0xFD,0x7A,0x02,0x00,0x29,0x8D,0x03,0x00,0x2A,0x8D,0x03,0x00,0x06,0x7B,0x02,0x00,0x07,0x7B,0x02,0x00,0xAB,0x86,0x03,0x00,0x38,0x75,0x02,0x00}
	}, //Island
	{ 
		0x0A14C, {0xA0,0xA0,0x00,0x00,0xB0,0xA0,0x00,0x00,0xE0,0xA0,0x00,0x00}
	}, //Pond Room Reflection
	{ 
		0x0A14D, {0xA0,0xA0,0x00,0x00,0x4B,0xA1,0x00,0x00,0x4A,0xA1,0x00,0x00}
	}, //Pond Room Reflection Far
	{ 
		0x337F8, {0xF5,0x37,0x03,0x00,0xF4,0x37,0x03,0x00,0x9F,0x37,0x03,0x00,0xC6,0x37,0x03,0x00,0xC5,0x37,0x03,0x00,0xC9,0x37,0x03,0x00,0xC4,0x37,0x03,0x00,0xCB,0x37,0x03,0x00,0x5E,0x8E,0x03,0x00,0xCA,0x37,0x03,0x00,0xA6,0x37,0x03,0x00,0xD7,0x37,0x03,0x00,0x5D,0x8E,0x03,0x00,0xCD,0x37,0x03,0x00,0x5C,0x8E,0x03,0x00,0xCC,0x37,0x03,0x00,0xF7,0x37,0x03,0x00,0xD8,0x37,0x03,0x00,0xD9,0x37,0x03,0x00,0xA4,0x37,0x03,0x00,0x60,0x8E,0x03,0x00,0xDB,0x37,0x03,0x00,0xDA,0x37,0x03,0x00,0xDC,0x37,0x03,0x00,0x33,0x66,0x03,0x00,0xA3,0x37,0x03,0x00,0xDD,0x37,0x03,0x00,0xA0,0x37,0x03,0x00,0xF8,0x37,0x03,0x00,0xF2,0x37,0x03,0x00,0xF1,0x37,0x03,0x00,0x5A,0x8E,0x03,0x00,0xF0,0x37,0x03,0x00,0xF3,0x37,0x03,0x00,0xE0,0x37,0x03,0x00,0xEC,0x37,0x03,0x00,0xEF,0x37,0x03,0x00,0xEB,0x37,0x03,0x00,0xED,0x37,0x03,0x00,0xEE,0x37,0x03,0x00,0xDF,0x37,0x03,0x00,0xE2,0x37,0x03,0x00,0x5F,0x8E,0x03,0x00,0x5B,0x8E,0x03,0x00,0xE7,0x37,0x03,0x00,0xE9,0x37,0x03,0x00,0xE6,0x37,0x03,0x00,0xE8,0x37,0x03,0x00,0x5A,0xBF,0x02,0x00,0xE1,0x37,0x03,0x00,0xE5,0x37,0x03,0x00,0xE3,0x37,0x03,0x00,0xE4,0x37,0x03,0x00,0xEA,0x37,0x03,0x00,0xDE,0x37,0x03,0x00}
	}, //Flood Room
	{ 
		0x037BB, {0x4C,0x06,0x03,0x00,0x4D,0x06,0x03,0x00,0x4E,0x06,0x03,0x00,0x59,0x06,0x03,0x00,0x5A,0x06,0x03,0x00,0x50,0x39,0x03,0x00,0x90,0x3C,0x03,0x00,0x8F,0x3C,0x03,0x00,0x16,0x3A,0x03,0x00,0x92,0x3C,0x03,0x00,0x5C,0x06,0x03,0x00,0xEB,0x8D,0x03,0x00,0x82,0x35,0x03,0x00,0x83,0x35,0x03,0x00,0xEA,0x8D,0x03,0x00,0x5E,0x06,0x03,0x00,0x60,0x06,0x03,0x00}
	}, //Elevator

	{ 
		0x28A4A, {0x7B,0x06,0x03,0x00,0x7C,0x06,0x03,0x00,0x02,0x8E,0x03,0x00,0xD0,0x86,0x03,0x00,0x01,0x8E,0x03,0x00,0x7D,0x06,0x03,0x00,0x00,0x8E,0x03,0x00,0x7E,0x06,0x03,0x00,0xFF,0x8D,0x03,0x00,0xC1,0x06,0x03,0x00,0xC2,0x06,0x03,0x00}
	}, //Shore
	{ 
		0x334B6, {0xA7,0x34,0x03,0x00,0xA8,0x34,0x03,0x00,0xAB,0x34,0x03,0x00,0xAC,0x34,0x03,0x00,0xAA,0x34,0x03,0x00,0xA9,0x34,0x03,0x00,0xAF,0x34,0x03,0x00,0xED,0x86,0x03,0x00,0xB0,0x34,0x03,0x00,0xAE,0x34,0x03,0x00,0xF2,0x88,0x02,0x00,0xB6,0x34,0x03,0x00,0xB1,0x34,0x03,0x00,0xB3,0x34,0x03,0x00,0xB4,0x34,0x03,0x00,0xEE,0x86,0x03,0x00,0xB2,0x34,0x03,0x00}
	}, //Entrance Pipe
	{ 
		0x28A4C, {0x40,0x06,0x03,0x00,0x41,0x06,0x03,0x00,0x48,0x06,0x03,0x00,0x49,0x06,0x03,0x00,0x50,0x06,0x03,0x00,0x63,0x06,0x03,0x00,0x68,0x06,0x03,0x00}
	}, //Sand Pile
	{ 
		0x289CF, {0xD1,0x88,0x02,0x00,0xD2,0x88,0x02,0x00,0x26,0x89,0x02,0x00,0x00,0x89,0x02,0x00,0x05,0x89,0x02,0x00,0xE6,0x88,0x02,0x00,0x34,0x89,0x02,0x00,0xD5,0x88,0x02,0x00,0x41,0x89,0x02,0x00,0x7A,0x89,0x02,0x00,0xD1,0x8D,0x03,0x00,0x6C,0x89,0x02,0x00,0xE0,0x8D,0x03,0x00,0xAD,0x89,0x02,0x00,0x7B,0x89,0x02,0x00,0xC2,0x89,0x02,0x00,0xC6,0x89,0x02,0x00,0x99,0x3C,0x03,0x00,0x98,0x3C,0x03,0x00,0x3F,0x89,0x02,0x00}
	}, //Rock Line
	{ 
		0x289D1, {0xD1,0x88,0x02,0x00,0xD2,0x88,0x02,0x00,0x26,0x89,0x02,0x00,0x00,0x89,0x02,0x00,0x05,0x89,0x02,0x00,0xE6,0x88,0x02,0x00,0x34,0x89,0x02,0x00,0xD5,0x88,0x02,0x00,0x80,0x89,0x02,0x00,0x89,0x89,0x02,0x00,0x93,0x89,0x02,0x00,0xD6,0x8D,0x03,0x00,0xA1,0x89,0x02,0x00,0x94,0x89,0x02,0x00,0x98,0x89,0x02,0x00,0x97,0x89,0x02,0x00,0x97,0x3C,0x03,0x00,0x96,0x3C,0x03,0x00,0x95,0x89,0x02,0x00}
	}, //Rock Line Reflection
	{ 
		0x17CB9, {0xD4,0x7D,0x01,0x00,0x3D,0x35,0x03,0x00,0x42,0x35,0x03,0x00,0x84,0x81,0x01,0x00,0x7F,0x81,0x01,0x00,0x85,0x81,0x01,0x00,0x29,0x81,0x01,0x00,0x27,0x81,0x01,0x00,0x45,0x35,0x03,0x00,0x4C,0x35,0x03,0x00,0x4E,0x35,0x03,0x00,0x57,0x35,0x03,0x00,0x6C,0x35,0x03,0x00,0x6D,0x35,0x03,0x00,0x6E,0x35,0x03,0x00,0x72,0x35,0x03,0x00,0x9A,0x35,0x03,0x00,0x99,0x35,0x03,0x00,0x98,0x35,0x03,0x00,0x97,0x35,0x03,0x00,0x96,0x35,0x03,0x00,0x95,0x35,0x03,0x00,0x94,0x35,0x03,0x00,0x93,0x35,0x03,0x00,0x2A,0x81,0x01,0x00,0x23,0x7E,0x01,0x00}
	}, //Railroad
	{ 
		0x0069D, {0xE7,0x16,0x00,0x00,0xE9,0x16,0x00,0x00,0xAB,0x16,0x00,0x00,0x25,0x36,0x00,0x00,0x34,0x02,0x00,0x00,0x15,0x2A,0x03,0x00,0xE5,0x16,0x00,0x00}
	}, //Ramp
	{ 
		0x00614, {0xE7,0x16,0x00,0x00,0x82,0x16,0x00,0x00,0x52,0x18,0x00,0x00,0x26,0x36,0x00,0x00,0x27,0x36,0x00,0x00,0x70,0x16,0x00,0x00,0x4F,0x18,0x00,0x00}
	}, //Lift
	{ 
		0x00859, {0xDA,0xA2,0x00,0x00,0x8B,0x37,0x00,0x00,0x7C,0x1A,0x00,0x00,0xCC,0xC3,0x02,0x00,0x79,0x1A,0x00,0x00}
	}, //Moving Ramp
	{ 
		0x005F6, {0x97,0x1A,0x00,0x00,0x96,0x1A,0x00,0x00,0x5D,0x7C,0x01,0x00,0xCD,0x36,0x00,0x00,0xCE,0x36,0x00,0x00,0x98,0x1A,0x00,0x00}
	}, //Hook
	{ 
		0x28A7B, {0x71,0x06,0x03,0x00,0x88,0x39,0x03,0x00,0x85,0x39,0x03,0x00,0x84,0x39,0x03,0x00,0xA7,0x39,0x03,0x00,0xA6,0x39,0x03,0x00,0x79,0x06,0x03,0x00,0x81,0x39,0x03,0x00,0x82,0x39,0x03,0x00,0xC5,0x06,0x03,0x00,0x60,0x7B,0x02,0x00}
	}, //Vent

	{ 
		0x0053D, {0x2E,0x05,0x00,0x00,0x34,0x05,0x00,0x00,0x32,0x87,0x03,0x00,0x35,0x05,0x00,0x00,0x12,0x8E,0x03,0x00,0x33,0x87,0x03,0x00,0x11,0x8E,0x03,0x00,0x37,0x05,0x00,0x00,0x38,0x05,0x00,0x00,0x13,0x8E,0x03,0x00,0x39,0x05,0x00,0x00,0x14,0x8E,0x03,0x00,0x3C,0x05,0x00,0x00,0x72,0x29,0x03,0x00,0x15,0x8E,0x03,0x00,0x33,0x05,0x00,0x00,0x71,0x29,0x03,0x00,0xB8,0x96,0x01,0x00}
	}, //Rock Shadow
	{ 
		0x0053E, {0x4E,0x05,0x00,0x00,0x6B,0x05,0x00,0x00,0x94,0x3C,0x03,0x00,0x93,0x3C,0x03,0x00,0x95,0x3C,0x03,0x00,0x63,0x05,0x00,0x00,0x91,0x3C,0x03,0x00,0x89,0x88,0x03,0x00,0x7A,0xC3,0x02,0x00,0x64,0x05,0x00,0x00,0x65,0x05,0x00,0x00,0x19,0x8E,0x03,0x00,0x66,0x05,0x00,0x00,0x88,0x88,0x03,0x00,0x9E,0x38,0x00,0x00,0x1A,0x8E,0x03,0x00,0x67,0x05,0x00,0x00,0x6A,0x05,0x00,0x00}
	}, //Beach Shadow
	{ 
		0x220BD, {0xBB,0x20,0x02,0x00,0xC9,0x20,0x02,0x00,0xCA,0x20,0x02,0x00,0xC5,0x20,0x02,0x00,0xC7,0x20,0x02,0x00,0xC6,0x20,0x02,0x00,0xC8,0x20,0x02,0x00,0xC4,0x20,0x02,0x00,0xD1,0x20,0x02,0x00,0xD2,0x20,0x02,0x00,0xCB,0x20,0x02,0x00,0xD0,0x20,0x02,0x00,0xCC,0x20,0x02,0x00,0xCF,0x20,0x02,0x00,0xBD,0x20,0x02,0x00,0xA0,0x20,0x02,0x00,0x9D,0x20,0x02,0x00,0x9F,0x20,0x02,0x00,0x98,0x20,0x02,0x00,0x9C,0x20,0x02,0x00,0x99,0x20,0x02,0x00,0x9B,0x20,0x02,0x00,0x97,0x20,0x02,0x00,0xA6,0x20,0x02,0x00,0xA5,0x20,0x02,0x00}
	}, //Long Bridge

	{ 
		0x03E77, {0x04,0x3E,0x00,0x00,0xC8,0x9D,0x03,0x00,0x11,0x3E,0x00,0x00,0x73,0x8E,0x03,0x00,0x99,0x36,0x03,0x00,0x72,0x8E,0x03,0x00,0x9F,0x36,0x03,0x00,0x55,0x3E,0x00,0x00,0x74,0x8E,0x03,0x00,0x4C,0x3E,0x00,0x00,0xA0,0x36,0x03,0x00,0x68,0x3E,0x00,0x00,0x73,0x3E,0x00,0x00,0x6F,0x3E,0x00,0x00,0x75,0x8E,0x03,0x00,0x5E,0x3E,0x00,0x00,0x77,0x3E,0x00,0x00,0x56,0x3E,0x00,0x00,0x96,0x36,0x03,0x00,0x67,0x3E,0x00,0x00,0x94,0x36,0x03,0x00,0x4B,0x3E,0x00,0x00}
	}, //Red Flowers
	{ 
		0x03E7C, {0x3E,0x3E,0x00,0x00,0x5C,0xBF,0x02,0x00,0xA2,0xC3,0x02,0x00,0x48,0x3E,0x00,0x00,0x87,0x3E,0x00,0x00,0x86,0x3E,0x00,0x00,0x82,0x3E,0x00,0x00,0x85,0x3E,0x00,0x00,0x4A,0x8D,0x03,0x00,0x8C,0x3E,0x00,0x00,0x49,0x8D,0x03,0x00,0x8A,0x3E,0x00,0x00,0x4B,0x8D,0x03,0x00,0x8B,0x3E,0x00,0x00,0x4C,0x8D,0x03,0x00,0x51,0x3E,0x00,0x00}
	}, //Purple Flowers

	{ 
		0x03B24, {0x0E,0x35,0x00,0x00,0x10,0x35,0x00,0x00,0xDB,0x86,0x03,0x00,0x1A,0x35,0x00,0x00,0x15,0x35,0x00,0x00,0xB6,0x37,0x00,0x00,0x17,0x35,0x00,0x00,0xE0,0x35,0x00,0x00,0xD6,0x66,0x03,0x00,0x19,0x35,0x00,0x00,0x84,0x19,0x03,0x00,0x83,0x19,0x03,0x00,0x82,0x19,0x03,0x00,0x7E,0x19,0x03,0x00,0xDE,0x35,0x00,0x00,0x13,0x35,0x00,0x00}
	}, //Circle Near
	{ 
		0x03B23, {0x01,0x35,0x00,0x00,0x0A,0x35,0x00,0x00,0x68,0x3A,0x00,0x00,0x7B,0x3A,0x00,0x00,0x5E,0x3A,0x00,0x00,0x7C,0x3A,0x00,0x00,0x7D,0x3A,0x00,0x00,0x0D,0x35,0x00,0x00}
	}, //Circle Left
	{ 
		0x03B22, {0x81,0x33,0x00,0x00,0x97,0x33,0x00,0x00,0xDA,0x66,0x03,0x00,0xDB,0x66,0x03,0x00,0x7F,0x3A,0x00,0x00,0xD7,0x66,0x03,0x00,0xD9,0x66,0x03,0x00,0x7E,0x3A,0x00,0x00,0x82,0x3A,0x00,0x00,0x80,0x3A,0x00,0x00,0x83,0x3A,0x00,0x00,0x81,0x3A,0x00,0x00}
	}, //Circle Far
	{ 
		0x03A79, {0x56,0x36,0x00,0x00,0x0E,0x3A,0x00,0x00,0xAE,0x3A,0x00,0x00,0x1F,0x3A,0x00,0x00,0x70,0x3A,0x00,0x00,0x2B,0x8E,0x03,0x00,0x1D,0x3A,0x00,0x00,0x1E,0x3A,0x00,0x00,0x18,0x8E,0x03,0x00,0xCA,0x33,0x00,0x00,0x20,0x8E,0x03,0x00,0x71,0x3A,0x00,0x00,0x21,0x8E,0x03,0x00,0x5C,0x3A,0x00,0x00,0x22,0x8E,0x03,0x00,0x73,0x3A,0x00,0x00,0x23,0x8E,0x03,0x00,0x24,0x8E,0x03,0x00,0x72,0x3A,0x00,0x00,0x25,0x8E,0x03,0x00,0x20,0x3A,0x00,0x00,0x26,0x8E,0x03,0x00,0x27,0x8E,0x03,0x00,0x28,0x8E,0x03,0x00,0x29,0x8E,0x03,0x00,0x75,0x3A,0x00,0x00,0x2A,0x8E,0x03,0x00,0x74,0x3A,0x00,0x00,0x2C,0x8E,0x03,0x00,0x2D,0x8E,0x03,0x00,0x21,0x3A,0x00,0x00,0x2E,0x8E,0x03,0x00,0x76,0x3A,0x00,0x00,0x30,0x8E,0x03,0x00,0x77,0x3A,0x00,0x00,0xB9,0x33,0x00,0x00,0x2F,0x8E,0x03,0x00,0x6F,0x3A,0x00,0x00,0x31,0x8E,0x03,0x00,0x78,0x3A,0x00,0x00,0xBE,0x33,0x00,0x00,0x32,0x8E,0x03,0x00,0x6D,0x3A,0x00,0x00,0x58,0x34,0x00,0x00,0x33,0x8E,0x03,0x00,0x5E,0x34,0x00,0x00,0x79,0x3A,0x00,0x00,0x34,0x8E,0x03,0x00,0x13,0x3A,0x00,0x00}
	}, //Stern
	{ 
		0x28ABD, {0x8C,0x89,0x02,0x00,0x8D,0x89,0x02,0x00,0x2D,0x29,0x03,0x00,0x90,0x89,0x02,0x00,0x33,0x29,0x03,0x00,0x91,0x89,0x02,0x00,0x82,0x8A,0x02,0x00,0x92,0x89,0x02,0x00,0x9A,0x89,0x02,0x00,0x54,0x8A,0x02,0x00,0x3A,0x29,0x03,0x00,0x53,0x8A,0x02,0x00,0x5A,0x8A,0x02,0x00,0x32,0x8A,0x02,0x00,0x41,0x8A,0x02,0x00,0x36,0x29,0x03,0x00,0x0B,0x8A,0x02,0x00,0x35,0x29,0x03,0x00,0x4C,0x8A,0x02,0x00,0x34,0x29,0x03,0x00,0x0A,0x8A,0x02,0x00,0x48,0x8A,0x02,0x00,0x38,0x29,0x03,0x00,0x78,0x8A,0x02,0x00,0x66,0x8A,0x02,0x00,0x7E,0x8A,0x02,0x00,0x8F,0x89,0x02,0x00}
	}, //Rope Inner
	{ 
		0x28ABE, {0x87,0x8A,0x02,0x00,0x88,0x8A,0x02,0x00,0x3C,0x29,0x03,0x00,0x3B,0x29,0x03,0x00,0x3D,0x29,0x03,0x00,0x8B,0x8A,0x02,0x00,0x3E,0x29,0x03,0x00,0x8C,0x8A,0x02,0x00,0x3F,0x29,0x03,0x00,0x8D,0x8A,0x02,0x00,0x8E,0x8A,0x02,0x00,0x47,0x29,0x03,0x00,0x90,0x8A,0x02,0x00,0x46,0x29,0x03,0x00,0x96,0x8A,0x02,0x00,0x40,0x29,0x03,0x00,0x9C,0x8A,0x02,0x00,0x41,0x29,0x03,0x00,0x9F,0x8A,0x02,0x00,0x48,0x29,0x03,0x00,0x42,0x29,0x03,0x00,0xA0,0x8A,0x02,0x00,0x4A,0x29,0x03,0x00,0x49,0x29,0x03,0x00,0x43,0x29,0x03,0x00,0x9D,0x8A,0x02,0x00,0x4B,0x29,0x03,0x00,0x44,0x29,0x03,0x00,0x4C,0x29,0x03,0x00,0x9E,0x8A,0x02,0x00,0x45,0x29,0x03,0x00,0xA1,0x8A,0x02,0x00,0x4D,0x29,0x03,0x00,0xA2,0x8A,0x02,0x00,0x4F,0x29,0x03,0x00,0xA7,0x8A,0x02,0x00,0x50,0x29,0x03,0x00,0x51,0x29,0x03,0x00,0xA9,0x8A,0x02,0x00,0xAA,0x8A,0x02,0x00,0xAB,0x8A,0x02,0x00,0x5A,0x29,0x03,0x00,0xAC,0x8A,0x02,0x00,0x50,0x3A,0x03,0x00,0xAD,0x8A,0x02,0x00,0x51,0x3A,0x03,0x00,0xAE,0x8A,0x02,0x00,0xB6,0x8A,0x02,0x00,0x53,0x29,0x03,0x00,0x52,0x29,0x03,0x00,0xAF,0x8A,0x02,0x00,0xB5,0x8A,0x02,0x00,0xB2,0x8A,0x02,0x00,0xB3,0x8A,0x02,0x00,0x56,0x29,0x03,0x00,0x55,0x29,0x03,0x00,0x54,0x29,0x03,0x00,0xB7,0x8A,0x02,0x00,0xB8,0x8A,0x02,0x00,0x58,0x29,0x03,0x00,0x57,0x29,0x03,0x00,0xBC,0x8A,0x02,0x00,0xBD,0x8A,0x02,0x00,0x59,0x29,0x03,0x00,0xB9,0x8A,0x02,0x00,0xBA,0x8A,0x02,0x00,0x5B,0x29,0x03,0x00,0xBB,0x8A,0x02,0x00,0x5D,0x29,0x03,0x00,0x5C,0x29,0x03,0x00,0x89,0x8A,0x02,0x00}
	}, //Rope Outer

	{ 
		0x28AE9, {0x7D,0x8A,0x02,0x00,0x7F,0x8A,0x02,0x00,0x81,0x8A,0x02,0x00,0xC2,0x8D,0x03,0x00,0x92,0x8A,0x02,0x00,0xA4,0x8A,0x02,0x00,0xC4,0x8D,0x03,0x00,0xA6,0x8A,0x02,0x00,0xC8,0x8D,0x03,0x00,0x4C,0x8B,0x02,0x00,0xA8,0x8A,0x02,0x00,0xD2,0x34,0x03,0x00,0xC3,0x8A,0x02,0x00,0xD0,0x8A,0x02,0x00,0xD7,0x8A,0x02,0x00,0xC6,0x8D,0x03,0x00,0x52,0x8B,0x02,0x00,0xE0,0x8A,0x02,0x00,0xE1,0x8A,0x02,0x00,0xD8,0x8A,0x02,0x00,0xDB,0x8A,0x02,0x00,0xD1,0x34,0x03,0x00,0xDC,0x8A,0x02,0x00,0xD3,0x34,0x03,0x00,0x80,0x8A,0x02,0x00}
	}, //Path
	{ 
		0x3348F, {0x50,0x34,0x03,0x00,0x2F,0xBF,0x02,0x00,0x90,0x3A,0x03,0x00,0x35,0x3A,0x03,0x00,0x86,0x34,0x03,0x00,0x88,0x34,0x03,0x00,0x89,0x34,0x03,0x00,0xE9,0x8D,0x03,0x00,0x8A,0x34,0x03,0x00,0x30,0xBF,0x02,0x00,0x8B,0x34,0x03,0x00,0x45,0xBF,0x02,0x00,0x84,0x34,0x03,0x00,0x82,0x34,0x03,0x00,0x81,0x34,0x03,0x00,0x80,0x34,0x03,0x00,0x8E,0x34,0x03,0x00,0x7C,0x34,0x03,0x00,0xD2,0xC0,0x02,0x00,0x7B,0x34,0x03,0x00,0x7E,0x34,0x03,0x00,0x7D,0x34,0x03,0x00,0x7A,0x34,0x03,0x00,0x78,0x34,0x03,0x00,0xD4,0xC0,0x02,0x00,0x76,0x34,0x03,0x00,0xE2,0x35,0x03,0x00,0x74,0x34,0x03,0x00,0x75,0x34,0x03,0x00,0x3E,0x36,0x03,0x00,0x77,0x34,0x03,0x00,0xEB,0x35,0x03,0x00,0x73,0x34,0x03,0x00,0x71,0x34,0x03,0x00,0x72,0x34,0x03,0x00,0x70,0x34,0x03,0x00,0x6C,0x34,0x03,0x00,0x6B,0x34,0x03,0x00,0xC0,0xC3,0x02,0x00,0x6E,0x34,0x03,0x00,0x6F,0x34,0x03,0x00,0xD6,0xC0,0x02,0x00,0xC3,0xC3,0x02,0x00,0x6A,0x34,0x03,0x00,0x69,0x34,0x03,0x00,0x68,0x34,0x03,0x00,0xC4,0xC3,0x02,0x00,0x5D,0x34,0x03,0x00,0x5C,0x34,0x03,0x00,0x5B,0x34,0x03,0x00,0x65,0x34,0x03,0x00,0x5A,0x34,0x03,0x00,0x59,0x34,0x03,0x00,0x58,0x34,0x03,0x00,0x57,0x34,0x03,0x00,0xC5,0xC3,0x02,0x00,0x64,0x34,0x03,0x00,0x8F,0x34,0x03,0x00,0x53,0x34,0x03,0x00,0x55,0x34,0x03,0x00,0x61,0x34,0x03,0x00,0xC6,0xC3,0x02,0x00,0x63,0x34,0x03,0x00,0x62,0x34,0x03,0x00}
	}, //Hedges
	{ 
		0x033BE, {0xDD,0xF1,0x01,0x00,0xE0,0xF1,0x01,0x00,0xE4,0xF1,0x01,0x00,0xE8,0xF1,0x01,0x00,0xEC,0xF1,0x01,0x00,0xF2,0xF1,0x01,0x00,0xF9,0xF1,0x01,0x00,0xFF,0xF1,0x01,0x00,0x04,0xF2,0x01,0x00,0x09,0xF2,0x01,0x00,0x0E,0xF2,0x01,0x00,0x15,0xF2,0x01,0x00,0x1C,0xF2,0x01,0x00,0x26,0xF2,0x01,0x00,0x29,0xF2,0x01,0x00,0x33,0xF2,0x01,0x00,0x36,0xF2,0x01,0x00,0x3A,0xF2,0x01,0x00,0x40,0xF2,0x01,0x00,0x46,0xF2,0x01,0x00,0x4C,0xF2,0x01,0x00,0x52,0xF2,0x01,0x00,0x58,0xF2,0x01,0x00,0x61,0xF2,0x01,0x00,0x67,0xF2,0x01,0x00}
	}, //PP1
	{ 
		0x033BF, {0xB8,0xF3,0x01,0x00,0xBB,0xF3,0x01,0x00,0xD8,0xF3,0x01,0x00,0xDC,0xF3,0x01,0x00,0xDF,0xF3,0x01,0x00,0xE9,0xF3,0x01,0x00,0xF3,0xF3,0x01,0x00,0xF6,0xF3,0x01,0x00,0x00,0xF4,0x01,0x00,0x04,0xF4,0x01,0x00,0x0E,0xF4,0x01,0x00,0x1F,0xF4,0x01,0x00,0x2B,0xF4,0x01,0x00,0x33,0xF4,0x01,0x00,0x37,0xF4,0x01,0x00,0x3A,0xF4,0x01,0x00,0x40,0xF4,0x01,0x00,0x45,0xF4,0x01,0x00,0x4A,0xF4,0x01,0x00,0x50,0xF4,0x01,0x00}
	}, //PP2
	{ 
		0x033DD, {0xF3,0xF4,0x01,0x00,0xEF,0xF4,0x01,0x00,0xE2,0xF4,0x01,0x00,0xE1,0xF4,0x01,0x00,0x00,0xF5,0x01,0x00,0x03,0xF5,0x01,0x00,0x06,0xF5,0x01,0x00,0x0C,0xF5,0x01,0x00,0x0F,0xF5,0x01,0x00,0x15,0xF5,0x01,0x00,0x1C,0xF5,0x01,0x00,0x24,0xF5,0x01,0x00,0x2A,0xF5,0x01,0x00,0x30,0xF5,0x01,0x00,0x37,0xF5,0x01,0x00,0x56,0xF5,0x01,0x00,0x50,0xF5,0x01,0x00,0x4A,0xF5,0x01,0x00,0x46,0xF5,0x01,0x00,0x45,0xF5,0x01,0x00,0x6F,0xF5,0x01,0x00,0x74,0xF5,0x01,0x00}
	}, //PP3
	{ 
		0x033E5, {0xB0,0xF6,0x01,0x00,0xBA,0xF6,0x01,0x00,0xBF,0xF6,0x01,0x00,0xC6,0xF6,0x01,0x00,0xD0,0xF6,0x01,0x00,0xDA,0xF6,0x01,0x00,0xE8,0xF6,0x01,0x00,0xF2,0xF6,0x01,0x00,0xF7,0xF6,0x01,0x00,0x09,0xF7,0x01,0x00}
	}, //PP4
	{ 
		0x018B6, {0x82,0xF7,0x01,0x00,0x88,0xF7,0x01,0x00,0x90,0xF7,0x01,0x00,0x95,0xF7,0x01,0x00,0x9F,0xF7,0x01,0x00,0xA8,0xF7,0x01,0x00,0xAD,0xF7,0x01,0x00,0xB7,0xF7,0x01,0x00,0xC6,0xF7,0x01,0x00,0xCF,0xF7,0x01,0x00,0xD9,0xF7,0x01,0x00,0xE3,0xF7,0x01,0x00}
	}, //PP4b
	{ 
		0x006E5, {0x39,0xC1,0x00,0x00,0x2D,0xCB,0x00,0x00,0x2E,0xCB,0x00,0x00,0xA5,0xA1,0x00,0x00,0x2F,0xCB,0x00,0x00,0x3B,0xCB,0x00,0x00,0x30,0xCB,0x00,0x00,0x31,0xCB,0x00,0x00,0xBB,0x89,0x02,0x00,0x32,0xCB,0x00,0x00,0x36,0xCB,0x00,0x00}
	}, //Facade Left Near
	{ 
		0x006E6, {0x39,0xC1,0x00,0x00,0x2D,0xCB,0x00,0x00,0x2E,0xCB,0x00,0x00,0xA5,0xA1,0x00,0x00,0x2F,0xCB,0x00,0x00,0x3B,0xCB,0x00,0x00,0x30,0xCB,0x00,0x00,0x31,0xCB,0x00,0x00,0xBB,0x89,0x02,0x00,0x48,0xC1,0x00,0x00,0x5F,0x36,0x00,0x00,0x61,0x36,0x00,0x00,0xAA,0x3A,0x00,0x00,0xB1,0x3A,0x00,0x00,0xB2,0x3A,0x00,0x00}
	}, //Facade Left Far Short
	{ 
		0x006E7, {0x39,0xC1,0x00,0x00,0x2D,0xCB,0x00,0x00,0x2E,0xCB,0x00,0x00,0x46,0xC1,0x00,0x00,0xC0,0x89,0x02,0x00,0x48,0xC1,0x00,0x00,0x5F,0x36,0x00,0x00,0x61,0x36,0x00,0x00,0xA8,0x3A,0x00,0x00,0x08,0x37,0x00,0x00,0xB6,0x3A,0x00,0x00,0xB7,0x3A,0x00,0x00,0xC9,0x3A,0x00,0x00,0x58,0x3B,0x00,0x00,0x5A,0x3B,0x00,0x00,0xDC,0x3A,0x00,0x00,0x28,0x3B,0x00,0x00,0x29,0x3B,0x00,0x00,0x2A,0x3B,0x00,0x00,0x5F,0x3B,0x00,0x00,0xD1,0x3B,0x00,0x00,0x67,0x3B,0x00,0x00,0x84,0x3B,0x00,0x00,0x7B,0x3B,0x00,0x00,0x66,0x3C,0x00,0x00,0x76,0x3B,0x00,0x00,0xCB,0xC0,0x02,0x00,0xD7,0x3B,0x00,0x00,0xCA,0xC0,0x02,0x00,0xE5,0x3B,0x00,0x00,0xEA,0x3B,0x00,0x00,0xEE,0x3B,0x00,0x00,0xF5,0x3B,0x00,0x00,0xF1,0x3B,0x00,0x00}
	}, //Facade Left Far Long
	{ 
		0x03DAB, {0x39,0xC1,0x00,0x00,0x2D,0xCB,0x00,0x00,0xBD,0x39,0x03,0x00,0x41,0xCB,0x00,0x00,0x42,0xCB,0x00,0x00,0x43,0xCB,0x00,0x00,0xDE,0x3C,0x00,0x00,0xFA,0x3C,0x00,0x00,0x44,0xCB,0x00,0x00,0x1B,0x36,0x03,0x00,0x45,0xCB,0x00,0x00,0x46,0xCB,0x00,0x00,0xD3,0x3C,0x00,0x00,0x96,0x1A,0x03,0x00,0x47,0xCB,0x00,0x00}
	}, //Facade Right Near
	{ 
		0x03DAC, {0x39,0xC1,0x00,0x00,0x2D,0xCB,0x00,0x00,0x2E,0xCB,0x00,0x00,0x46,0xC1,0x00,0x00,0xC0,0x89,0x02,0x00,0xA1,0xA1,0x00,0x00,0xB3,0x3A,0x00,0x00,0xB3,0x3D,0x00,0x00,0x69,0x3C,0x00,0x00,0xAE,0x3B,0x00,0x00,0xB5,0x3D,0x00,0x00,0x74,0x3C,0x00,0x00,0x73,0x3C,0x00,0x00,0xB7,0x3D,0x00,0x00,0xD0,0x3C,0x00,0x00,0xD2,0x3C,0x00,0x00,0x04,0x3D,0x00,0x00,0x12,0x3D,0x00,0x00,0x16,0x3D,0x00,0x00,0x17,0x3D,0x00,0x00,0x18,0x3D,0x00,0x00}
	}, //Facade Left Stairs
	{ 
		0x03DAD, {0x39,0xC1,0x00,0x00,0x2D,0xCB,0x00,0x00,0xF0,0x32,0x00,0x00,0x23,0xA2,0x00,0x00,0x25,0xA2,0x00,0x00,0xAB,0x3D,0x00,0x00,0xB4,0x3D,0x00,0x00,0xD4,0x3B,0x00,0x00,0x7E,0x3B,0x00,0x00,0xB6,0x3D,0x00,0x00,0x41,0xBF,0x02,0x00,0x72,0x3C,0x00,0x00,0x70,0x3C,0x00,0x00,0xB8,0x3D,0x00,0x00,0xB8,0x3C,0x00,0x00,0xCF,0x3C,0x00,0x00,0xBB,0x3D,0x00,0x00,0x61,0x3D,0x00,0x00,0xBC,0x3D,0x00,0x00,0x8D,0x3D,0x00,0x00,0xCD,0x3D,0x00,0x00,0xCC,0x3D,0x00,0x00,0xA1,0x3D,0x00,0x00,0xA5,0x3D,0x00,0x00,0xCE,0x3D,0x00,0x00,0xD2,0x3D,0x00,0x00,0xA9,0x3D,0x00,0x00,0xD1,0x3D,0x00,0x00,0xDB,0x39,0x03,0x00,0xA8,0x3D,0x00,0x00,0xDF,0x39,0x03,0x00,0xDC,0x39,0x03,0x00,0xDE,0x39,0x03,0x00,0x89,0x37,0x03,0x00,0x5F,0x3D,0x00,0x00,0x60,0x3D,0x00,0x00,0x5B,0x3D,0x00,0x00,0x58,0x3D,0x00,0x00}
	}, //Facade Right Stairs
	{ 
		0x03E01, {0xF9,0x32,0x00,0x00,0xE7,0x33,0x00,0x00,0xAD,0x3C,0x00,0x00,0x6B,0x3D,0x00,0x00,0x9E,0x3D,0x00,0x00,0x9F,0x3D,0x00,0x00,0xA4,0x3D,0x00,0x00,0x8B,0x8D,0x03,0x00,0x82,0x8F,0x03,0x00,0x98,0x8D,0x03,0x00,0xDD,0x3D,0x00,0x00,0xDE,0x3D,0x00,0x00,0xDF,0x3D,0x00,0x00,0xE0,0x3D,0x00,0x00,0xE3,0x3D,0x00,0x00,0x90,0x8F,0x03,0x00,0x86,0x8F,0x03,0x00,0xEC,0x3D,0x00,0x00,0xEE,0x3D,0x00,0x00,0x84,0x8F,0x03,0x00,0xF3,0x3D,0x00,0x00,0xF4,0x3D,0x00,0x00,0xF6,0x3D,0x00,0x00,0xF7,0x3D,0x00,0x00,0xF8,0x3D,0x00,0x00,0xF9,0x3D,0x00,0x00,0xFA,0x3D,0x00,0x00,0x9A,0x8D,0x03,0x00,0x87,0x8F,0x03,0x00,0xD8,0x34,0x03,0x00,0xFB,0x3D,0x00,0x00,0x8D,0x8F,0x03,0x00,0x8E,0x8F,0x03,0x00,0xFD,0x3D,0x00,0x00,0x8F,0x8F,0x03,0x00,0x8A,0x8F,0x03,0x00,0x8B,0x8F,0x03,0x00,0x8C,0x8F,0x03,0x00,0xFE,0x3D,0x00,0x00,0x89,0x8F,0x03,0x00,0x00,0x3E,0x00,0x00,0xFD,0x38,0x00,0x00}
	}, //Grass Stairs
	{ 
		0x034A7, {0xCD,0x39,0x00,0x00,0xD1,0x3C,0x00,0x00,0x0C,0x3D,0x00,0x00,0xFC,0x8D,0x03,0x00,0x1B,0x3D,0x00,0x00,0x19,0x3D,0x00,0x00,0x1A,0x3D,0x00,0x00,0x14,0x3D,0x00,0x00,0x97,0x8E,0x03,0x00,0x27,0x3D,0x00,0x00,0x96,0x8E,0x03,0x00,0x28,0x3D,0x00,0x00,0x2B,0x3D,0x00,0x00,0x2A,0x3D,0x00,0x00,0x48,0x3D,0x00,0x00,0x2C,0x3D,0x00,0x00,0x94,0x8E,0x03,0x00,0x46,0x3D,0x00,0x00,0x47,0x3D,0x00,0x00,0x45,0x3D,0x00,0x00,0xF0,0x3C,0x00,0x00}
	}, //Shutters 1
	{ 
		0x034AD, {0xBA,0x35,0x00,0x00,0xBE,0x35,0x00,0x00,0x1C,0x87,0x03,0x00,0x1C,0x3D,0x00,0x00,0xCB,0x35,0x00,0x00,0x1E,0x3D,0x00,0x00,0x20,0x3D,0x00,0x00,0x21,0x3D,0x00,0x00,0x1F,0x3D,0x00,0x00,0x23,0x3D,0x00,0x00,0x4A,0x3D,0x00,0x00,0x49,0x3D,0x00,0x00,0x29,0x3D,0x00,0x00,0x26,0x3D,0x00,0x00,0x4B,0x3D,0x00,0x00,0x4C,0x3D,0x00,0x00,0x4D,0x3D,0x00,0x00,0x24,0x3D,0x00,0x00,0x4E,0x3D,0x00,0x00,0x54,0x3D,0x00,0x00,0x53,0x3D,0x00,0x00,0x51,0x3D,0x00,0x00,0x50,0x3D,0x00,0x00,0x52,0x3D,0x00,0x00,0x57,0x3D,0x00,0x00,0x56,0x3D,0x00,0x00,0x55,0x3D,0x00,0x00,0x4F,0x3D,0x00,0x00}
	}, //Shutters 2
	{ 
		0x034AF, {0x4F,0x89,0x02,0x00,0x50,0x89,0x02,0x00,0x86,0x89,0x02,0x00,0x82,0x89,0x02,0x00,0x88,0x89,0x02,0x00,0x81,0x89,0x02,0x00,0x8A,0x89,0x02,0x00,0x87,0x89,0x02,0x00,0x79,0x89,0x02,0x00,0xC4,0x36,0x00,0x00,0x06,0x38,0x00,0x00,0xBC,0x33,0x00,0x00,0x94,0x39,0x00,0x00,0x91,0x39,0x00,0x00,0x2A,0x39,0x00,0x00,0x93,0x39,0x00,0x00,0x2D,0x39,0x00,0x00,0x89,0x39,0x00,0x00,0x07,0x38,0x00,0x00,0x08,0x38,0x00,0x00,0x27,0x39,0x00,0x00,0x29,0x39,0x00,0x00,0x8B,0x39,0x00,0x00,0x8D,0x39,0x00,0x00,0x8E,0x39,0x00,0x00,0x90,0x39,0x00,0x00,0x70,0x89,0x02,0x00}
	}, //Shutters 3

	{ 
		0x037B6, {0x91,0x7D,0x01,0x00,0xDE,0x81,0x01,0x00,0xC6,0x7D,0x01,0x00,0xD8,0x81,0x01,0x00,0x5E,0x84,0x01,0x00,0xC0,0x3C,0x00,0x00,0x12,0x36,0x00,0x00,0xBF,0x3C,0x00,0x00,0xC9,0x3C,0x00,0x00,0xC8,0x3C,0x00,0x00,0xE7,0x84,0x01,0x00,0xE0,0x84,0x01,0x00}
	}, // Windmill 1st Blade
	{ 
		0x03335, {0x08,0x79,0x02,0x00,0x09,0x79,0x02,0x00,0x0A,0x79,0x02,0x00,0x0C,0x79,0x02,0x00,0x0B,0x79,0x02,0x00,0x0E,0x79,0x02,0x00,0x0D,0x79,0x02,0x00,0x11,0x79,0x02,0x00,0x10,0x79,0x02,0x00,0x0F,0x79,0x02,0x00,0x12,0x79,0x02,0x00,0x13,0x79,0x02,0x00}
	}, // "First Tower Underside
	{ 
		0x03412, {0x86,0x78,0x02,0x00,0x99,0x78,0x02,0x00,0x9A,0x78,0x02,0x00,0x9C,0x78,0x02,0x00,0xA6,0x78,0x02,0x00,0xAC,0x78,0x02,0x00,0xBC,0x78,0x02,0x00,0xBD,0x78,0x02,0x00,0xBE,0x78,0x02,0x00,0xBF,0x78,0x02,0x00}
	}, // "Second" Tower Underside
	{ 
		0x038A6, {0xD4,0x78,0x02,0x00,0xD7,0x78,0x02,0x00,0xDA,0x78,0x02,0x00,0xDB,0x78,0x02,0x00,0xDC,0x78,0x02,0x00,0xE6,0x78,0x02,0x00,0xE7,0x78,0x02,0x00,0xE8,0x78,0x02,0x00}
	}, // "Third" Tower Underside
	{ 
		0x038AA, {0xF8,0x78,0x02,0x00,0xFA,0x78,0x02,0x00,0x00,0x79,0x02,0x00,0xFB,0x78,0x02,0x00,0x02,0x79,0x02,0x00,0x01,0x79,0x02,0x00,0x05,0x79,0x02,0x00,0x04,0x79,0x02,0x00,0x03,0x79,0x02,0x00}
	}, // "Fourth" Tower Underside
	{ 
		0x03E40, {0x49,0x37,0x03,0x00,0x83,0xA9,0x03,0x00,0x4A,0x37,0x03,0x00,0xB4,0x8D,0x03,0x00,0x4D,0x37,0x03,0x00,0xEC,0x86,0x03,0x00,0x4C,0x37,0x03,0x00,0x4F,0x37,0x03,0x00,0x81,0xA9,0x03,0x00,0xB8,0x8D,0x03,0x00,0xBC,0x8D,0x03,0x00,0x82,0xA9,0x03,0x00,0x60,0x37,0x03,0x00,0x4B,0x37,0x03,0x00,0x51,0x37,0x03,0x00,0x52,0x37,0x03,0x00,0x53,0x37,0x03,0x00,0x57,0x37,0x03,0x00,0x56,0x37,0x03,0x00,0x55,0x37,0x03,0x00,0x58,0x37,0x03,0x00,0x54,0x37,0x03,0x00,0x61,0x37,0x03,0x00,0x62,0x37,0x03,0x00,0x5A,0x37,0x03,0x00,0x5D,0x37,0x03,0x00,0xC0,0x8D,0x03,0x00,0x5E,0x37,0x03,0x00,0x5C,0x37,0x03,0x00,0x5F,0x37,0x03,0x00,0x59,0x37,0x03,0x00}
	}, // RGB Green
	{ 
		0x28B8E, {0x90,0x8B,0x02,0x00,0x9A,0x8B,0x02,0x00,0x93,0x8B,0x02,0x00,0x91,0x8B,0x02,0x00,0x95,0x8B,0x02,0x00,0x96,0x8B,0x02,0x00,0x98,0x8B,0x02,0x00,0x94,0x8B,0x02,0x00}
	}, // Maze underside
	{ 
		0x03BCF, {0x25,0x39,0x00,0x00,0xB2,0x3B,0x00,0x00,0xCA,0x8D,0x03,0x00,0xC7,0x3B,0x00,0x00,0xB3,0x8D,0x03,0x00,0xC6,0x3B,0x00,0x00,0xCC,0x8D,0x03,0x00,0xCD,0x8D,0x03,0x00,0xCE,0x8D,0x03,0x00,0xC8,0x3B,0x00,0x00,0xC4,0x3B,0x00,0x00,0xBA,0xC3,0x02,0x00,0xCC,0x3B,0x00,0x00,0xBB,0xC3,0x02,0x00,0xBB,0x3B,0x00,0x00,0xC2,0x3B,0x00,0x00,0xCB,0x3B,0x00,0x00,0xB3,0x3B,0x00,0x00,0xBC,0xC3,0x02,0x00,0xCA,0x3B,0x00,0x00,0xBF,0xC3,0x02,0x00,0xC1,0xC3,0x02,0x00,0xB4,0x3B,0x00,0x00,0xB5,0x3B,0x00,0x00,0xBD,0xC3,0x02,0x00,0xBE,0xC3,0x02,0x00,0xB8,0x3B,0x00,0x00,0xD0,0x8D,0x03,0x00,0xCF,0x8D,0x03,0x00,0xC9,0x3B,0x00,0x00,0xB6,0x3B,0x00,0x00,0x22,0x36,0x03,0x00,0xD5,0x8D,0x03,0x00,0xD4,0x8D,0x03,0x00,0xAF,0x3B,0x00,0x00}
	}, // Black Line Redirect
	{ 
		0x03E3F, {0x33,0x37,0x03,0x00,0x34,0x37,0x03,0x00,0x94,0x8D,0x03,0x00,0x36,0x37,0x03,0x00,0x37,0x37,0x03,0x00,0x35,0x37,0x03,0x00,0x38,0x37,0x03,0x00,0x39,0x37,0x03,0x00,0x3C,0x37,0x03,0x00,0x42,0x37,0x03,0x00,0x40,0x37,0x03,0x00,0x41,0x37,0x03,0x00,0x3D,0x37,0x03,0x00,0x3F,0x37,0x03,0x00,0x3E,0x37,0x03,0x00,0x43,0x37,0x03,0x00,0x48,0x37,0x03,0x00,0x45,0x37,0x03,0x00,0x47,0x37,0x03,0x00,0x46,0x37,0x03,0x00,0x44,0x37,0x03,0x00}
	}, // RGB Red
	{ 
		0x03BD1, {0x25,0x39,0x00,0x00,0x95,0x39,0x00,0x00,0xCE,0x3B,0x00,0x00,0xA1,0xC3,0x02,0x00,0x31,0x3B,0x00,0x00,0x97,0x3B,0x00,0x00,0x98,0x3B,0x00,0x00,0x21,0x36,0x03,0x00,0xD3,0x3B,0x00,0x00,0xD6,0x3B,0x00,0x00,0xA9,0xC3,0x02,0x00,0xD8,0x8D,0x03,0x00,0xE8,0x3B,0x00,0x00,0xD7,0x8D,0x03,0x00,0xA3,0xC3,0x02,0x00,0xDD,0x3B,0x00,0x00,0xA4,0xC3,0x02,0x00,0xA5,0xC3,0x02,0x00,0xD9,0x8D,0x03,0x00,0xDA,0x8D,0x03,0x00,0x20,0x36,0x03,0x00,0xA6,0xC3,0x02,0x00,0xD9,0x3B,0x00,0x00,0xA7,0xC3,0x02,0x00,0xA8,0xC3,0x02,0x00,0xE9,0x3B,0x00,0x00,0xAA,0xC3,0x02,0x00,0xAB,0xC3,0x02,0x00,0xED,0x3B,0x00,0x00,0xDC,0x8D,0x03,0x00,0xDE,0x8D,0x03,0x00,0xDD,0x8D,0x03,0x00,0xDB,0x8D,0x03,0x00,0xDF,0x8D,0x03,0x00,0xEC,0x3B,0x00,0x00,0xAC,0xC3,0x02,0x00,0x01,0x3C,0x00,0x00,0xE2,0x8D,0x03,0x00,0xE4,0x8D,0x03,0x00,0xE3,0x8D,0x03,0x00,0xAE,0xC3,0x02,0x00,0xEB,0x3B,0x00,0x00,0xAF,0xC3,0x02,0x00,0xF2,0x3B,0x00,0x00,0xB0,0xC3,0x02,0x00,0xB1,0xC3,0x02,0x00,0xF0,0x3B,0x00,0x00,0xEF,0x3B,0x00,0x00,0xB2,0xC3,0x02,0x00,0xE6,0x8D,0x03,0x00,0xF9,0x3B,0x00,0x00,0xF6,0x3B,0x00,0x00,0xB3,0xC3,0x02,0x00,0xF3,0x3B,0x00,0x00,0xE5,0x8D,0x03,0x00,0xD5,0x3B,0x00,0x00}
	}, // Black Line Church
	{ 
		0x33692, {0x84,0x36,0x03,0x00,0x85,0x36,0x03,0x00,0x89,0x36,0x03,0x00,0x8E,0x36,0x03,0x00,0x90,0x36,0x03,0x00,0x91,0x36,0x03,0x00,0x8F,0x36,0x03,0x00,0x92,0x36,0x03,0x00,0x88,0x36,0x03,0x00,0x8D,0x36,0x03,0x00,0x8C,0x36,0x03,0x00,0x8A,0x36,0x03,0x00}
	}, // Tower Bridge
	{ 
		0x03BCE, {0x25,0x39,0x00,0x00,0x95,0x39,0x00,0x00,0xCE,0x3B,0x00,0x00,0xA1,0xC3,0x02,0x00,0x31,0x3B,0x00,0x00,0x97,0x3B,0x00,0x00,0x98,0x3B,0x00,0x00,0x80,0xC3,0x02,0x00,0xA0,0x3B,0x00,0x00,0xC9,0x8D,0x03,0x00,0x9C,0xC3,0x02,0x00,0x9E,0xC3,0x02,0x00,0x9F,0xC3,0x02,0x00,0xA9,0x3B,0x00,0x00,0xAD,0x3B,0x00,0x00,0xB7,0xC3,0x02,0x00,0xA0,0xC3,0x02,0x00,0xC7,0x8D,0x03,0x00,0xAA,0x3B,0x00,0x00,0xB8,0xC3,0x02,0x00,0xAB,0x3B,0x00,0x00,0xA0,0x39,0x00,0x00}
	}, // Black Line Tower

	{
		0x339B6, {0xB9,0x39,0x03,0x00,0xC2,0x39,0x03,0x00,0xC4,0x39,0x03,0x00,0xEA,0xC0,0x02,0x00,0xE9,0xC0,0x02,0x00,0x7E,0x29,0x03,0x00,0xC3,0x39,0x03,0x00,0xD0,0x39,0x03,0x00,0x3B,0x3A,0x03,0x00,0x3A,0x3A,0x03,0x00,0x3F,0x3A,0x03,0x00,0x37,0x3A,0x03,0x00,0x40,0x3A,0x03,0x00,0x38,0x3A,0x03,0x00,0x3E,0x3A,0x03,0x00,0x39,0x3A,0x03,0x00,0x42,0x3A,0x03,0x00,0x4B,0x3A,0x03,0x00,0x3C,0x3A,0x03,0x00,0x49,0x3A,0x03,0x00,0x4A,0x3A,0x03,0x00,0x44,0x3A,0x03,0x00,0x4C,0x3A,0x03,0x00,0xC5,0x39,0x03,0x00,0xCD,0x39,0x03,0x00,0x45,0x3A,0x03,0x00,0x48,0x3A,0x03,0x00,0x47,0x3A,0x03,0x00,0xCC,0x39,0x03,0x00,0x46,0x3A,0x03,0x00,0x4D,0x3A,0x03,0x00,0x4E,0x3A,0x03,0x00,0xCE,0x39,0x03,0x00,0x43,0x3A,0x03,0x00,0xBA,0x39,0x03,0x00 }
	}, //Eclipse
	{
		0x33A29, {0x11,0x3A,0x03,0x00,0x25,0x3A,0x03,0x00,0x24,0x3A,0x03,0x00,0x29,0x3A,0x03,0x00,0x28,0x3A,0x03,0x00,0x27,0x3A,0x03,0x00}
	}, // Theater Window
	{
		0x33A2A, {0x0D,0x3A,0x03,0x00,0x1B,0x3A,0x03,0x00,0x19,0x3A,0x03,0x00,0x1A,0x3A,0x03,0x00,0x1C,0x3A,0x03,0x00,0x17,0x3A,0x03,0x00}
	}, // Theater Doorway
	{
		0x33B06, {0x08,0x3B,0x03,0x00,0x0A,0x3B,0x03,0x00,0x0D,0x3B,0x03,0x00,0x0C,0x3B,0x03,0x00,0x0B,0x3B,0x03,0x00,0x0E,0x3B,0x03,0x00,0x09,0x3B,0x03,0x00 }
	}, // Theater Church

	{
		0x03ABC, {0xC3,0x35,0x00,0x00,0x26,0xBF,0x02,0x00,0x03,0x8E,0x03,0x00,0x0A,0x8E,0x03,0x00,0x67,0x35,0x00,0x00,0x66,0x35,0x00,0x00,0x6E,0x37,0x00,0x00,0x14,0x29,0x03,0x00,0x30,0x87,0x03,0x00,0x2F,0x87,0x03,0x00,0x05,0x3A,0x00,0x00,0xFB,0x36,0x00,0x00,0x42,0x3A,0x00,0x00,0x68,0x35,0x00,0x00,0x15,0x29,0x03,0x00,0x00,0x37,0x00,0x00,0x18,0x29,0x03,0x00,0x4F,0x3A,0x00,0x00,0xC6,0x36,0x00,0x00,0x17,0x29,0x03,0x00,0x50,0x3A,0x00,0x00,0x72,0x35,0x00,0x00,0xCA,0x34,0x00,0x00,0x86,0x3A,0x00,0x00,0x8A,0x3A,0x00,0x00,0x75,0x35,0x00,0x00,0x8B,0x3A,0x00,0x00,0xC6,0x34,0x00,0x00,0xC7,0x34,0x00,0x00,0xC9,0x34,0x00,0x00,0x12,0x29,0x03,0x00,0x13,0x29,0x03,0x00,0xC4,0x34,0x00,0x00,0x8D,0x3A,0x00,0x00}
	}, // Moss Long Arch
	{ 
		0x03ABE, {0x8E,0x3A,0x00,0x00,0xCE,0x86,0x03,0x00,0xBB,0x3A,0x00,0x00,0xA6,0x39,0x00,0x00,0x73,0x35,0x00,0x00,0x2C,0x8D,0x03,0x00,0x6C,0x37,0x00,0x00,0xCB,0x39,0x00,0x00,0x00,0x3B,0x00,0x00,0xF7,0x3A,0x00,0x00,0x09,0x3B,0x00,0x00,0xED,0x3A,0x00,0x00,0xEE,0x3A,0x00,0x00,0xEF,0x3A,0x00,0x00,0xF0,0x3A,0x00,0x00,0x74,0x35,0x00,0x00,0x35,0x8D,0x03,0x00,0xF2,0x3A,0x00,0x00,0x2F,0x8D,0x03,0x00,0x33,0x8D,0x03,0x00,0xF3,0x3A,0x00,0x00,0xF4,0x3A,0x00,0x00,0x9D,0xD8,0x03,0x00,0x65,0x35,0x00,0x00,0xD1,0x34,0x00,0x00,0x9C,0x35,0x00,0x00,0x32,0x8D,0x03,0x00,0xD3,0x34,0x00,0x00,0xD2,0x34,0x00,0x00,0xB0,0x35,0x00,0x00,0x34,0x8D,0x03,0x00,0x22,0x36,0x00,0x00,0xC6,0x35,0x00,0x00,0xD7,0x34,0x00,0x00}
	}, // Moss Straight Left
	{ 
		0x03AC0, {0xCA,0x3A,0x00,0x00,0xCC,0x3A,0x00,0x00,0xCF,0x3A,0x00,0x00,0x77,0x35,0x00,0x00,0x78,0x35,0x00,0x00,0xD9,0x3A,0x00,0x00,0xDB,0x3A,0x00,0x00,0x36,0x8D,0x03,0x00,0xDD,0x3A,0x00,0x00,0xDE,0x3A,0x00,0x00,0x37,0x8D,0x03,0x00,0x3D,0x35,0x00,0x00,0x38,0x8D,0x03,0x00,0xDF,0x3A,0x00,0x00,0x1D,0x87,0x03,0x00,0xEB,0x3A,0x00,0x00,0x39,0x8D,0x03,0x00,0xE0,0x3A,0x00,0x00,0x1E,0x87,0x03,0x00,0xE2,0x3A,0x00,0x00,0xE4,0x3A,0x00,0x00,0x3A,0x8D,0x03,0x00,0x7B,0x35,0x00,0x00,0xE6,0x3A,0x00,0x00,0xE8,0x3A,0x00,0x00,0xEA,0x3A,0x00,0x00}
	}, // Popup Wall Moss
	{ 
		0x03AC4, {0x0A,0x3B,0x00,0x00,0x64,0x3C,0x00,0x00,0x67,0x3C,0x00,0x00,0x16,0x29,0x03,0x00,0x6D,0x3C,0x00,0x00,0x3C,0x8D,0x03,0x00,0x6E,0x3C,0x00,0x00,0x79,0x3C,0x00,0x00,0x68,0x35,0x00,0x00,0x15,0x29,0x03,0x00,0x00,0x37,0x00,0x00,0x18,0x29,0x03,0x00,0x4F,0x3A,0x00,0x00,0xC6,0x36,0x00,0x00,0x17,0x29,0x03,0x00,0x50,0x3A,0x00,0x00,0x72,0x35,0x00,0x00,0x71,0x35,0x00,0x00,0x6E,0x35,0x00,0x00,0x2D,0x87,0x03,0x00,0x70,0x35,0x00,0x00}
	}, // Moss Short Arch
	{	
		0x289F4, {0xF3,0x88,0x02,0x00,0xF5,0x88,0x02,0x00,0x91,0x8D,0x03,0x00,0xAA,0x89,0x02,0x00,0xF9,0x88,0x02,0x00,0xAB,0x89,0x02,0x00,0xB4,0x89,0x02,0x00,0x93,0x8D,0x03,0x00,0xB3,0x89,0x02,0x00,0xB5,0x89,0x02,0x00,0x90,0x8D,0x03,0x00,0xEE,0x89,0x02,0x00,0xEB,0x89,0x02,0x00,0xB6,0x89,0x02,0x00,0xEA,0x89,0x02,0x00,0xE9,0x89,0x02,0x00,0xD6,0x89,0x02,0x00,0x92,0x8D,0x03,0x00,0xBA,0x89,0x02,0x00,0xD5,0x89,0x02,0x00,0xD3,0x89,0x02,0x00,0xBD,0x89,0x02,0x00,0xC9,0x89,0x02,0x00,0xF6,0x88,0x02,0x00}
	}, // Entrance
	{ 
		0x289F5, {0xD6,0x46,0x01,0x00,0xD1,0x47,0x01,0x00,0xE2,0x47,0x01,0x00,0xE6,0x47,0x01,0x00,0xE7,0x47,0x01,0x00,0xE9,0x47,0x01,0x00,0x6E,0x8A,0x02,0x00,0x03,0x8A,0x02,0x00,0xEA,0x47,0x01,0x00,0x01,0x8A,0x02,0x00,0xF8,0x89,0x02,0x00,0xF2,0x47,0x01,0x00,0xF9,0x89,0x02,0x00,0x5B,0x8A,0x02,0x00,0x42,0x49,0x01,0x00,0xFD,0x89,0x02,0x00,0x46,0x49,0x01,0x00,0x7A,0x48,0x01,0x00,0x7E,0x48,0x01,0x00,0x80,0x48,0x01,0x00,0x81,0x48,0x01,0x00,0xC3,0x4A,0x01,0x00,0xD0,0x4A,0x01,0x00,0xFE,0x4A,0x01,0x00,0xFF,0x4A,0x01,0x00,0x97,0x8D,0x03,0x00,0xEC,0x46,0x01,0x00,0xEF,0x46,0x01,0x00,0x95,0x8D,0x03,0x00,0x04,0x8A,0x02,0x00,0xF2,0x46,0x01,0x00,0x00,0x4B,0x01,0x00,0x01,0x4B,0x01,0x00,0x05,0x8A,0x02,0x00,0x82,0x48,0x01,0x00,0x4B,0x49,0x01,0x00,0xC9,0xC3,0x02,0x00,0x4D,0x49,0x01,0x00,0x07,0x8A,0x02,0x00,0x96,0x8D,0x03,0x00,0x06,0x8A,0x02,0x00,0xC8,0xC3,0x02,0x00,0x66,0x49,0x01,0x00,0x51,0x49,0x01,0x00,0x59,0x8A,0x02,0x00,0x53,0x49,0x01,0x00,0xA6,0x49,0x01,0x00,0xDE,0x49,0x01,0x00,0xE9,0x49,0x01,0x00,0xBE,0x44,0x01,0x00,0xEA,0x46,0x01,0x00,0xEA,0x49,0x01,0x00}
	}, // Tree Halo
	{ 
		0x035CB, {0x9B,0x9C,0x01,0x00,0x9C,0x9C,0x01,0x00,0x9D,0x9C,0x01,0x00,0x9E,0x9C,0x01,0x00,0x9F,0x9C,0x01,0x00,0xA0,0x9C,0x01,0x00,0xA1,0x9C,0x01,0x00,0xA2,0x9C,0x01,0x00,0xA3,0x9C,0x01,0x00,0xA4,0x9C,0x01,0x00,0xA5,0x9C,0x01,0x00,0xA6,0x9C,0x01,0x00,0xA7,0x9C,0x01,0x00,0xA8,0x9C,0x01,0x00}
	}, // Bamboo CCW
	{ 
		0x035CF, {0x9B,0x9C,0x01,0x00,0x8B,0x9C,0x01,0x00,0x8C,0x9C,0x01,0x00,0x8D,0x9C,0x01,0x00,0x8E,0x9C,0x01,0x00,0x2A,0x8C,0x03,0x00,0x8F,0x9C,0x01,0x00,0x2D,0x8D,0x03,0x00,0x90,0x9C,0x01,0x00,0x91,0x9C,0x01,0x00,0x92,0x9C,0x01,0x00,0x93,0x9C,0x01,0x00,0x94,0x9C,0x01,0x00,0x95,0x9C,0x01,0x00,0x96,0x9C,0x01,0x00,0x97,0x9C,0x01,0x00}
	}, // Bamboo CW
	{ 
		0x03AC5, {0x82,0x3C,0x00,0x00,0x83,0x3C,0x00,0x00,0x84,0x3C,0x00,0x00,0x8E,0x3C,0x00,0x00,0x90,0x3C,0x00,0x00,0x91,0x3C,0x00,0x00,0x92,0x3C,0x00,0x00,0x93,0x3C,0x00,0x00,0x94,0x3C,0x00,0x00,0x95,0x3C,0x00,0x00,0x96,0x3C,0x00,0x00,0x97,0x3C,0x00,0x00,0x98,0x3C,0x00,0x00,0x9A,0x3C,0x00,0x00,0x9B,0x3C,0x00,0x00,0x9C,0x3C,0x00,0x00,0xCE,0xC3,0x02,0x00,0x9D,0x3C,0x00,0x00,0x9E,0x3C,0x00,0x00,0x96,0x35,0x00,0x00,0xAC,0x3C,0x00,0x00,0x9F,0x3C,0x00,0x00,0xA0,0x3C,0x00,0x00,0xA2,0x3C,0x00,0x00,0x22,0xBF,0x02,0x00,0xA1,0x3C,0x00,0x00,0x23,0xBF,0x02,0x00,0xA3,0x3C,0x00,0x00,0xA5,0x3C,0x00,0x00,0xAA,0x3C,0x00,0x00,0xAB,0x3C,0x00,0x00}
	}, // Green Leaf Moss
	{ 
		0x03BE2, {0x25,0x3A,0x00,0x00,0x32,0x3A,0x00,0x00,0x51,0x87,0x03,0x00,0x33,0x3A,0x00,0x00,0x34,0x3A,0x00,0x00,0x35,0x3A,0x00,0x00,0x38,0x3A,0x00,0x00,0x39,0x3A,0x00,0x00,0x3A,0x3A,0x00,0x00,0x3B,0x3A,0x00,0x00,0xC2,0x37,0x00,0x00,0x3C,0x3A,0x00,0x00,0x52,0x87,0x03,0x00,0x48,0x3A,0x00,0x00}
	}, // Garden Left
	{ 
		0x03BE3, {0x25,0x3A,0x00,0x00,0x32,0x3A,0x00,0x00,0x51,0x87,0x03,0x00,0x33,0x3A,0x00,0x00,0x34,0x3A,0x00,0x00,0x56,0x3A,0x00,0x00,0x57,0x3A,0x00,0x00,0xD8,0x3B,0x00,0x00,0x4A,0x8E,0x03,0x00,0xDA,0x3B,0x00,0x00,0xDB,0x3B,0x00,0x00,0x4B,0x8E,0x03,0x00,0xDC,0x3B,0x00,0x00,0x40,0x8E,0x03,0x00,0xC5,0x36,0x00,0x00,0x3F,0x8E,0x03,0x00,0xDE,0x3B,0x00,0x00,0xDF,0x3B,0x00,0x00,0xE0,0x3B,0x00,0x00,0xBB,0x37,0x00,0x00,0x43,0x8E,0x03,0x00,0x04,0x38,0x00,0x00,0x01,0x38,0x00,0x00,0x53,0x87,0x03,0x00,0xE1,0x3B,0x00,0x00,0xE2,0x3B,0x00,0x00}
	}, // Garden Right
	{ 
		0x0A409, {0xE8,0xA7,0x00,0x00,0xEA,0xA7,0x00,0x00,0x85,0xA9,0x03,0x00,0xEB,0xA7,0x00,0x00,0xE2,0xA1,0x00,0x00,0x09,0xA4,0x00,0x00,0xEC,0xA7,0x00,0x00,0xED,0xA7,0x00,0x00,0xF7,0xA7,0x00,0x00,0xEE,0xA7,0x00,0x00,0xEF,0xA7,0x00,0x00,0xF5,0xA7,0x00,0x00,0xF0,0xA7,0x00,0x00,0xF1,0xA7,0x00,0x00,0xF4,0xA7,0x00,0x00,0xF2,0xA7,0x00,0x00,0xF3,0xA7,0x00,0x00}
	}, // Wall

	{ 
		0x035F5, {0xF2,0x35,0x00,0x00,0xC9,0xC0,0x02,0x00,0xF5,0x35,0x00,0x00,0xF7,0x35,0x00,0x00,0xFC,0x35,0x00,0x00,0x5E,0x36,0x00,0x00,0x66,0x36,0x00,0x00,0x59,0x3C,0x00,0x00,0x5A,0x3C,0x00,0x00,0x5B,0x3C,0x00,0x00,0x60,0x3C,0x00,0x00,0x5E,0x3C,0x00,0x00,0x5F,0x3C,0x00,0x00}
	}, // Tinted Door
	{ 
		0x000D3, {0x5E,0x03,0x00,0x00,0x5F,0x03,0x00,0x00,0x60,0x03,0x00,0x00,0x48,0x7F,0x01,0x00,0x8C,0x8D,0x03,0x00,0x61,0x03,0x00,0x00,0x5C,0x7F,0x01,0x00,0x98,0x7F,0x01,0x00,0x09,0x35,0x00,0x00,0xF9,0x86,0x03,0x00,0x86,0x36,0x00,0x00,0xAD,0x36,0x00,0x00,0x62,0x03,0x00,0x00,0x70,0x7F,0x01,0x00,0x8D,0x8D,0x03,0x00,0x63,0x03,0x00,0x00,0x8E,0x8D,0x03,0x00,0xA2,0x7F,0x01,0x00,0x61,0x33,0x00,0x00,0xF0,0x34,0x00,0x00,0x8F,0x8D,0x03,0x00,0xAF,0x34,0x00,0x00,0x64,0x03,0x00,0x00}
	}, // Green Room Flowers

	{ 
		0x035DE, {0xC0,0xA1,0x00,0x00,0xC1,0xA1,0x00,0x00,0x7E,0x8D,0x03,0x00,0x33,0x9F,0x00,0x00,0x87,0x8B,0x03,0x00,0xCD,0xA1,0x00,0x00,0x7F,0x8D,0x03,0x00,0xC5,0xA1,0x00,0x00,0x81,0x8D,0x03,0x00,0xF4,0x86,0x03,0x00,0xEB,0x13,0x03,0x00,0xC4,0xA1,0x00,0x00,0x86,0x8B,0x03,0x00,0x80,0x8D,0x03,0x00,0xC2,0xA1,0x00,0x00}
	}, // Purple Sand Bottom
	{ 
		0x03601, {0xB3,0xA0,0x00,0x00,0xBA,0xA0,0x00,0x00,0x32,0x9F,0x00,0x00,0x83,0x8D,0x03,0x00,0xC4,0xA0,0x00,0x00,0x86,0x8D,0x03,0x00,0x84,0x8D,0x03,0x00,0x87,0x8D,0x03,0x00,0xCC,0xA0,0x00,0x00,0x85,0x8D,0x03,0x00,0x88,0x8D,0x03,0x00,0xD3,0xA0,0x00,0x00,0x8A,0x8D,0x03,0x00,0xDB,0xA0,0x00,0x00,0x89,0x8D,0x03,0x00,0xD8,0xA0,0x00,0x00}
	}, // Purple Sand Top
	{ 
		0x03603, {0xE7,0xA0,0x00,0x00,0xFB,0xA0,0x00,0x00,0x27,0x36,0x03,0x00,0x1D,0x9F,0x00,0x00,0x26,0x36,0x03,0x00,0x06,0xA1,0x00,0x00,0x24,0x36,0x03,0x00,0x05,0xA1,0x00,0x00,0x82,0x8D,0x03,0x00,0x25,0x36,0x03,0x00,0x03,0xA1,0x00,0x00,0x28,0x36,0x03,0x00,0x00,0xA1,0x00,0x00,0x29,0x36,0x03,0x00,0x6F,0xA0,0x00,0x00,0xFF,0xA0,0x00,0x00,0x2B,0x36,0x03,0x00,0x2A,0x36,0x03,0x00,0xE8,0xA0,0x00,0x00}
	}, // Purple Sand Middle
	{ 
		0x0A304, {0xC4,0xA3,0x00,0x00,0xCA,0xA3,0x00,0x00,0x08,0x35,0x00,0x00,0xDB,0x34,0x00,0x00,0xEF,0x34,0x00,0x00,0xD3,0xA3,0x00,0x00,0xD2,0xA3,0x00,0x00,0xD4,0xA3,0x00,0x00,0xCB,0xA3,0x00,0x00,0x89,0xA1,0x00,0x00,0xDB,0x16,0x00,0x00}
	}, // Sliding Bridge Right
	{ 
		0x0105D, {0xF5,0x15,0x00,0x00,0x27,0xBF,0x02,0x00,0x21,0x16,0x00,0x00,0x8B,0xA1,0x00,0x00,0x8A,0xA1,0x00,0x00,0x8C,0xA1,0x00,0x00,0x89,0xA1,0x00,0x00,0xDB,0x16,0x00,0x00}
	}, // Sliding Bridge Left
	{ 
		0x03AA6, {0x9A,0x37,0x00,0x00,0x9B,0x37,0x00,0x00,0xD2,0x8D,0x03,0x00,0x08,0x36,0x03,0x00,0x07,0x36,0x03,0x00,0x09,0x36,0x03,0x00,0x0A,0x36,0x03,0x00,0x06,0x36,0x03,0x00,0x05,0x36,0x03,0x00,0x1F,0x35,0x03,0x00,0x0E,0x36,0x03,0x00,0xE7,0x8D,0x03,0x00,0x0D,0x36,0x03,0x00,0x0B,0x36,0x03,0x00,0x9C,0x37,0x00,0x00}
	}, // Cyan Underwater Sliding Bridge
	{ 
		0x016B2, {0x92,0x07,0x00,0x00,0x92,0xA1,0x00,0x00,0xA2,0x07,0x00,0x00,0x22,0x29,0x03,0x00,0xA4,0x07,0x00,0x00,0x23,0x29,0x03,0x00,0x94,0xA1,0x00,0x00,0xAE,0xA1,0x00,0x00,0xAF,0xA1,0x00,0x00}
	}, // Rotating CCW
	{ 
		0x036CE, {0x92,0x07,0x00,0x00,0x1E,0x29,0x03,0x00,0x1F,0x29,0x03,0x00,0x91,0xA1,0x00,0x00,0x80,0x35,0x03,0x00,0xB7,0xA1,0x00,0x00,0x9C,0x3A,0x03,0x00,0x7D,0x35,0x03,0x00,0xB5,0xA1,0x00,0x00,0xB0,0xA1,0x00,0x00,0xDA,0x35,0x03,0x00,0x1C,0x29,0x03,0x00,0xB2,0xA1,0x00,0x00,0xB4,0xA1,0x00,0x00}
	}, // Rotating CW
	{ 
		0x3365F, {0x5D,0x36,0x03,0x00,0x0D,0x2A,0x03,0x00,0x5F,0x36,0x03,0x00,0x54,0x36,0x03,0x00,0x7D,0x29,0x03,0x00,0x55,0x36,0x03,0x00,0x57,0x36,0x03,0x00,0x58,0x36,0x03,0x00,0x59,0x36,0x03,0x00}
	}, // Boat Rear
	{ 
		0x03731, {0x2C,0x37,0x00,0x00,0x2E,0x37,0x00,0x00,0x2D,0x37,0x00,0x00,0xFC,0x37,0x00,0x00,0x30,0x37,0x00,0x00,0xFA,0x37,0x00,0x00,0xFB,0x37,0x00,0x00,0xD0,0x37,0x00,0x00,0xF9,0x37,0x00,0x00,0xF6,0x37,0x00,0x00,0xF7,0x37,0x00,0x00,0xCF,0x37,0x00,0x00,0xF5,0x37,0x00,0x00,0xE5,0x37,0x00,0x00,0xF4,0x37,0x00,0x00,0xD3,0x37,0x00,0x00,0xD7,0x37,0x00,0x00,0xD5,0x37,0x00,0x00}
	}, // Long Bridge Side
	{ 
		0x03A9E, {0xA3,0x37,0x00,0x00,0xA6,0x37,0x00,0x00,0x16,0x3A,0x00,0x00,0x73,0x38,0x00,0x00,0x1E,0x39,0x00,0x00,0x72,0x39,0x00,0x00,0x85,0x39,0x00,0x00,0xD2,0x39,0x00,0x00,0xD6,0x39,0x00,0x00,0xCB,0x8D,0x03,0x00,0x5C,0x38,0x00,0x00,0x8C,0x3A,0x00,0x00,0xA7,0x37,0x00,0x00}
	}, // Purple Underwater Right
	{ 
		0x03A93, {0xA0,0x37,0x00,0x00,0x24,0xBF,0x02,0x00,0xA1,0x37,0x00,0x00,0x9A,0x3A,0x00,0x00,0xA6,0x3A,0x00,0x00,0x97,0x3A,0x00,0x00,0x92,0x3A,0x00,0x00,0x9E,0x3A,0x00,0x00,0xA0,0x3A,0x00,0x00,0x9D,0x3A,0x00,0x00,0x9C,0x3A,0x00,0x00,0x9B,0x3A,0x00,0x00,0xA2,0x37,0x00,0x00}
	}, // Purple Underwater Left

	{ 
		0x33721, {0x5B,0x36,0x03,0x00,0x5C,0x36,0x03,0x00,0xB6,0x37,0x03,0x00,0xB5,0x37,0x03,0x00,0x18,0x37,0x03,0x00,0x1C,0x37,0x03,0x00,0x1D,0x37,0x03,0x00,0x1E,0x37,0x03,0x00,0x1F,0x37,0x03,0x00,0x21,0x37,0x03,0x00,0x20,0x37,0x03,0x00,0xD3,0xC3,0x02,0x00,0xC7,0x37,0x03,0x00,0xB1,0x37,0x03,0x00,0xC8,0x37,0x03,0x00,0x29,0x38,0x03,0x00,0x2A,0x38,0x03,0x00,0xF6,0x37,0x03,0x00,0xB3,0x37,0x03,0x00,0x60,0x3A,0x03,0x00,0xB4,0x37,0x03,0x00} 
	}, // Buoy
	{ 
		0x220A7, {0x95,0x20,0x02,0x00,0x96,0x20,0x02,0x00,0xA0,0x20,0x02,0x00,0x9D,0x20,0x02,0x00,0x9F,0x20,0x02,0x00,0x98,0x20,0x02,0x00,0x9C,0x20,0x02,0x00,0x99,0x20,0x02,0x00,0x9B,0x20,0x02,0x00,0x97,0x20,0x02,0x00,0xA6,0x20,0x02,0x00,0xA5,0x20,0x02,0x00}
	}, // Short Bridge
	{ 
		0x00769, {0x7A,0x05,0x00,0x00,0x86,0xA9,0x03,0x00,0x84,0xA9,0x03,0x00,0x7B,0x05,0x00,0x00,0x7C,0x05,0x00,0x00,0x89,0xA9,0x03,0x00,0x7D,0x05,0x00,0x00,0x88,0xA9,0x03,0x00,0x7E,0x05,0x00,0x00,0x7F,0x05,0x00,0x00,0x8A,0xA9,0x03,0x00,0x80,0x05,0x00,0x00,0x8B,0xA9,0x03,0x00,0x81,0x05,0x00,0x00,0xAC,0x37,0x00,0x00,0xAB,0x37,0x00,0x00,0xE9,0x0A,0x00,0x00,0x88,0x0B,0x00,0x00}
	}, // Burned House

	{ 
		0x33505, {0xF0,0x34,0x03,0x00,0xF1,0x34,0x03,0x00,0xF4,0x34,0x03,0x00,0xF7,0x34,0x03,0x00,0xF6,0x34,0x03,0x00,0xF5,0x34,0x03,0x00,0xFA,0x34,0x03,0x00,0xF9,0x34,0x03,0x00,0xF8,0x34,0x03,0x00,0xF3,0x34,0x03,0x00,0xFC,0x34,0x03,0x00,0x05,0x35,0x03,0x00,0xFB,0x34,0x03,0x00,0xFD,0x34,0x03,0x00,0xFE,0x34,0x03,0x00,0x64,0x8E,0x03,0x00,0xFF,0x34,0x03,0x00,0x00,0x35,0x03,0x00,0xE8,0x86,0x03,0x00,0x02,0x35,0x03,0x00,0x5A,0x87,0x03,0x00,0x03,0x35,0x03,0x00,0x30,0x8D,0x03,0x00,0xE6,0x86,0x03,0x00,0x01,0x35,0x03,0x00,0xF2,0x34,0x03,0x00}
	}, // Bush
	{ 
		0x03C07, {0xF7,0x32,0x00,0x00,0xFE,0x32,0x00,0x00,0xAF,0x56,0x03,0x00,0xE6,0x3B,0x00,0x00,0xE7,0x3B,0x00,0x00,0x24,0x3A,0x00,0x00,0x06,0x3C,0x00,0x00,0xFF,0x3B,0x00,0x00,0x05,0x3C,0x00,0x00,0xAE,0x56,0x03,0x00,0x00,0x3C,0x00,0x00,0x04,0x3C,0x00,0x00,0xD6,0x36,0x00,0x00}
	}, // Surprise River
	{ 
		0x001A3, {0x46,0x02,0x00,0x00,0x86,0x01,0x00,0x00,0xAD,0x7F,0x01,0x00,0xFD,0x8D,0x03,0x00,0x91,0x80,0x01,0x00,0xB8,0x80,0x01,0x00,0x3B,0x35,0x00,0x00,0x37,0x80,0x01,0x00,0x36,0x80,0x01,0x00,0xC3,0x34,0x00,0x00,0xBC,0x7F,0x01,0x00,0x16,0x80,0x01,0x00,0x58,0x36,0x00,0x00,0x76,0x35,0x00,0x00,0xE8,0x35,0x00,0x00,0x35,0x80,0x01,0x00,0x47,0x02,0x00,0x00,0xDE,0x34,0x00,0x00}
	}, // River
	{ 
		0x3370E, {0xE7,0x36,0x03,0x00,0x04,0x37,0x03,0x00,0xD2,0xC3,0x02,0x00,0xBD,0x37,0x03,0x00,0xBE,0x37,0x03,0x00,0x0F,0x29,0x03,0x00,0xBC,0x37,0x03,0x00,0xBB,0x37,0x03,0x00,0xB8,0x37,0x03,0x00,0x11,0x29,0x03,0x00,0x58,0x8E,0x03,0x00,0x35,0x8A,0x03,0x00,0x10,0x29,0x03,0x00,0x40,0x8A,0x03,0x00,0xB2,0x37,0x03,0x00,0xBA,0x37,0x03,0x00,0x55,0x8E,0x03,0x00,0x0E,0x29,0x03,0x00,0xB9,0x37,0x03,0x00,0x0D,0x29,0x03,0x00,0xC0,0x37,0x03,0x00,0x06,0x37,0x03,0x00,0xFC,0x36,0x03,0x00,0x00,0x37,0x03,0x00,0x57,0x8E,0x03,0x00,0x54,0x87,0x03,0x00,0xFF,0x36,0x03,0x00,0xFD,0x36,0x03,0x00,0xFE,0x36,0x03,0x00,0xFB,0x36,0x03,0x00}
	}, // Arch Black
	{ 
		0x336C8, {0x8B,0x36,0x03,0x00,0xA8,0x36,0x03,0x00,0x4E,0x8E,0x03,0x00,0xA9,0x36,0x03,0x00,0xAA,0x36,0x03,0x00,0xA7,0x36,0x03,0x00,0xAB,0x36,0x03,0x00,0x53,0x8E,0x03,0x00,0xAC,0x36,0x03,0x00,0x52,0x8E,0x03,0x00,0xAD,0x36,0x03,0x00,0x05,0x29,0x03,0x00,0x06,0x29,0x03,0x00,0xC1,0x36,0x03,0x00,0x51,0x8E,0x03,0x00,0x4F,0x8E,0x03,0x00,0x50,0x8E,0x03,0x00,0xBB,0x36,0x03,0x00,0xBC,0x36,0x03,0x00,0x09,0x29,0x03,0x00,0xBE,0x36,0x03,0x00,0xBF,0x36,0x03,0x00,0xBD,0x36,0x03,0x00}
	}, // Arch EGG_WHITE Right
	{ 
		0x3369A, {0x8B,0x36,0x03,0x00,0xA8,0x36,0x03,0x00,0x4E,0x8E,0x03,0x00,0xA9,0x36,0x03,0x00,0xAA,0x36,0x03,0x00,0xA7,0x36,0x03,0x00,0xAB,0x36,0x03,0x00,0x53,0x8E,0x03,0x00,0xAC,0x36,0x03,0x00,0x52,0x8E,0x03,0x00,0xAD,0x36,0x03,0x00,0x07,0x29,0x03,0x00,0xB5,0x36,0x03,0x00,0x94,0x8F,0x03,0x00,0xAE,0x36,0x03,0x00,0xAF,0x36,0x03,0x00,0xB0,0x36,0x03,0x00,0xD2,0x66,0x03,0x00,0xB1,0x36,0x03,0x00,0x4C,0x8E,0x03,0x00,0xB2,0x36,0x03,0x00,0x54,0x8E,0x03,0x00,0xB4,0x36,0x03,0x00,0xD1,0x66,0x03,0x00,0x92,0x8F,0x03,0x00,0x93,0x8F,0x03,0x00,0xB3,0x36,0x03,0x00,0xF3,0x28,0x03,0x00,0x95,0x8F,0x03,0x00,0xB6,0x36,0x03,0x00,0xB7,0x36,0x03,0x00,0xB8,0x36,0x03,0x00,0x01,0x29,0x03,0x00,0x02,0x29,0x03,0x00,0xB9,0x36,0x03,0x00,0xBA,0x36,0x03,0x00}
	}, // Arch EGG_WHITE Left

	{ 
		0x22106, {0xE7,0x20,0x02,0x00,0xE8,0x20,0x02,0x00,0x00,0x21,0x02,0x00,0xFB,0x20,0x02,0x00,0x64,0x35,0x03,0x00,0xFD,0x20,0x02,0x00,0x76,0x35,0x03,0x00,0xF7,0x20,0x02,0x00,0x75,0x35,0x03,0x00,0xFA,0x20,0x02,0x00,0x74,0x35,0x03,0x00,0xF8,0x20,0x02,0x00,0x71,0x35,0x03,0x00,0xF9,0x20,0x02,0x00,0x70,0x35,0x03,0x00,0xEE,0x20,0x02,0x00,0x6F,0x35,0x03,0x00,0xF6,0x20,0x02,0x00,0x63,0x35,0x03,0x00,0xF4,0x20,0x02,0x00,0x67,0x35,0x03,0x00,0xF5,0x20,0x02,0x00,0x66,0x35,0x03,0x00,0xF0,0x20,0x02,0x00,0x65,0x35,0x03,0x00,0xF3,0x20,0x02,0x00,0x77,0x35,0x03,0x00,0xF1,0x20,0x02,0x00,0x78,0x35,0x03,0x00,0xF2,0x20,0x02,0x00,0x79,0x35,0x03,0x00,0xE9,0x20,0x02,0x00}
	}, // Desert
	{ 
		0x28B2A, {0x88,0x88,0x02,0x00,0xEB,0x8A,0x02,0x00,0x33,0x8B,0x02,0x00,0x3D,0x8B,0x02,0x00,0x72,0x8B,0x02,0x00,0x3C,0x8B,0x02,0x00,0x45,0x8B,0x02,0x00,0x43,0x8B,0x02,0x00,0x44,0x8B,0x02,0x00,0x4E,0x8B,0x02,0x00,0x3F,0x8B,0x02,0x00,0x4F,0x8B,0x02,0x00,0x1E,0x8E,0x03,0x00,0xD2,0x8A,0x02,0x00,0x1F,0x8E,0x03,0x00,0x50,0x8B,0x02,0x00,0x6E,0x8B,0x02,0x00,0x6F,0x8B,0x02,0x00,0x70,0x8B,0x02,0x00,0x51,0x8B,0x02,0x00,0x69,0x8B,0x02,0x00,0x1D,0x8E,0x03,0x00,0x68,0x8B,0x02,0x00,0x67,0x8B,0x02,0x00,0x6C,0x8B,0x02,0x00,0x1C,0x8E,0x03,0x00,0x6B,0x8B,0x02,0x00,0x6D,0x8B,0x02,0x00,0x6A,0x8B,0x02,0x00,0x5D,0x8B,0x02,0x00}
	}, //Shipwreck CW
	{ 
		0x03B25, {0xA1,0x3A,0x00,0x00,0xA2,0x3A,0x00,0x00,0xCA,0x55,0x03,0x00,0xA5,0x3A,0x00,0x00,0x94,0x56,0x03,0x00,0xA4,0x3A,0x00,0x00,0xA9,0x3A,0x00,0x00,0x95,0x56,0x03,0x00,0xA7,0x56,0x03,0x00,0xAB,0x3A,0x00,0x00,0x96,0x56,0x03,0x00,0xF8,0xC0,0x02,0x00,0xAC,0x3A,0x00,0x00,0xCB,0x39,0x03,0x00,0xA9,0x56,0x03,0x00,0xAD,0x3A,0x00,0x00,0xB0,0x3A,0x00,0x00,0xAF,0x3A,0x00,0x00,0xA5,0x56,0x03,0x00,0x14,0x3B,0x00,0x00,0x04,0x3B,0x00,0x00,0x99,0x56,0x03,0x00,0x17,0x3B,0x00,0x00,0x9A,0x56,0x03,0x00,0x18,0x3B,0x00,0x00,0x15,0x3B,0x00,0x00,0x9B,0x56,0x03,0x00,0x16,0x3B,0x00,0x00,0x9C,0x56,0x03,0x00,0x98,0x56,0x03,0x00,0x9D,0x56,0x03,0x00,0x1F,0x3B,0x00,0x00,0x1E,0x3B,0x00,0x00,0x22,0x3B,0x00,0x00,0x9E,0x56,0x03,0x00,0x20,0x3B,0x00,0x00,0x9F,0x56,0x03,0x00,0xA0,0x56,0x03,0x00,0x1D,0x3B,0x00,0x00,0xA1,0x56,0x03,0x00,0x1A,0x3B,0x00,0x00,0xA2,0x56,0x03,0x00,0x1C,0x3B,0x00,0x00,0xA3,0x56,0x03,0x00,0x85,0x19,0x03,0x00,0x93,0x56,0x03,0x00,0x89,0x19,0x03,0x00,0x88,0x19,0x03,0x00,0x87,0x19,0x03,0x00,0x97,0x56,0x03,0x00,0x86,0x19,0x03,0x00,0x1B,0x3B,0x00,0x00,0xA3,0x3A,0x00,0x00}
	}, //Shipwreck CCW
	{ 
		0x03D0D, {0x34,0x33,0x00,0x00,0xAB,0x39,0x00,0x00,0x96,0x3A,0x00,0x00,0x67,0x39,0x03,0x00,0x98,0x3A,0x00,0x00,0x99,0x3A,0x00,0x00,0x95,0x36,0x03,0x00,0xD5,0x36,0x03,0x00,0xE3,0x39,0x03,0x00,0xE7,0x39,0x03,0x00,0x84,0x3A,0x00,0x00,0xFA,0x39,0x03,0x00,0xD4,0x36,0x03,0x00,0xF9,0x39,0x03,0x00,0xD3,0x36,0x03,0x00,0x52,0x3B,0x00,0x00,0xDD,0x36,0x03,0x00,0xDA,0x36,0x03,0x00,0xF1,0x4C,0x03,0x00,0xDD,0x39,0x03,0x00,0xB4,0x3C,0x00,0x00,0xD9,0x36,0x03,0x00,0x97,0x36,0x03,0x00,0xD1,0x36,0x03,0x00,0xD2,0x36,0x03,0x00,0xBD,0x3C,0x00,0x00,0x10,0x3D,0x00,0x00,0x0F,0x3D,0x00,0x00,0xD0,0x36,0x03,0x00,0x11,0x3D,0x00,0x00,0xC3,0x3C,0x00,0x00,0xCD,0x3C,0x00,0x00,0x98,0x36,0x03,0x00,0xF3,0x39,0x03,0x00,0xAC,0x39,0x03,0x00,0xCE,0x3C,0x00,0x00,0xD7,0x3C,0x00,0x00,0xEB,0x39,0x03,0x00,0x09,0x3D,0x00,0x00,0x9A,0x36,0x03,0x00,0xF7,0x39,0x03,0x00,0x0A,0x3D,0x00,0x00,0xCA,0x36,0x03,0x00,0xCB,0x36,0x03,0x00,0xF8,0x39,0x03,0x00,0x0B,0x3D,0x00,0x00,0xCF,0x36,0x03,0x00,0x0D,0x3D,0x00,0x00}
	}, //Bunker Yellow
	{ 
		0x28A37, {0xCF,0x89,0x02,0x00,0x79,0x8A,0x02,0x00,0xE5,0x89,0x02,0x00,0x76,0x8A,0x02,0x00,0x73,0x8A,0x02,0x00,0x74,0x8A,0x02,0x00,0x00,0x8A,0x02,0x00,0x71,0x8A,0x02,0x00,0x08,0x8A,0x02,0x00,0x47,0x8D,0x03,0x00,0xE7,0x89,0x02,0x00,0xF1,0x89,0x02,0x00,0x48,0x8D,0x03,0x00,0x63,0x8A,0x02,0x00,0x46,0x8A,0x02,0x00,0x64,0x8A,0x02,0x00,0xE6,0x89,0x02,0x00,0x61,0x8A,0x02,0x00,0x4F,0x8A,0x02,0x00,0x60,0x8A,0x02,0x00,0x4E,0x8A,0x02,0x00,0x56,0x8A,0x02,0x00,0x57,0x8A,0x02,0x00,0x5D,0x8A,0x02,0x00,0x5E,0x8A,0x02,0x00,0xF2,0x89,0x02,0x00,0xE4,0x89,0x02,0x00,0x47,0x8A,0x02,0x00,0x1E,0x2A,0x03,0x00,0x4A,0x8A,0x02,0x00,0x6B,0x8A,0x02,0x00,0x69,0x8A,0x02,0x00,0x6F,0x8A,0x02,0x00,0x68,0x8A,0x02,0x00,0x6D,0x8A,0x02,0x00,0x6C,0x8A,0x02,0x00,0x70,0x8A,0x02,0x00,0x67,0x8A,0x02,0x00,0x65,0x8A,0x02,0x00,0x49,0x8A,0x02,0x00,0x3F,0x8A,0x02,0x00}
	}, //Long Sewer
	{ 
		0x03C19, {0x47,0x3C,0x00,0x00,0x53,0x3C,0x00,0x00,0xCC,0x38,0x03,0x00,0xC8,0x38,0x03,0x00,0x57,0x3C,0x00,0x00,0xC9,0x38,0x03,0x00,0xB1,0x3C,0x00,0x00,0xA4,0x3C,0x00,0x00,0x6C,0x37,0x03,0x00,0x73,0x37,0x03,0x00,0xA6,0x3C,0x00,0x00,0xAD,0x38,0x03,0x00,0xAC,0x38,0x03,0x00,0x6D,0x37,0x03,0x00,0xC6,0x38,0x03,0x00,0xB3,0x3C,0x00,0x00,0xC7,0x38,0x03,0x00,0x6F,0x37,0x03,0x00,0xC4,0x38,0x03,0x00,0x70,0x37,0x03,0x00,0xC5,0x38,0x03,0x00,0x3F,0xCF,0x03,0x00,0xA7,0x3C,0x00,0x00,0xC0,0x38,0x03,0x00,0x71,0x37,0x03,0x00,0x3D,0xCF,0x03,0x00,0xC3,0x38,0x03,0x00,0xB5,0x3C,0x00,0x00,0x3E,0xCF,0x03,0x00,0xC1,0x38,0x03,0x00,0x72,0x37,0x03,0x00,0xB6,0x3C,0x00,0x00,0x3B,0xCF,0x03,0x00,0xB7,0x3C,0x00,0x00,0x54,0x3C,0x00,0x00}
	}, //Tutorial Moss
	{ 
		0x035C9, {0xF7,0x83,0x01,0x00,0xF9,0x83,0x01,0x00,0xFB,0x83,0x01,0x00,0xF9,0x86,0x01,0x00,0x06,0x84,0x01,0x00,0x1B,0x84,0x01,0x00,0xFA,0x86,0x01,0x00,0xB8,0x85,0x01,0x00,0xF4,0x85,0x01,0x00,0xFB,0x86,0x01,0x00,0x25,0x86,0x01,0x00,0x3E,0x86,0x01,0x00,0xFC,0x86,0x01,0x00,0x4F,0x86,0x01,0x00,0x58,0x86,0x01,0x00,0xFD,0x86,0x01,0x00,0x9D,0x86,0x01,0x00,0x07,0x84,0x01,0x00,0x1A,0x84,0x01,0x00}
	}, //Cargo

	{
		0x3388F, {0x87,0x38,0x03,0x00,0x89,0x38,0x03,0x00,0x8E,0x38,0x03,0x00,0x8F,0x38,0x03,0x00,0x8C,0x38,0x03,0x00,0x21,0xC1,0x03,0x00,0x8D,0x38,0x03,0x00,0xE8,0x8D,0x03,0x00,0x8A,0x38,0x03,0x00,0x9E,0x38,0x03,0x00,0xA3,0x38,0x03,0x00,0x98,0x38,0x03,0x00,0x9B,0x38,0x03,0x00,0xEE,0x8D,0x03,0x00,0x9A,0x38,0x03,0x00,0x99,0x38,0x03,0x00 }
	}, // Couch
	{
		0x335AE, {0x9D,0x35,0x03,0x00,0xA3,0x35,0x03,0x00,0x26,0x29,0x03,0x00,0xA4,0x35,0x03,0x00,0x61,0x36,0x03,0x00,0xE3,0x36,0x03,0x00,0xE4,0x36,0x03,0x00,0x24,0x29,0x03,0x00,0xA5,0x35,0x03,0x00,0x11,0x37,0x03,0x00,0xA7,0x35,0x03,0x00,0x12,0x37,0x03,0x00,0xF3,0x36,0x03,0x00,0xAE,0x35,0x03,0x00,0xA2,0x35,0x03,0x00 }
	}, // Cloud Cycle
	{
		0x3397C, {0x71,0x39,0x03,0x00,0x72,0x39,0x03,0x00,0xFB,0x8D,0x03,0x00,0x7B,0x39,0x03,0x00,0x78,0x39,0x03,0x00,0xFA,0x8D,0x03,0x00,0x79,0x39,0x03,0x00,0x77,0x39,0x03,0x00,0x7A,0x39,0x03,0x00,0x75,0x39,0x03,0x00,0x76,0x39,0x03,0x00,0x73,0x39,0x03,0x00 }
	}, // Caves Skylight
	{
		0x33A20, {0x36,0x3A,0x03,0x00,0x13,0x3A,0x03,0x00,0x3E,0x8D,0x03,0x00,0x1D,0x3A,0x03,0x00,0xDA,0x3A,0x03,0x00,0x1E,0x3A,0x03,0x00,0xB4,0x3A,0x03,0x00,0xD2,0x3A,0x03,0x00,0xDB,0x3A,0x03,0x00,0xDC,0x3A,0x03,0x00,0xCE,0x3A,0x03,0x00,0xDD,0x3A,0x03,0x00,0xDE,0x3A,0x03,0x00,0xDF,0x3A,0x03,0x00,0xC4,0x3A,0x03,0x00,0xD1,0x3A,0x03,0x00,0xCC,0x3A,0x03,0x00,0xCD,0x3A,0x03,0x00,0xC7,0x3A,0x03,0x00,0x3F,0x8D,0x03,0x00,0xCF,0x3A,0x03,0x00,0xCA,0x3A,0x03,0x00,0xD0,0x3A,0x03,0x00,0xD8,0x3A,0x03,0x00,0xCB,0x3A,0x03,0x00,0xD9,0x3A,0x03,0x00,0xD4,0x3A,0x03,0x00,0xC8,0x3A,0x03,0x00,0xD5,0x3A,0x03,0x00,0xD6,0x3A,0x03,0x00,0xC9,0x3A,0x03,0x00,0x31,0x8D,0x03,0x00,0xC5,0x3A,0x03,0x00,0xE0,0x3A,0x03,0x00,0xC6,0x3A,0x03,0x00,0xE8,0x3A,0x03,0x00,0xB5,0x3A,0x03,0x00,0xE6,0x3A,0x03,0x00,0xE3,0x3A,0x03,0x00,0xC1,0x3A,0x03,0x00,0xC3,0x3A,0x03,0x00,0xC2,0x3A,0x03,0x00,0xD7,0x3A,0x03,0x00,0xBF,0x3A,0x03,0x00,0x3B,0x8D,0x03,0x00,0xE2,0x3A,0x03,0x00,0xC0,0x3A,0x03,0x00,0x3D,0x8D,0x03,0x00,0x40,0x8D,0x03,0x00,0xBD,0x3A,0x03,0x00,0xBE,0x3A,0x03,0x00,0xE5,0x3A,0x03,0x00,0xB6,0x3A,0x03,0x00,0xB7,0x3A,0x03,0x00,0xE4,0x3A,0x03,0x00,0xB8,0x3A,0x03,0x00,0xE7,0x3A,0x03,0x00,0xB9,0x3A,0x03,0x00,0x41,0x8D,0x03,0x00,0xBA,0x3A,0x03,0x00,0xD3,0x3A,0x03,0x00,0x1F,0x3A,0x03,0x00,0xE1,0x3A,0x03,0x00,0x20,0x3A,0x03,0x00 }
	}, // Walkway Flowers
	{
		0x3352F, {0xAF,0x18,0x00,0x00,0x04,0x18,0x00,0x00,0x37,0x38,0x00,0x00,0x14,0x39,0x00,0x00,0x95,0x3B,0x00,0x00,0xB7,0x3B,0x00,0x00,0xCE,0x37,0x00,0x00,0xCC,0x37,0x00,0x00,0x32,0x33,0x00,0x00,0x39,0x33,0x00,0x00,0xCB,0x33,0x00,0x00 }
	}, // Gate
	{
		0x28B30, {0xC8,0x88,0x02,0x00,0x1B,0x8E,0x03,0x00,0x35,0x8E,0x03,0x00,0x37,0x8E,0x03,0x00,0xCB,0x88,0x02,0x00,0x32,0x8B,0x02,0x00,0x2C,0x8B,0x02,0x00,0x47,0x8E,0x03,0x00,0x2D,0x8B,0x02,0x00,0x49,0x8E,0x03,0x00,0x48,0x8E,0x03,0x00,0x2E,0x8B,0x02,0x00,0x3D,0x8E,0x03,0x00,0x30,0x8B,0x02,0x00,0x39,0x8E,0x03,0x00,0x2F,0x8B,0x02,0x00,0x3C,0x8E,0x03,0x00,0x3B,0x8E,0x03,0x00,0x19,0x8B,0x02,0x00 }
	}, // Challenge Water
	{
		0x09D63, {0x31,0xC6,0x02,0x00,0x30,0xC6,0x02,0x00,0x2F,0xC6,0x02,0x00,0x35,0xC6,0x02,0x00,0x34,0xC6,0x02,0x00,0x3B,0xC6,0x02,0x00,0x42,0xC6,0x02,0x00,0x43,0xC6,0x02,0x00,0x44,0xC6,0x02,0x00,0x3D,0xC6,0x02,0x00,0x36,0xC6,0x02,0x00,0x37,0xC6,0x02,0x00,0x38,0xC6,0x02,0x00,0x32,0xC6,0x02,0x00,0x33,0xC6,0x02,0x00,0x39,0xC6,0x02,0x00,0x3A,0xC6,0x02,0x00,0x41,0xC6,0x02,0x00,0x48,0xC6,0x02,0x00,0x4F,0xC6,0x02,0x00,0x56,0xC6,0x02,0x00,0x55,0xC6,0x02,0x00,0x5B,0xC6,0x02,0x00,0x5A,0xC6,0x02,0x00,0x54,0xC6,0x02,0x00,0x4D,0xC6,0x02,0x00,0x46,0xC6,0x02,0x00,0x3F,0xC6,0x02,0x00,0x3E,0xC6,0x02,0x00,0x45,0xC6,0x02,0x00,0x4C,0xC6,0x02,0x00,0x53,0xC6,0x02,0x00,0x59,0xC6,0x02,0x00,0x58,0xC6,0x02,0x00,0x57,0xC6,0x02,0x00,0x5C,0xC6,0x02,0x00 }
	}, // Pink Bridge
	{
		0x09D5D, {0xB2,0xC4,0x02,0x00,0xB3,0xC4,0x02,0x00,0xBA,0xC4,0x02,0x00,0xC1,0xC4,0x02,0x00,0xC0,0xC4,0x02,0x00,0xBF,0xC4,0x02,0x00,0xBE,0xC4,0x02,0x00,0xBD,0xC4,0x02,0x00,0xC4,0xC4,0x02,0x00,0xC5,0xC4,0x02,0x00,0xC6,0xC4,0x02,0x00,0xC7,0xC4,0x02,0x00,0xC8,0xC4,0x02,0x00,0xC9,0xC4,0x02,0x00,0xCA,0xC4,0x02,0x00,0xD6,0xC4,0x02,0x00 }
	}, // Orange Bridge
	{
		0x09D5E, {0x5E,0xC0,0x02,0x00,0x5D,0xC0,0x02,0x00,0x5C,0xC0,0x02,0x00,0x5B,0xC0,0x02,0x00,0x54,0xC0,0x02,0x00,0x55,0xC0,0x02,0x00,0x56,0xC0,0x02,0x00,0x57,0xC0,0x02,0x00,0x58,0xC0,0x02,0x00,0x59,0xC0,0x02,0x00,0x5A,0xC0,0x02,0x00,0x66,0xC0,0x02,0x00 }
	}, // Blue Bridge
	{ 
		0x037B2, {0x91,0x7D,0x01,0x00,0xDE,0x81,0x01,0x00,0xC6,0x7D,0x01,0x00,0x63,0x84,0x01,0x00,0xBB,0x3C,0x00,0x00,0xB2,0x37,0x00,0x00,0xBC,0x3C,0x00,0x00,0xC9,0x3C,0x00,0x00,0xC8,0x3C,0x00,0x00,0xC7,0x3C,0x00,0x00,0xBF,0x3C,0x00,0x00,0x12,0x36,0x00,0x00,0xC0,0x3C,0x00,0x00,0x66,0x84,0x01,0x00,0xAA,0x38,0x00,0x00,0xD9,0x81,0x01,0x00,0xDC,0x81,0x01,0x00}
	}, // Windmill 2nd Blade
	{ 
		0x000F7, {0x91,0x7D,0x01,0x00,0xDE,0x81,0x01,0x00,0xC6,0x7D,0x01,0x00,0x63,0x84,0x01,0x00,0xBB,0x3C,0x00,0x00,0xB2,0x37,0x00,0x00,0xBC,0x3C,0x00,0x00,0xC9,0x3C,0x00,0x00,0xC8,0x3C,0x00,0x00,0xC7,0x3C,0x00,0x00,0xBF,0x3C,0x00,0x00,0x88,0x84,0x01,0x00,0x8D,0x84,0x01,0x00,0xC2,0x3C,0x00,0x00,0x86,0x84,0x01,0x00}
	}, // Windmill 3rd Blade
	{ 
		0x28B29, {0xB3,0x35,0x00,0x00,0x8F,0xA9,0x03,0x00,0xAF,0x3A,0x03,0x00,0x72,0x3A,0x03,0x00,0xB9,0x35,0x00,0x00,0x73,0x3A,0x03,0x00,0x7E,0x3A,0x03,0x00,0x7C,0x39,0x00,0x00,0x7D,0x39,0x00,0x00,0x7E,0x39,0x00,0x00,0x80,0x3A,0x03,0x00,0x7F,0x39,0x00,0x00,0x81,0x3A,0x03,0x00,0x80,0x39,0x00,0x00,0x82,0x3A,0x03,0x00,0xCE,0x34,0x03,0x00,0xF0,0x35,0x03,0x00,0x83,0x3A,0x03,0x00,0x81,0x39,0x00,0x00,0xF3,0x35,0x03,0x00,0xF2,0x35,0x03,0x00,0x86,0x3A,0x03,0x00,0x84,0x3A,0x03,0x00,0xF1,0x35,0x03,0x00,0x85,0x3A,0x03,0x00,0x66,0x3D,0x00,0x00,0x65,0x3D,0x00,0x00,0x89,0x88,0x02,0x00,0x7F,0x35,0x00,0x00,0x88,0x3A,0x03,0x00,0x87,0x3A,0x03,0x00,0x89,0x3A,0x03,0x00,0x8A,0x3A,0x03,0x00,0x8B,0x3A,0x03,0x00,0x8C,0x3A,0x03,0x00,0x63,0x3D,0x00,0x00,0x1C,0x35,0x00,0x00,0x8D,0x3A,0x03,0x00,0x6A,0x3D,0x00,0x00,0x8E,0x3A,0x03,0x00,0x1E,0x35,0x00,0x00,0xAC,0x3A,0x03,0x00,0x8F,0x3A,0x03,0x00,0x1F,0x35,0x00,0x00,0x94,0x3A,0x03,0x00,0x21,0x35,0x00,0x00,0x95,0x3A,0x03,0x00,0x69,0x3D,0x00,0x00,0x1B,0x8B,0x02,0x00,0x69,0x37,0x03,0x00,0xC1,0x88,0x02,0x00,0x68,0x37,0x03,0x00,0xC2,0x88,0x02,0x00,0xB0,0x88,0x02,0x00,0xA0,0x88,0x02,0x00,0x99,0x88,0x02,0x00,0x9A,0x88,0x02,0x00,0x92,0x88,0x02,0x00,0x93,0x88,0x02,0x00,0xA4,0x88,0x02,0x00,0xA2,0x88,0x02,0x00,0x61,0x8E,0x03,0x00,0x59,0xBF,0x02,0x00,0x1C,0x8B,0x02,0x00,0x26,0x8B,0x02,0x00,0x20,0x8B,0x02,0x00,0x21,0x8B,0x02,0x00,0x23,0x8B,0x02,0x00,0x1F,0x8B,0x02,0x00,0x24,0x8B,0x02,0x00,0x1E,0x8B,0x02,0x00,0x25,0x8B,0x02,0x00,0x22,0x8B,0x02,0x00,0xA8,0x3A,0x03,0x00,0xA7,0x3A,0x03,0x00,0xA6,0x3A,0x03,0x00,0x1D,0x8B,0x02,0x00,0x6B,0x37,0x03,0x00,0xAF,0x88,0x02,0x00,0x91,0x8A,0x02,0x00,0x61,0x8B,0x02,0x00,0x6F,0x3D,0x00,0x00,0x66,0x8B,0x02,0x00,0x6E,0x3D,0x00,0x00,0x04,0x8B,0x02,0x00,0x0A,0x8B,0x02,0x00,0x09,0x8B,0x02,0x00,0x08,0x8B,0x02,0x00,0xAB,0x3A,0x03,0x00,0x07,0x8B,0x02,0x00,0x06,0x8B,0x02,0x00,0x0D,0x8B,0x02,0x00,0x0B,0x8B,0x02,0x00,0x0C,0x8B,0x02,0x00,0x05,0x8B,0x02,0x00,0x63,0x8B,0x02,0x00,0x17,0x8B,0x02,0x00,0x16,0x8B,0x02,0x00,0x11,0x8B,0x02,0x00,0x15,0x8B,0x02,0x00,0x10,0x8B,0x02,0x00,0x14,0x8B,0x02,0x00,0xA9,0x3A,0x03,0x00,0x12,0x8B,0x02,0x00,0x13,0x8B,0x02,0x00,0x18,0x8B,0x02,0x00,0x0F,0x8B,0x02,0x00,0x70,0x3D,0x00,0x00,0x03,0x8B,0x02,0x00,0x7D,0x3A,0x03,0x00,0x02,0x8B,0x02,0x00,0x7C,0x3A,0x03,0x00,0x7B,0x3A,0x03,0x00,0x01,0x8B,0x02,0x00,0x7A,0x3A,0x03,0x00,0x71,0x3D,0x00,0x00,0x79,0x3A,0x03,0x00,0x78,0x3A,0x03,0x00,0x77,0x3A,0x03,0x00,0x76,0x3A,0x03,0x00,0x72,0x3D,0x00,0x00,0x73,0x3D,0x00,0x00,0x75,0x3A,0x03,0x00,0x76,0x3D,0x00,0x00,0x74,0x3A,0x03,0x00,0x71,0x3A,0x03,0x00,0x81,0x8F,0x03,0x00,0x75,0x3D,0x00,0x00,0x74,0x3D,0x00,0x00,0x7C,0x3D,0x00,0x00,0x8E,0x3D,0x00,0x00,0x7D,0x3D,0x00,0x00,0x7B,0x3D,0x00,0x00,0x70,0x3A,0x03,0x00,0x6D,0x3A,0x03,0x00,0x6E,0x3A,0x03,0x00,0x7E,0x3D,0x00,0x00,0x6C,0x3A,0x03,0x00,0x6B,0x3A,0x03,0x00,0x6A,0x3A,0x03,0x00,0x69,0x3A,0x03,0x00,0x66,0x3A,0x03,0x00,0x67,0x3A,0x03,0x00,0x68,0x3A,0x03,0x00,0x62,0x3A,0x03,0x00,0x65,0x3A,0x03,0x00,0x63,0x3A,0x03,0x00,0x64,0x3A,0x03,0x00,0x7F,0x3D,0x00,0x00,0x80,0x3D,0x00,0x00,0x81,0x3D,0x00,0x00,0x61,0x3A,0x03,0x00,0x83,0x3D,0x00,0x00,0x84,0x3D,0x00,0x00,0x9B,0x3A,0x03,0x00,0x8F,0x3D,0x00,0x00,0xA3,0x3A,0x03,0x00,0xA4,0x3A,0x03,0x00,0xA1,0x3A,0x03,0x00,0xA5,0x3A,0x03,0x00,0xA2,0x3A,0x03,0x00,0x9E,0x3A,0x03,0x00,0x9F,0x3A,0x03,0x00,0xA0,0x3A,0x03,0x00,0x15,0x37,0x03,0x00,0x86,0x3D,0x00,0x00,0x87,0x3D,0x00,0x00,0xAE,0x3A,0x03,0x00,0x88,0x3D,0x00,0x00,0x98,0x3A,0x03,0x00,0xEF,0x8A,0x02,0x00,0xF0,0x8A,0x02,0x00,0xF3,0x8A,0x02,0x00,0xF7,0x8A,0x02,0x00,0x97,0x3A,0x03,0x00,0xFB,0x8A,0x02,0x00,0xFA,0x8A,0x02,0x00,0xFC,0x8A,0x02,0x00,0xF9,0x8A,0x02,0x00,0xFD,0x8A,0x02,0x00,0xF8,0x8A,0x02,0x00,0xFE,0x8A,0x02,0x00,0xFF,0x8A,0x02,0x00,0x00,0x8B,0x02,0x00,0x2C,0x3A,0x03,0x00,0xEC,0x8A,0x02,0x00,0x82,0x3D,0x00,0x00,0x8A,0x3D,0x00,0x00,0x8B,0x3D,0x00,0x00}
	}, //Shipwreck Green
	{ 
		0x33857, {0xF8,0x36,0x03,0x00,0xF9,0x36,0x03,0x00,0x12,0x38,0x03,0x00,0x15,0x38,0x03,0x00,0x13,0x38,0x03,0x00,0x62,0x38,0x03,0x00,0x19,0x38,0x03,0x00,0x11,0x38,0x03,0x00,0x07,0x37,0x03,0x00,0x08,0x37,0x03,0x00,0xFA,0x36,0x03,0x00,0x09,0x37,0x03,0x00,0x0B,0x37,0x03,0x00,0x31,0x38,0x03,0x00,0x3C,0xDA,0x03,0x00,0xBF,0x37,0x03,0x00,0xC1,0x37,0x03,0x00,0x37,0xDA,0x03,0x00,0x32,0x38,0x03,0x00,0x36,0x38,0x03,0x00,0x35,0x38,0x03,0x00,0x49,0x38,0x03,0x00,0x3A,0x38,0x03,0x00,0x0B,0xD9,0x03,0x00,0x3B,0x38,0x03,0x00,0x41,0x38,0x03,0x00,0x42,0x38,0x03,0x00,0x3C,0x38,0x03,0x00,0x11,0xD9,0x03,0x00,0x3D,0x38,0x03,0x00,0x48,0x38,0x03,0x00,0x47,0x38,0x03,0x00,0x46,0x38,0x03,0x00,0x57,0x38,0x03,0x00,0x4B,0x38,0x03,0x00,0x4C,0x38,0x03,0x00,0x4D,0x38,0x03,0x00,0x4E,0x38,0x03,0x00,0x50,0x38,0x03,0x00}
	}, //Tutorial Wall
	{ 
		0x33879, {0x66,0x38,0x03,0x00,0x25,0x38,0x03,0x00,0x24,0x38,0x03,0x00,0x23,0x38,0x03,0x00,0x22,0x38,0x03,0x00,0x27,0x38,0x03,0x00,0x20,0x38,0x03,0x00,0x67,0x38,0x03,0x00,0x6F,0x38,0x03,0x00,0x71,0x38,0x03,0x00,0x69,0x38,0x03,0x00,0x73,0x38,0x03,0x00,0x77,0x38,0x03,0x00,0x6D,0x38,0x03,0x00,0x65,0x38,0x03,0x00,0x68,0x38,0x03,0x00,0x6E,0x38,0x03,0x00,0x76,0x38,0x03,0x00,0x74,0x38,0x03,0x00,0x5A,0x38,0x03,0x00,0x47,0x36,0x03,0x00,0x48,0x36,0x03,0x00,0x29,0x37,0x03,0x00,0x2A,0x37,0x03,0x00,0x4A,0x36,0x03,0x00,0x1A,0x37,0x03,0x00,0x67,0x37,0x03,0x00,0x59,0x38,0x03,0x00,0x64,0x37,0x03,0x00,0x06,0x3A,0x03,0x00,0x2C,0x37,0x03,0x00,0x1B,0x37,0x03,0x00}
	}, //Tutorial Wall Reflection
};

inline std::map<int, Vector3> treehousePanelPreSolvePositions = {
	{ 0x17D72, { 148.835312, 143.541061, 10.944015}}, // Treehouse Yellow 1
	{ 0x17D8F, { 147.607086, 143.697037, 10.944004}}, // Treehouse Yellow 2
	{ 0x17D74, { 146.378937, 143.853012, 10.943995}}, // Treehouse Yellow 3
	{ 0x17DAC, { 145.150772, 144.008926, 10.944016}}, // Treehouse Yellow 4
	{ 0x17D9E, { 143.922577, 144.164917, 10.944039}}, // Treehouse Yellow 5
	{ 0x17DB9, { 142.694366, 144.320862, 10.944067}}, // Treehouse Yellow 6
	{ 0x17D9C, { 141.466156, 144.476822, 10.944101}}, // Treehouse Yellow 7
	{ 0x17DC2, { 140.237885, 144.632736, 10.944168}}, // Treehouse Yellow 8
	{ 0x17DC4, { 139.009674, 144.788696, 10.944206}}, // Treehouse Yellow 9
	{ 0x17DC8, { 131.435242, 140.491425, 10.881846}}, // Treehouse First Purple 1
	{ 0x17DC7, { 131.417969, 139.253479, 10.881849}}, // Treehouse First Purple 2
	{ 0x17CE4, { 131.400696, 138.015533, 10.881854}}, // Treehouse First Purple 3
	{ 0x17D2D, { 131.383423, 136.777588, 10.881861}}, // Treehouse First Purple 4
	{ 0x17D6C, { 131.366165, 135.539627, 10.881871}}, // Treehouse First Purple 5
	{ 0x17D9B, { 128.053757, 123.863373, 15.532800}}, // Treehouse Second Purple 1
	{ 0x17D99, { 127.549446, 124.993973, 15.532713}}, // Treehouse Second Purple 2
	{ 0x17DAA, { 127.045052, 126.124748, 15.532825}}, // Treehouse Second Purple 3
	{ 0x17D97, { 126.540756, 127.255440, 15.532815}}, // Treehouse Second Purple 4
	{ 0x17BDF, { 126.036484, 128.386093, 15.532756}}, // Treehouse Second Purple 5
	{ 0x17D91, { 125.532158, 129.516815, 15.532821}}, // Treehouse Second Purple 6
	{ 0x17DC6, { 125.027832, 130.647522, 15.532855}}, // Treehouse Second Purple 7
	{ 0x17DB3, { 121.664284, 134.389389, 17.506397}}, // Treehouse Left Orange 1
	{ 0x17DB5, { 120.451157, 134.142059, 17.506420}}, // Treehouse Left Orange 2
	{ 0x17DB6, { 119.238075, 133.894730, 17.506399}}, // Treehouse Left Orange 3
	{ 0x17DC0, { 118.024979, 133.647369, 17.506409}}, // Treehouse Left Orange 4
	{ 0x17DD7, { 116.811867, 133.400055, 17.506432}}, // Treehouse Left Orange 5
	{ 0x17DD9, { 115.598763, 133.152756, 17.506433}}, // Treehouse Left Orange 6
	{ 0x17DB8, { 114.385658, 132.905441, 17.506445}}, // Treehouse Left Orange 7
	{ 0x17DDC, { 113.172562, 132.658096, 17.506468}}, // Treehouse Left Orange 8
	{ 0x17DD1, { 111.959457, 132.410767, 17.506485}}, // Treehouse Left Orange 9 Directional
	{ 0x17D88, { 113.897636, 147.744904, 17.105471}}, // Treehouse Right Orange 1
	{ 0x17DB4, { 112.684540, 147.497574, 17.105476}}, // Treehouse Right Orange 2
	{ 0x17D8C, { 111.471436, 147.250244, 17.105478}}, // Treehouse Right Orange 3
	{ 0x17CE3, { 110.258331, 147.002914, 17.105488}}, // Treehouse Right Orange 4
	{ 0x17E3C, { 120.450722, 150.494064, 17.067404}}, // Treehouse Green 1
	{ 0x17E4D, { 121.301476, 151.393524, 17.067404}}, // Treehouse Green 2
	{ 0x17E4F, { 122.152237, 152.292999, 17.067411}}, // Treehouse Green 3
	{ 0x17E52, { 123.002968, 153.192459, 17.067423}}, // Treehouse Green 4
};

inline std::map<int, Vector3> greenBridge5to7Leftwards = {
	{ 0x17E5B, { 122.348259, 154.050003, 17.067417}}, // Treehouse Green 5
	{ 0x17E5F, { 121.448853, 154.900772, 17.067415}}, // Treehouse Green 6
	{ 0x17E61, { 120.549362, 155.751511, 17.067446}}, // Treehouse Green 7
};

inline std::map<int, Vector3> greenBridge5to7Straight = {
	{ 0x17E5B, { 123.853722, 154.091873, 17.067417}}, // Treehouse Green 5
	{ 0x17E5F, { 124.704483, 154.991272, 17.067417}}, // Treehouse Green 6
	{ 0x17E61, { 125.555229, 155.890778, 17.067446}}, // Treehouse Green 7
};

inline std::map<int, Vector3> greenBridge5to7Rightwards = {
	{ 0x17E5B, { 123.895592, 152.586395, 17.067406}}, // Treehouse Green 5
	{ 0x17E5F, { 124.794998, 151.735641, 17.067392}}, // Treehouse Green 6
	{ 0x17E61, { 125.694489, 150.884888, 17.067404}}, // Treehouse Green 7
};

inline std::map<int, Vector3> leftOrange10to15Leftwards = {
	{ 0x17DDE, { 112.002617, 131.332657, 17.506512}}, // Treehouse Left Orange 10
	{ 0x17DE3, { 112.249931, 130.119568, 17.506527}}, // Treehouse Left Orange 11
	{ 0x17DEC, { 112.497314, 128.906464, 17.506563}}, // Treehouse Left Orange 12
	{ 0x17DAE, { 112.744614, 127.693352, 17.506561}}, // Treehouse Left Orange 13
	{ 0x17DB0, { 112.991928, 126.480255, 17.506594}}, // Treehouse Left Orange 14
	{ 0x17DDB, { 113.239281, 125.267136, 17.506615}}, // Treehouse Left Orange 15
};

inline std::map<int, Vector3> leftOrange10to15Straight = {
	{ 0x17DDE, { 110.746346, 132.163391, 17.506514}}, // Treehouse Left Orange 10
	{ 0x17DE3, { 109.533249, 131.916092, 17.506531}}, // Treehouse Left Orange 11
	{ 0x17DEC, { 108.320145, 131.668716, 17.506567}}, // Treehouse Left Orange 12
	{ 0x17DAE, { 107.107040, 131.421417, 17.506573}}, // Treehouse Left Orange 13
	{ 0x17DB0, { 105.893936, 131.174118, 17.506603}}, // Treehouse Left Orange 14
	{ 0x17DDB, { 104.680824, 130.926773, 17.506632}}, // Treehouse Left Orange 15
};

inline std::map<int, Vector3> leftOrange10to15Right = {
	{ 0x17DDE, { 111.577087, 133.419662, 17.506479}}, // Treehouse Left Orange 10
	{ 0x17DE3, { 111.329773, 134.632751, 17.506458}}, // Treehouse Left Orange 11
	{ 0x17DEC, { 111.082397, 135.845856, 17.506451}}, // Treehouse Left Orange 12
	{ 0x17DAE, { 110.835114, 137.058960, 17.506420}}, // Treehouse Left Orange 13
	{ 0x17DB0, { 110.587807, 138.272064, 17.506407}}, // Treehouse Left Orange 14
	{ 0x17DDB, { 110.340462, 139.485184, 17.506399}}, // Treehouse Left Orange 15
};

inline std::map<int, Vector3> rightOrange5To12Left = {
	{ 0x17DCD, { 110.301468, 145.924850, 17.105497}}, // Treehouse Right Orange 5
	{ 0x17DB2, { 110.548805, 144.711731, 17.105503}}, // Treehouse Right Orange 6
	{ 0x17DCC, { 110.796158, 143.498611, 17.105524}}, // Treehouse Right Orange 7
	{ 0x17DCA, { 111.043465, 142.285507, 17.105518}}, // Treehouse Right Orange 8
	{ 0x17D8E, { 111.290810, 141.072418, 17.105526}}, // Treehouse Right Orange 9
	{ 0x17DB7, { 111.538147, 139.859314, 17.105532}}, // Treehouse Right Orange 10
	{ 0x17DB1, { 111.785484, 138.646210, 17.105541}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 112.032814, 137.433105, 17.105551}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12LeftThenLeft = {
	{ 0x17DB1, { 112.616219, 139.902435, 17.105545}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 113.829330, 140.149765, 17.105564}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12LeftThenStraight = {
	{ 0x17DB1, { 111.785484, 138.646210, 17.105541}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 112.032814, 137.433105, 17.105551}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12LeftThenRight = {
	{ 0x17DB1, { 110.359634, 139.442352, 16.687616}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 109.316132, 139.229614, 17.105503}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange5To12Straight = {
	{ 0x17DCD, { 109.045227, 146.755585, 17.105499}}, // Treehouse Right Orange 5
	{ 0x17DB2, { 107.832100, 146.508255, 17.105507}}, // Treehouse Right Orange 6
	{ 0x17DCC, { 106.618988, 146.260910, 17.105526}}, // Treehouse Right Orange 7
	{ 0x17DCA, { 105.405891, 146.013611, 17.105526}}, // Treehouse Right Orange 8
	{ 0x17D8E, { 104.192787, 145.766266, 17.105534}}, // Treehouse Right Orange 9
	{ 0x17DB7, { 102.979683, 145.518936, 17.105543}}, // Treehouse Right Orange 10
	{ 0x17DB1, { 101.766579, 145.271606, 17.105555}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 100.553474, 145.024292, 17.105568}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12StraightThenLeft = {
	{ 0x17DB1, { 103.022827, 144.440872, 17.105572}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 103.270157, 143.227768, 17.105600}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12StraightThenStraight = {
	{ 0x17DB1, { 101.766579, 145.271606, 17.105555}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 100.553474, 145.024292, 17.105568}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12StraightThenRight = {
	{ 0x17DB1, { 102.597321, 146.527847, 17.105516}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 102.349998, 147.740952, 17.105494}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange5To12Right = {
	{ 0x17DCD, { 109.875977, 148.011826, 17.105484}}, // Treehouse Right Orange 5
	{ 0x17DB2, { 109.628647, 149.224945, 17.105482}}, // Treehouse Right Orange 6
	{ 0x17DCC, { 109.381302, 150.438049, 17.105482}}, // Treehouse Right Orange 7
	{ 0x17DCA, { 109.133995, 151.651154, 17.105469}}, // Treehouse Right Orange 8
	{ 0x17D8E, { 108.886665, 152.864258, 17.105457}}, // Treehouse Right Orange 9
	{ 0x17DB7, { 108.639336, 154.077362, 17.105455}}, // Treehouse Right Orange 10
	{ 0x17DB1, { 108.392006, 155.290451, 17.105503}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 108.144684, 156.503571, 17.105513}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12RightThenLeft = {
	{ 0x17DB1, { 107.561256, 154.034225, 17.105515}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 106.348152, 153.786896, 17.105539}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12RightThenStraight = {
	{ 0x17DB1, { 108.392006, 155.290451, 17.105503}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 108.144684, 156.503571, 17.105513}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> rightOrange11To12RightThenRight = {
	{ 0x17DB1, { 109.648239, 154.459717, 17.105474}}, // Treehouse Right Orange 11
	{ 0x17DA2, { 110.861343, 154.707047, 17.105455}}, // Treehouse Right Orange 12
};

inline std::map<int, Vector3> finalElevatorPanelPositions = {
	{ 0x3D9a7 , {211.0157623, -48.44531631, 2.267941236}}, // Elevator Close Right
	{ 0x3D9A6 , {211.0527344, -49.13837814, 2.267941236}}, // Elevator Close Left

	{ 0x3c114 , {210.9108887, -47.65873718, 0.08744956553}}, // Elevator Open Right
	{ 0x3c113 , {211.0372314, -49.94410324, 0.08744954318}}, // Elevator Open Left

	{ 0x3d9aa , {212.4322968, -48.22860336, 1.175450087}}, // Elevator Inside Left
	{ 0x3d9a8 , {212.4847107, -49.19897842, 1.175730228}}, // Elevator Open Left

	{ 0x3d9a9 , {212.4577942, -48.71218109, 1.170690656}}, // Elevator Start
};



class CollisionVolume
{
public:
	CollisionVolume() {}
	virtual bool containsPoint(std::vector<float> playerPos) = 0;
	virtual bool containsPoint(float playerPosX, float playerPosY, float playerPosZ) = 0;
};

class CollisionCube : public CollisionVolume
{
public:
	CollisionCube(float x1, float y1, float z1, float x2, float y2, float z2) {
		this->x1 = std::min(x1,x2);
		this->y1 = std::min(y1,y2);
		this->z1 = std::min(z1,z2);
		this->x2 = std::max(x1, x2);
		this->y2 = std::max(y1, y2);
		this->z2 = std::max(z1, z2);
	}

	CollisionCube(std::vector<float> pos1, std::vector<float> pos2) {
		CollisionCube(pos1[0], pos1[1], pos1[2], pos2[0], pos2[1], pos2[2]);
	}

	bool containsPoint(std::vector<float> playerPos) {
		return containsPoint(playerPos[0], playerPos[1], playerPos[2]);
	}

	bool containsPoint(float playerPosX, float playerPosY, float playerPosZ) {
		return playerPosX > x1 && playerPosX < x2 && playerPosY > y1 && playerPosY < y2 && playerPosZ > z1 && playerPosZ < z2;
	}

private:
	float x1;
	float y1;
	float z1;
	float x2;
	float y2;
	float z2;
};

class ExactCollisionCube : public CollisionVolume
{
public:
	ExactCollisionCube(std::vector<float> xyzBase, std::vector<float> xyz1, std::vector<float> xyz2, std::vector<float> xyz3) {
		Vector3 xyz_piv(xyzBase);
		Vector3 xyz_x(xyz1);
		Vector3 xyz_y(xyz2);
		Vector3 xyz_z(xyz3);

		dx = xyz_x - xyz_piv;
		dy = xyz_y - xyz_piv;
		dz = xyz_z - xyz_piv;

		dx = dx / 2;
		dy = dy / 2;
		dz = dz / 2;

		center = xyz_piv + dx + dy + dz;

		half = Vector3(dx.length(), dy.length(), dz.length());

		dx = dx.normalized();
		dy = dy.normalized();
		dz = dz.normalized();
	}

	bool containsPoint(std::vector<float> playerPos) {
		return containsPoint(playerPos[0], playerPos[1], playerPos[2]);
	}

	bool containsPoint(float playerPosX, float playerPosY, float playerPosZ) {
		Vector3 point(playerPosX, playerPosY, playerPosZ);

		Vector3 d = point - center;
		return abs(d * dx) <= half.X && abs(d * dy) <= half.Y && abs(d * dz) <= half.Z;
	}

private:
	Vector3 center;
	Vector3 dx;
	Vector3 dy;
	Vector3 dz;
	Vector3 half;
};

inline CollisionVolume* townRedRoof = new CollisionCube(-23.53f, -22.34f, 14.95f, -27.8f, -19.9f, 17.34f);
inline CollisionVolume* swampLongBridgeFar = new CollisionCube(189.75f, 5.86f, 3.5f, 194.2f, -1.6f, 1.2f);
inline CollisionVolume* swampLongBridgeNear = new CollisionCube(200.75f, 14.5f, 0.5f, 207.7f, 18.15f, 2.85f);
inline CollisionVolume* bunkerElevatorCube = new CollisionCube(161.9f, -86.2f, 28.0f, 158.1f, -91.0f, 29.2f);
inline CollisionVolume* quarryElevatorUpper = new CollisionCube(-61.1f, 175.6f, 11.5f, -66.3f, 171.8f, 14.2f);
inline CollisionVolume* quarryElevatorLower = new CollisionCube(-69.0f, 165.7f, 2.1f, -54.7f, 174.8f, 4.5f);
inline CollisionVolume* riverVaultUpperCube = new CollisionCube(52, -51, 19, 44, -47, 23);
inline CollisionVolume* riverVaultLowerCube = new CollisionCube(40, -56, 16, 46, -47, 20.5);
inline CollisionVolume* bunkerPuzzlesCube = new CollisionCube(161.2f, -96.3f, 5.8f, 172.3f, -101.1f, 11.5f);
inline CollisionVolume* tutorialPillarCube = new CollisionCube(-152, -150.9f, 5, -148, -154.8f, 9);
inline CollisionVolume* quarryLaserPanel = new CollisionCube(-59, 90, 17, -67, 100, 21);
inline CollisionVolume* challengeTimer = new CollisionCube(-27, -40, -20, -50, -20, -4);
inline CollisionVolume* EEEGate = new ExactCollisionCube({ -502.157, -174.301, 167 }, { -502.157, -174.301, 172 }, { -510, -168, 167 }, { -508, -187.7, 167 });

inline CollisionVolume* bunkerLaserPlatform = new ExactCollisionCube({ 161.838, -86.685, 30.5 }, { 158.985, -86.927, 30.5 }, { 162.049, -89.407, 30.5 }, { 161.838, -86.685, 34 });

inline std::map<int, CollisionVolume*> laserCollisions = {
	{0x00509, new ExactCollisionCube({-197.783, 43.078, 16}, {-198.963, 33.558, 16},  {-207.646, 44.368, 16}, {-197.783, 43.078, 20})}, // Symmetry
	{0x012FB, new ExactCollisionCube({-139.577, 120.460, -10}, {-138.074, 117.916, -10}, {-143.288, 118.357, -10}, {-139.577, 120.460, 21})}, // Desert
	{0x01539, new ExactCollisionCube({-65.689, 100.040, 17.5}, {-56.964, 97.491, 17.5}, {-67.272, 94.522, 17.5}, {-65.689, 100.040, 20})}, // Quarry
	{0x181B3, new ExactCollisionCube({ -3.264, 86.099, 14.0 }, { -8.329, 87.306, 14.0 }, { -2.048, 91.37, 14.0 }, { -3.264, 86.099, 18.0 })}, // Shadows
	{0x014BB, new ExactCollisionCube({47.981, 135.773, 40.5}, {57.653, 133.734, 40.5}, {50.264, 148.514, 40.5}, {47.981, 135.773, 44})}, // Keep
	{0x17C65, new ExactCollisionCube({31.289, -15.792, 16.4}, {28.5, -28.717, 16.4}, {13.644, -12.87, 16.4}, {31.289, -15.792, 18})}, // Monastery
	{0x032F9, new ExactCollisionCube({-36.859, -11.220, 23}, {-37.813, -15.858, 23}, {-38.085, -10.73, 23}, {-36.859, -11.220, 30})}, // Town
	{0x00274, new ExactCollisionCube({85.17, -55.891, 26}, {82.895, -50.217, 26}, {91.857, -51.481, 26}, {85.17, -55.891, 30})}, // Jungle
	{0x00BF6, new ExactCollisionCube({153.334, -3.836, 7.8}, {142.850, -2.083, 7.8}, {152.526, -8.985, 7.8}, {152.526, -8.985, 14})}, // Swamp
	{0x0C2B2, new ExactCollisionCube({163.029, -84.098, 26}, {175.137, -82.494, 26}, {164.033, -92.094, 26},{163.029, -84.098, 30})}, // Bunker
	{0x028A4, new ExactCollisionCube({103.063, 131.681, 18}, {102.415, 134.121, 18}, {108.478, 132.748, 18}, {103.063, 131.681, 19})}, // Treehouse
};

// 0x012FB,

RgbColor getColorByItemFlag(const __int64 flags);
RgbColor getColorByItemIdOrFlag(const __int64 itemId, const __int64 flags);

inline const float WARP_SPHERE_RADIUS = 1.4f;

struct Warp {
	std::string name;
	std::vector<float> playerPosition;
	std::vector<float> cameraAngle;
	int entityToCheckForLoading;
	bool tutorial;
};

inline std::vector<Warp> allPossibleWarps = {
	{"Tutorial First Hallway", {-201.449, -114.798, 3.727}, {-1.25665, -0.00438}, 0x00064, true },
	{"Tutorial First Hallway Room", {-184.818, -165.605, 4.228}, {0.314, -0.184}, 0x300BF, true },
	{"Tutorial", {-155.009, -155.843, 7.601}, {0.32, -0.069}, 0x06A8E, true }, 

	{"Outside Tutorial", {-117.623, -104.855, 8.303}, {2.395, -0.059}, 0x3099F, false },
	{"Outside Tutorial Vault", {-152.191, -109.122, 6.991}, {0.669, -0.167}, 0x0C8AB, false },
	{"Outside Tutorial Path to Outpost", {-109.310, -134.790, 7.278}, {1.616, -0.05}, 0x3CFA2, false },
	{"Outside Tutorial Outpost", {-108.383, -123.101, 7.222}, {-3.005, -0.0633}, 0x2FC05, false },

	{"Orchard", {-126.014, -11.035, 10.793}, {1.461, 0.106}, 0x0C2A6, false },
	{"Orchard Beyond First Gate", {-107.530, 24.751, 16.460}, {-3.001, -0.074}, 0x0ABF7, false },
	{"Orchard Beyond Second Gate", {-99.434, 21.863, 17.640}, {2.296, 0}, 0x17C75, false },

	{"Outside Glass Factory", {-170.611, -34.887, 2.694}, {3.01785398, 0.0}, 0x1B232, false },
	{"Inside Glass Factory", {-191.871, -38.314, 2.720}, {2.933, 0.0}, 0x14C28, false },

	{"Outside Symmetry Island", {-160.390, 31.471, 11.394}, {3.03225493, 0.0}, 0x06A3C, false },
	{"Symmetry Island Lower", {-174.229, 32.756, 11.828}, {2.793, -0.047}, 0x36577, false },
	{"Symmetry Island Upper", {-192.211, 36.385, 17.130}, {2.931, 0.078}, 0x0D1BD, false },
	
	{"Desert Outside", {-139.404, 157.708, 7.166}, {2.87715, 0}, 0x06221, false },
	{"Desert Vault", {-231.3, 197.655, 3.304}, {1.776, -0.1}, 0x351C3, false },
	{"Desert Light Room", {-174.588, 167.4, 3.937}, {2.892, -0.025}, 0x0C852, false },
	{"Desert Pond Room", {-173.792, 166.858, -2.456}, {2.818, -0.08}, 0x22C98, false },
	{"Desert Flood Room", {-184.652, 167.168, -6.781}, {-0.458, -0.152}, 0x22CC1, false },
	{"Desert Elevator Room", {-144.363, 129.63, -5.540}, {-1.765, -0.047}, 0x272B1, false },
	{"Desert Behind Elevator", {-138.181, 113.782, -5.540}, {2.09, 0}, 0x272B8, false },

	{"Outside Quarry", {-54.314, 85.340, 11.068}, {0.637, 0}, 0x31A1D, false },
	{"Quarry Between Entry Doors", {-50.448, 92.804, 8.863}, {1.66, -0.165}, 0x31DE7, false },
	{"Quarry", {-26.390, 140.466, 3.593}, {2.907, 0.038}, 0x30663, false },

	{"Quarry Stoneworks Ground Floor", {-62.301, 155.597, 3.538}, {-1.645, 0.042}, 0x276F8, false },
	{"Quarry Stoneworks Middle Floor", {-60.933, 148.549, 5.034}, {2.860, -0.086}, 0x276C3, false },
	{"Quarry Stoneworks Upper Floor", {-64.938, 158.237, 6.975}, {-2.446, 0}, 0x276BB, false },

	{"Quarry Boathouse", {-15.998, 181.732, 3.692}, {0.997, 0}, 0x275F3, false },
	{"Quarry Boathouse Upper Front", {-10.918, 185.979, 5.888}, {1.047, 0}, 0x27600, false },
	{"Quarry Boathouse Upper Middle", {-7.107, 195.324, 6.034}, {1.734, 0}, 0x27655, false },
	{"Quarry Boathouse Upper Back", {-10.729, 208.022, 6.774}, {-1.507, -0.01}, 0x38661, false },

	{"Shadows", {5.099, 115.615, 15.268}, {2.293, -0.130}, 0x31A22, false },
	{"Shadows Ledge", {-21.145, 119.759, 7.378}, {1.786, -0.045}, 0x19AF1, false },
	{"Shadows Laser Room", {-2.551, 88.78, 15.529}, {2.875, -0.115}, 0x18318, false },

	{"Outside Keep", {39.178, 64.462, 12.928}, {1.38, 0.17}, 0x14FD4, false },
	{"Keep", {49.881, 131.068, 20.823}, {-0.2, 0}, 0x284BB, false },
	{"Keep 2nd Maze", {65.726, 102.196, 20.885}, {-2.075, -0.082}, 0x3095B, false },
	{"Keep 3rd Maze", {45.453, 89.383, 20.885}, {2.616, -0.032}, 0x3094A, false },
	{"Keep 4th Maze", {27.957, 111.336, 20.885}, {1.008, -0.01}, 0x28006, false },

	{"Keep 2nd Pressure Plate", {77.556, 164.533, 20.992}, {1.36812, 0}, 0x0791F, false },
	{"Keep 3rd Pressure Plate", {56.958, 192.973, 20.997}, {2.951, 0}, 0x34EF2, false },
	{"Keep 4th Pressure Plate", {52.552, 172.010, 21.021}, {-1.773, -0.07}, 0x28488, false },

	{"Keep Tower", {40.861, 145.121, 21.028}, {-0.372, 0.097}, 0x2873F, false },

	{"Shipwreck", {123.407, 214.291, 9.998}, {-0.3, -0.15}, 0x17D56, false },
	{"Shipwreck Vault", {177.506, 219.689, 1.97}, {-0.644, -0.156}, 0x07955, false },

	{"Outside Monastery", {11.151, -69.042, 10.059}, {1.36583734, 0.175}, 0x18321, false },
	{"Inside Monastery", {22.997, -33.212, 16.83}, {2.66071, 0.0}, 0x0CD4B, false },
	{"Monastery Garden", {36.31, -34.583, 16.723}, {-1.777, 0.0}, 0x27F16, false },

	{"Town", {-38.275, -16.534, 11.054}, {0.70478326, 0.0}, 0x0D601, false },
	{"Town Inside Cargo Box", {-45.829, -37.879, 6.328}, {-0.069, -0.114}, 0x09D7F, false },
	{"Town Maze Rooftop", {-15.078, -13.697, 15.755}, {-2.5207, -0.1}, 0x18701, false },
	{"Town Red Rooftop", {-29.879, -22.817, 16.501}, {2.168, -0.02}, 0x311E5, false },
	{"Town Wooden Rooftop", {-54.302, -17.632, 15.502}, {0.179, 0.0}, 0x26FBA, false },
	{"Town Church", {-39.109, 11.403, 11.267}, {0.019, 0.0}, 0x266CA, false },
	{"Town RGB House", {-29.244, 2.384, 11.1116}, {0.56152, -0.02}, 0x26BA3, false },
	{"Town RGB House Upstairs", {-20.863, 2.441, 14.412}, {-2.863, 0.0}, 0x387EE, false },
	{"Town Tower After First Door", {-43.754, -15.419, 14.146}, {-0.178, 0.0}, 0x265FC, false },
	{"Town Tower After Second Door", {-38.995, -14.638, 16.151}, {2.802, 0.11}, 0x277D0, false },
	{"Town Tower After Third Door", {-38.288, -16.289, 21.161}, {2.912, -0.098}, 0x277C6, false },
	{"Town Tower After Fourth Door", {-37.685, -11.318, 23.146}, {-1.766, 0.0}, 0x277C8, false },

	{"Outside Windmill", {-76.986, 27.816, 12.026}, {-3.055, 0.176}, 0x2DE6B, false },
	{"Windmill Interior", {-93.528, 25.415, 14.38}, {2.094, -0.03}, 0x17C80, false },
	{"Theater", {-68.699, -1.014, -1.282}, {-0.997, 0.03}, 0x343FC, false },

	{"Jungle", {14.414, -91.009, 7.453}, {-0.183, 0.219}, 0x1B21F, false },
	{"Outside Jungle River", {77.528, -45.431, 22.434}, {3.042, -0.077}, 0x0C76F, false },
	{"Jungle Vault", {49.278, -74.481, 10.68}, {2.387, 0.0}, 0x1527E, false },

	{"Outside Bunker", {148.9, -96.764, 8.811}, {-0.39739844, 0.0}, 0x34D90, false },
	{"Bunker", {164.047, -99.107, 8.871}, {0.107, 0.0}, 0x2734F, false },
	{"Bunker Glass Room", {171.764, -102.629, 8.871}, {-3.042, -0.06}, 0x2D70F, false },
	{"Bunker Ultraviolet Room", {170.664, -101.789, 12.565}, {-1.109, -0.046}, 0x2737E, false },
	{"Bunker Elevator Section", {167.3, -89.573, 8.881}, {2.987, 0.0}, 0x27392, false },
	{"Bunker Cyan Room", {164.211, -87.692, 19.46}, {-3.032, -0.04}, 0x06C91, false },
	{"Bunker Green Room", {164.263, -87.852, 23.087}, {-3.039, -0.04}, 0x0C8CF, false },
	{"Bunker Laser Platform", {159.722, -88.577, 32.132}, {0.471, -0.08}, 0x0BF8A, false },

	{"Outside Swamp", {116.558, 19.614, 2.3}, {1.24171472, 0.0}, 0x267C5, false },
	{"Swamp Entry Area", {121.917, 37.817, 2.281}, {-1.481, -0.04}, 0x26719, false },
	{"Swamp Platform", {152.455, 50.036, 8.728}, {-2.435, 0.0}, 0x27840, false },
	{"Swamp Cyan Underwater", {127.501, 51.452, -1.536}, {-0.344, -0.005}, 0x0D35E, false },
	{"Swamp Between Bridges Near", {143.439, 43.565, 2.255}, {-1.271, 0.0}, 0x184B7, false },
	{"Swamp Between Bridges Far", {157.229, 32.414, 2.255}, {2.572, -0.01}, 0x26851, false },
	{"Swamp Red Underwater", {143.304, 34.321, -1.526}, {-1.052, 0.005}, 0x0D2F5, false },
	{"Swamp Near Boat", {219.478, 21.766, 2.255}, {-0.088, -0.009}, 0x26998, false },
	{"Swamp Purple Area", {171.136, 3.953, 2.255}, {2.044, 0.002}, 0x38C28, false },
	{"Swamp Purple Underwater", {163.755, 14.855, -1.536}, {-2.678, -0.01}, 0x2FD9A, false },
	{"Swamp Blue Underwater", {163.601, 29.715, -1.536}, {-1.093, 0.0}, 0x2FD9F, false },
	{"Swamp Maze", {134.265, 23.1, 2.223}, {-0.416, 0.0}, 0x0CF98, false },
	{"Swamp Laser Area", {144.35, 14.222, 2.241}, {-1.121, -0.005}, 0x26A09, false },

	{"Treehouse Beach", {107.467, 120.145, 6.644}, {-1.387, 0.154}, 0x045D3, false },

	{"Treehouse Entry Area", {196.476, 161.588, 2.167}, {-1.99352, 0}, 0x06474, false },
	{"Treehouse Between Doors", {163.775, 142.462, 11.694}, {-3.111, -0.01}, 0x2DDA7, false },
	{"Treehouse Yellow Bridge", {152.911, 143.096, 12.041}, {3.022, -0.14}, 0x069A2, false },
	{"Treehouse After Yellow Bridge", {137.168, 145.043, 12.202}, {-0.124, -0.072}, 0x0A181, false },
	{"Treehouse Junction", {134.232, 145.555, 12.161}, {-2.789, -0.042}, 0x26F8F, false },
	{"Treehouse Drawbridge Platform", {104.728, 153.393, 18.398}, {3.099, -0.116}, 0x09F58, false },
	{"Treehouse Second Purple Bridge", {131.151, 119.431, 16.759}, {2.34, -0.122}, 0x265AB, false },
	{"Treehouse Left Orange Bridge", {126.01, 135.656, 18.384}, {-2.881, -0.06}, 0x265EC, false },
	{"Treehouse Green Bridge Front House", {126.297, 156.78, 18.395}, {0.67, -0.09}, 0x1801D, false },
	{"Treehouse Green Bridge Left House", {115.717, 157.651, 17.112}, {0.23, -0.163}, 0x1818E, false },
	{"Treehouse Laser Room Front Platform", {109.527, 132.737, 18.79}, {0.71864134, -0.04462437}, 0x31D9F, false },
	{"Treehouse Laser Room Back Platform", {98.763, 131.08, 18.477}, {-0.279, -0.122}, 0x04155, false },
	{"Treehouse Burned House", {112.821, 120.144, 18.624}, {1.354, -0.05}, 0x31D43, false },
	{"Treehouse Laser Room", {102.754, 133.69, 18.914}, {-0.08, -0.074}, 0x2D75E, false },

	{"Mountainside", {106.337, -17.439, 24.157}, {-0.72, 0.188}, 0x2D90C, false },
	{"Mountainside Vault", {179.680, -53.101, 43.856}, {2.956, -0.055}, 0x2774A, false },
	{"Mountaintop", {148.772, -57.643, 68.552}, { 0.59146, -0.1 }, 0x38845, false },
	
	{"Mountain Floor 1", {154.062, -42.562, 53.141}, {-1.49050689, -0.2177794}, 0x0D407, false },

	{"Mountain Floor 2", {159.934, -60.495, 27.304}, {-1.49372685, 0.0}, 0x26BB2, false },
	{"Mountain Floor 2 Light Bridge Room Near", {155.732, -63.72, 30.879}, {1.64945543, 0.0}, 0x389A4, false },
	{"Mountain Floor 2 Beyond Bridge", {150.14, -45.408, 27.303}, {1.64513314, 0.0}, 0x26BB0, false },
	{"Mountain Floor 2 Light Bridge Room Far", {154.067, -42.593, 30.881}, {-1.49449492, 0.0}, 0x0CC7C, false },
	{"Mountain Floor 2 Elevator Room", {142.662, -55.858, 27.196}, {-3.0530591, 0.0}, 0x387DF, false },

	{"Mountain Floor 3", {146.337, -53.809, 4.796}, {0.07693315, -0.075}, 0x27985, false },
	{"Mountain Bottom Floor", {173.599, -51.343, 2.337}, {0.05800205, -0.158}, 0x305F7, false },
	{"Mountain Bottom Floor Pillars Room", {186.329, -50.508, 1.427}, {0.07368734, 0.0}, 0x35224, false },
	{"Mountain Bottom Floor Path to Caves", {163.086, -42.92, 4.985}, {-3.07381296, 0.0}, 0x3CE3F, false },

	{"Caves", {117.457, -52.997, -1.76}, {2.09, 0}, 0x2D924, false },
	{"Caves Path to Challenge", {86.643, -35.05, 0.628}, {3.14144945, 0.0}, 0x2D957, false },

	{"Challenge", {-42.622, -31.288, -9.823}, {-0.03665126, -0.075}, 0x314A6, false },
	{"Challenge Vault", {64.031, -34.844, -0.246}, {-3.12983704, 0.0}, 0x17FE0, false },

	{"Tunnels", {-63.066, -5.41, 5.01}, {-2.57802415, 0.0}, 0x38CCE, false },
};

inline std::map<std::string, Warp> warpLookup = {};

inline std::map < std::string, Vector3> warpPositionUnlockPointOverrides = {
	{ "Town", { -42.628, -3.531, 11.054 }},
	{ "Shipwreck", { 85.194, 202.015, 12.026}},
	{ "Quarry", { -50.962, 131.744, 2.840 }}, 
	{ "Swamp Platform", { 152.052, 47.727, 8.728 }},
};

inline RgbColor EGG_WHITE = RgbColor(1.0f, 1.0f, 1.0f, 1.0f);
inline RgbColor EGG_RED = RgbColor(1.0f, 0.2f, 0.2f, 1.0f);
inline RgbColor EGG_PINK = RgbColor(1.0f, 0.6f, 0.6f, 1.0f);
inline RgbColor EGG_ORANGE = RgbColor(1.0f, 0.5f, 0.2f, 1.0f);
inline RgbColor EGG_GREEN = RgbColor(0.2f, 1.0f, 0.2f, 1.0f);
inline RgbColor EGG_PURPLE = RgbColor(0.5f, 0.2f, 1.0f, 1.0f);
inline RgbColor EGG_CYAN = RgbColor(0.2f, 1.0f, 1.0f, 1.0f);
inline RgbColor EGG_BLUE = RgbColor(0.2f, 0.2f, 1.0f, 1.0f);
inline RgbColor EGG_MAGENTA = RgbColor(1.0f, 0.2f, 1.0f, 1.0f);
inline RgbColor EGG_YELLOW = RgbColor(1.0f, 1.0f, 0.2f, 1.0f);

inline std::map<int, std::pair<Vector3, RgbColor>> easterEggs = {
	// Inside Tutorial
	{ 0xEE000, {{-152.005, -148.911, 7.39702}, EGG_MAGENTA * 1.0f}}, // Near Center Row 2, NewSoupVi

	// Outside Tutorial
	{ 0xEE001, {{-126.076, -171.657, 15.6509}, EGG_RED * 11.0f}}, // Gate Wall, NewSoupVi
	{ 0xEE002, {{-175.897, -99.033, 7.06974}, EGG_ORANGE * 2.0f}}, // Path to Outpost ish, NewSoupVi
	{ 0xEE003, {{-143.481, -88.6127, 11.015}, EGG_PINK * 2.0f}}, // Big tree, NewSoupVi
	{ 0xEE004, {{-153.172, -35.9619, 6.364}, EGG_CYAN * 12.0f}}, // Tractor, NewSoupVi

	// Outpost Path
	{ 0xEE005, {{-104.693, -127.221, 3.721}, EGG_CYAN * 1.2f}}, // Tree near Outpost Entry, Exempt-Medic

	// Outpost
	{ 0xEE006, {{-105.663, -122.064, 7.53495}, EGG_PURPLE * 6.0f}}, // Outpost Wall

	// Orchard 1
	{ 0xEE007, {{-94.907, 28.318, 16.696}, EGG_YELLOW * 2.0f}}, // Near Flower Cross, NewSoupVi

	// Orchard 2
	{ 0xEE008, {{-104.46, 25.2631, 17.149}, EGG_BLUE * 0.64f}}, // Wedged under Table, Rever

	// Glass Factory
	{ 0xEE009, {{-197.448, -35.103, 1.306}, EGG_PURPLE * 0.8f}}, // Glass Factory Furnace, Exempt-Medic
	{ 0xEE00A, {{-213.318, -34.87, 1.829}, EGG_RED * 1.0f}}, // Sand Castle, NewSoupVi

	// Symmetry Island
	{ 0xEE00B, {{-210.822, 29.588, 3.48303}, EGG_CYAN * 7.0f}}, // In red branch
	{ 0xEE00C, {{-211.458, 10.609, 0.579}, EGG_WHITE * 3.0f}}, // Env Set behind panel, NewSoupVi

	// Symmetry Island Upper
	{ 0xEE00D, {{-203.65, 39.952, 16.664}, EGG_CYAN * 5.0f}}, // Behind Laser, NewSoupVi

	// Desert
	{ 0xEE00E, {{-181.662, 102.185, 3.249}, EGG_YELLOW * 9.0f}}, // Symmetry Island Outlines Tree Stump, NewSoupVi
	{ 0xEE00F, {{-125.541, 67.34, 15.211}, EGG_GREEN * 4.0f}}, // Sand Snake EP Tree, Scipio
	{ 0xEE010, {{-122.259, 86.258, 12.839}, EGG_MAGENTA * 4.0f}}, // Desert Laser "Air Hole", Scipio
	{ 0xEE011, {{-88.7798, 193.946, 20.9679}, EGG_ORANGE * 4.0f}}, // Desert Perspective Tree, Scipio
	{ 0xEE012, {{-108.916, 207.97, 0.415998}, EGG_RED * 4.0f}}, // Desert Shore Near Perspective Tree, Rever
	{ 0xEE013, {{-201.321, 238.077, 0.648001}, EGG_PINK * 0.5f}}, // Desert Shore Right, NewSoupVi

	// Desert Vault
	{ 0xEE014, {{-230.669, 199.455, 0.852001}, EGG_BLUE * 0.55f}}, // Desert Vault, NewSoupVi

	// Desert Pond Room
	{ 0xEE015, {{-164.225, 163.973, -0.683999}, EGG_BLUE * 1.0f}}, // Staircase to Pond Room, NewSoupVi
	{ 0xEE016, {{-180.825, 165.418, -3.31}, EGG_YELLOW * 1.0f}}, // Pond Room, NewSoupVi

	// Desert Flood Room
	{ 0xEE017, {{-180.579, 166.568, -9.46402}, EGG_RED * 0.8f}}, // Flood Room EP, Rever

	// Desert Elevator Room
	{ 0xEE018, {{-147.136, 129.896, -7.148}, EGG_GREEN * 0.6f}}, // Elev Room Behind Bent 3, NewSoupVi

	// Outside Quarry
	{ 0xEE019, {{-70.556, 184.644, 11.943}, EGG_PURPLE * 12.0f}}, // Rooftop Path near Desert Perspective Tree Dead End, NewSoupVi
	{ 0xEE01A, {{-56.535, 97.754, 12.149}, EGG_RED * 14.0f}}, // Rooftop Path near Laser Dead End, NewSoupVi

	// Quarry
	{ 0xEE01B, {{-60.823, 176.821, 1.005}, EGG_YELLOW * 3.0f}}, // Near Railroad Crevace, NewSoupVi
	{ 0xEE01C, {{-53.625, 197.965, 1.84f}, EGG_WHITE * 3.0f}}, // Quarry Railroad under broken floor, Exempt-Medic*
	{ 0xEE01D, {{-73.614, 114.297, 3.16901}, EGG_ORANGE * 8.0f}}, // Outside Stoneworks on Brick Pile, Scipio
	{ 0xEE01E, {{-69.342, 130.798, 2.88501}, EGG_PINK * 0.4f}}, // Quarry Stoneworks Furnace, Scipio
	{ 0xEE01F, {{-67.417, 131.506, 4.081}, EGG_MAGENTA * 10.0f}}, // Quarry Stoneworks Furnace Vent, NewSoupVi

	// Quarry Boathouse
	{ 0xEE020, {{-17.823, 192.332, 2.02101}, EGG_GREEN * 3.0f}}, // Quarry Boathouse Outside Beam, Scipio
	{ 0xEE021, {{-7.836, 191.667, 0.343001}, EGG_PURPLE * 0.25f}}, // Quarry Boathouse Lower Path, NewSoupVi

	// Stoneworks
	{ 0xEE022, {{-74.42, 138.859, 4.972}, EGG_MAGENTA * 0.2f}}, // Quarry Stoneworks Crevace Behind Control Room, Exempt-Medic
	{ 0xEE023, {{-69.412, 133.404, 4.419}, EGG_ORANGE * 0.28f}}, // Quarry Stoneworks Furnace Inside, NewSoupVi
	{ 0xEE0FF, {{-63.3543, 135.54, 2.024}, EGG_YELLOW * 0.14f}}, // The meanest egg to ever exist, Rever

	// Shadows
	{ 0xEE024, {{-9.02006, 88.7752, 13.46}, EGG_CYAN * 6.0f}}, // Near Butterfly Tree, Exempt-Medic
	{ 0xEE025, {{19.3622, 183.396, 8.91213}, EGG_YELLOW * 0.55f}}, // Shadows under platform, NewSoupVi

	// Shadows Ledge
	{ 0xEE026, {{-22.7661, 114.579, 6.95508}, EGG_RED * 3.0f}}, // Left side, NewSoupVi

	// Shadows Laser Room
	{ 0xEE027, {{-7.16899, 91.093, 15.2759}, EGG_BLUE * 2.0f}}, // Behind Laser Right, Rever

	// Keep
	{ 0XEE028, {{68.215, 130.336, 24.499}, EGG_GREEN * 2.0f}}, // Keep Center East Tower, NewSoupVi

	// Keep Hedge Maze 3
	{ 0xEE029, {{45.042, 94.549, 19.171}, EGG_RED * 10.0f}}, // Keep Hedge 3 Hole, NewSoupVi
	{ 0xEE02A, {{43.05, 82.9641, 19.7891}, EGG_WHITE * 2.0f}}, // Keep Hedge 3 Wall Cubby, NewSoupVi
	{ 0xEE02B, {{20.574, 91.622, 21.911}, EGG_PURPLE * 2.0f}}, // Keep SW Tower, NewSoupVi

	// Keep Pressure Plates 2
	{ 0xEE02C, {{68.464, 189.053, 20.3061}, EGG_GREEN * 2.0f}}, // PP2 Broken Wall, NewSoupVi
	{ 0xEE02D, {{65.588, 184.168, 22.756}, EGG_MAGENTA * 5.0f}}, // PP2->PP3 Walkable Wall, NewSoupVi

	// Keep Pressure Plates 3
	{ 0xEE02E, {{50.212, 184.124, 16.395}, EGG_YELLOW * 7.0f}}, // Keep PP3 Hand Guy, NewSoupVi

	// Keep Pressure Plates 4
	{ 0xEE02F, {{55.794, 163.02, 17.4661}, EGG_ORANGE * 3.0f}}, // Keep PP4 Hand Guy, Rever

	// Keep Tower
	{ 0xEE030, {{31.071, 142.541, 22.764}, EGG_PURPLE * 1.2f}}, // Keep Center West Tower, Exempt-Medic
	{ 0xEE031, {{53.061, 145.743, 33.222}, EGG_MAGENTA * 1.0f}}, // Keep Tower Shooty Hole, NewSoupVi

	// Shipwreck
	{ 0xEE032, {{108.048, 209.634, 10.2499}, EGG_CYAN * 0.7f}}, // Shipwreck Under Entrance, NewSoupVi
	{ 0xEE033, {{115.119, 214.291, 9.41693}, EGG_BLUE * 1.5f}}, // In weird long hole thing, NewSoupVi
	{ 0xEE034, {{177.602, 205.27, 0.873}, EGG_WHITE * 0.3f}}, // Bottom Floor Dead End, NewSoupVi
	{ 0xEE035, {{178.018, 204.497, 2.27301}, EGG_GREEN * 3.0f}}, // Abandoned Staircase, Exempt-Medic
	{ 0xEE036, {{190.402, 203.267, 3.449}, EGG_CYAN * 4.0f}}, // Behind Stern, NewSoupVi

	// Inside Monastery
	{ 0xEE037, {{18.01, -35.491, 18.1371}, EGG_WHITE * 0.96f}}, // Inside Tree, NewSoupVi

	// Monastery North Shutters
	{ 0xEE038, {{19.0049, -27.2742, 17.1458}, EGG_PINK * 1.0f}}, // Monastery North Shutters, Exempt-Medic

	// Monastery Garden
	{ 0xEE039, {{37.982, -45.8769, 15.3241}, EGG_MAGENTA * 0.54f}}, // Garden, NewSoupVi

	// Town
	{ 0xEE03A, {{-10.239, 64.711, 8.98798}, EGG_PINK * 2.0f}}, // Progress Lake, NewSoupVi
	{ 0xEE03B, {{-9.66801, -19.212, 11.21}, EGG_WHITE * 0.15f}}, // Under Town Maze Stairs, Exempt-Medic
	{ 0xEE03C, {{-26.2322, -26.356, 10.188}, EGG_BLUE * 0.17f}}, // Town Brick Furnace, NewSoupVi
	{ 0xEE03D, {{-64.456, -8.16704, 9.65603}, EGG_MAGENTA * 1.0f}}, // Town Hole, Scipio
	{ 0xEE03E, {{0.538, 12.449, 10.911}, EGG_YELLOW * 1.6f}}, // Under Bridge to Quarry, Rever

	// Town RGB House
	{ 0xEE03F, {{-18.594, 2.271, 10.3709}, EGG_PURPLE * 1.0f}}, // Shelf, NewSoupVi
	{ 0xEE040, {{-20.304, 3.196, 7.347}, EGG_WHITE * 1.0f}}, // Sound Room Broken Speaker, NewSoupVi

	// Town Wooden Rooftop
	{ 0xEE041, {{-51.692, -19.692, 12.086}, EGG_CYAN * 0.66f}}, // Town Wooden Rooftop, NewSoupVi

	// Town Tower 4th
	{ 0xEE042, {{-41.219, -12.284, 22.861}, EGG_PURPLE * 0.76f}}, // Under Town Laser, Rever

	// Windmill
	{ 0xEE043, {{-92.465, 27.214, 12.699}, EGG_RED * 0.4f}}, // Windmill Behind Entry Door, Scipio
	{ 0xEE044, {{-93.733, 27.764, 7.16801}, EGG_BLUE * 0.54f}}, // Windmill Staircase, NewSoupVi

	// Theater
	{ 0xEE045, {{-68.084, -4.291, -1.191}, EGG_PURPLE * 0.26f}}, // Theater, Rever

	// Jungle
	{ 0xEE046, {{-11.7705, -117.198, 0.141}, EGG_GREEN * 1.64133f}}, // Peninsula Shore, NewSoupVi
	{ 0xEE047, {{0.083, -153.61, 0.697999}, EGG_GREEN * 11.0f}}, // Peninsula Glass, NewSoupVi
	{ 0xEE048, {{-20.894, -138.558, 1.163}, EGG_BLUE * 2.66515f}}, // Peninsula Dead End, Scipio
	{ 0xEE049, {{-44.4687, -155.232, 0.529006}, EGG_WHITE * 0.84f}}, // Peninsula Dead End Right, NewSoupVi
	{ 0xEE04A, {{-20.579, -154.348, 8.987}, EGG_RED * 4.0f}}, // Peninsula Chalice, NewSoupVi

	// Jungle
	{ 0xEE04B, {{60.169, -75.4972, 12.9949}, EGG_PINK * 0.3f}}, // Crevace near Waves, NewSoupVi
	{ 0xEE04C, {{100.254, -70.377, 24.5151}, EGG_YELLOW * 1.5f} }, // Bamboo Maze Outskirt, NewSoupVi

	// Jungle Under Popup Wall
	{ 0xEE04D, {{57.877, -56.289, 19.314}, EGG_RED * 0.62f}}, // Under Popup Wall, Exempt-Medic

	// Jungle Vault
	{ 0xEE04E, {{49.991, -70.988, 9.02993}, EGG_ORANGE * 0.33f} }, // Jungle Vault, NewSoupVi

	// Outside Bunker
	{ 0xEE04F, {{160.996, -102.079, 7.226}, EGG_CYAN * 0.716498f}}, // Entry under Stairs, Scipio
	{ 0xEE050, {{167.459, -88.8181, 21.448}, EGG_RED * 2.0f}}, // Outside Green Room Crevace, Scipio
	{ 0xEE051, {{159.529, -89.596, 25.0892}, EGG_GREEN * 2.0f}}, // Near Elevator Crevace

	// Bunker Glass Room
	{ 0xEE052, {{173.028, -105.652, 8.36382}, EGG_ORANGE * 2.0f}}, // Back Left Behind Panel

	// Bunker Under Elevator
	{ 0xEE053, {{158.945, -87.1297, 7.237}, EGG_PINK * 0.25f}}, // Bottom Floor behind Elevator, Exempt-Medic // Better color?

	// Bunker Green Room
	{ 0xEE054, {{156.901, -87.1712, 21.391}, EGG_GREEN * 0.07f}}, // Green Room behind Elevator, Exempt-Medic // Better color?

	// Outside Swamp
	{ 0xEE055, {{92.508, 9.21898, 18.746}, EGG_WHITE * 9.0f}}, // Painter, NewSoupVi
	{ 0xEE056, {{208.499, -11.762, 0.521001}, EGG_BLUE * 10.0f} }, // Apparent River EP Start Point, NewSoupVi

	// Swamp Entry Area
	{ 0xEE057, {{123.245, 32.6569, 2.42201}, EGG_ORANGE * 2.0f}}, // Wedged between Panel Sets, NewSoupVi

	// Swamp Platform
	{ 0xEE058, {{134.71, 55.0499, 0.944997}, EGG_PURPLE * 1.43f}}, // Under Stairs to Platform, Scipio

	// Swamp Cyan Underwater
	{ 0xEE059, {{134.658, 48.614, -3.16699}, EGG_GREEN * 0.47f}}, // Cyan Underwater Corner, Scipio

	// Swamp Beyond Bridge
	{ 0xEE05A, {{207.84, 7.99, 2.482}, EGG_PINK * 4.0f}}, // Cage, Scipio

	// Swamp 
	{ 0xEE05B, {{146.63, 17.653, 0.304}, EGG_YELLOW * 6.0f}}, // Behind Red Maze, Scipio

	// Treehouse Beach
	{ 0xEE05C, {{134.795, 144.177, 0.367002}, EGG_MAGENTA * 1.0f}}, // Beach Right Path, NewSoupVi

	// Treehouse Yellow Bridge
	{ 0xEE05D, {{155.323, 140.275, 12.5139}, EGG_RED * 2.0f}}, // Ontop of door, NewSoupVi

	// Treehouse Junction
	{ 0xEE05E, {{128.683, 147.598, 12.2289}, EGG_BLUE * 1.58f}}, // Junction Weird Tree, NewSoupVi
	{ 0xEE05F, {{117.915, 142.597, 16.746}, EGG_PINK * 0.18f}}, // Timer Platform Corner, NewSoupVi

	// Treehouse Second Purple Bridge
	{ 0xEE060, {{134.06, 118.917, 15.183}, EGG_YELLOW * 2.0f}}, // Between Purple Bridges Stairs House, NewSoupVi

	// Treehouse Green Bridge Left House
	{ 0xEE061, {{125.683, 159.287, 16.526}, EGG_MAGENTA * 0.37f}}, // Plank near Right Bridge EP, NewSoupVi

	// Treehouse Laser Room Back Platform
	{ 0xEE062, {{107.055, 133.771, 19.626}, EGG_MAGENTA * 2.0f} }, // Treehouse Laser House Roof, hatkirby

	// Treehouse Burned House
	{ 0xEE063, {{113.961, 120.549, 18.8394}, EGG_WHITE * 2.0f}}, // Shoulder of Burnt House Tree Guy, NewSoupVi

	// Treehouse Drawbridge Platform
	{ 0xEE064, {{102.569, 149.464, 16.2631}, EGG_RED * 1.0f}}, // Under Bridge End, NewSoupVi

	// Mountainside
	{ 0xEE065, {{160.928, -19.2877, 38.1159}, EGG_CYAN * 4.0f}}, // Giant statue elbow, NewSoupVi
	{ 0xEE066, {{165.278, -53.6661, 47.217}, EGG_YELLOW * 0.56f}}, // Before Mountain Vault, NewSoupVi
	{ 0xEE067, {{127.641, -52.9993, 35.1405}, EGG_WHITE * 1.0f}}, // Mountainside Waterfall, NewSoupVi
	{ 0xEE068, {{113.174, -47.6361, 28.0573}, EGG_MAGENTA * 4.0f}}, // Mountainside Lower Waterfall, NewSoupVi

	// Mountaintop
	{ 0xEE069, {{148.683, -44.315, 67.19}, EGG_PURPLE * 2.32891f} }, // Lip, Scipio

	// Inside Mountain Floor 1 Trash Pile
	{ 0xEE06A, {{155.68, -53.735, 49.9621}, EGG_WHITE * 0.83f}}, // Trash Pile, NewSoupVi

	// Inside Mountain Back Section
	{ 0xEE06B, {{161.232, -63.2361, 48.2401}, EGG_BLUE * 0.95f}}, // Back Section Trash Can, NewSoupVi

	// Mountain Floor 2
	{ 0xEE06C, {{138.55, -35.988, 36.668}, EGG_PINK * 0.73f}}, // Model Windmills inside Treehouse house, Rever
	{ 0xEE06D, {{204.421, -41.8059, 0.757003}, EGG_ORANGE * 5.0f}}, // Final Room Statue, NewSoupVi

	// Caves
	{ 0xEE06E, {{140.332, -43.302, 3.53}, EGG_YELLOW * 1.0f}}, // Caves Entry Door, NewSoupVi
	{ 0xEE06F, {{106.46, -56.941, -3.13199}, EGG_GREEN * 0.1f}}, // Caves Near Wooden Beams, NewSoupVi
	{ 0xEE070, {{83.19, -54.49, 0.734}, EGG_BLUE * 0.7f}}, // Staircase behind plank, NewSoupVi

	// Caves Path to Challenge
	{ 0xEE071, {{83.43, -37.601, -0.446997}, EGG_PINK * 0.75f}}, // Path to Challenge, NewSoupVi

	// Challenge
	{ 0xEE072, {{12.462, -27.74, -5.008}, EGG_PURPLE * 0.2f}}, // Weird path near reallocating, Exempt-Medic
	{ 0xEE073, {{1.595, -40.682, -5.43099}, EGG_CYAN * 0.52f}}, // Challenge behind 2nd reallocating, NewSoupVi

	// Tunnels
	{ 0xEE074, {{-98.745, 45.942, -3.16899}, EGG_BLUE * 2.0f}}, // Walkway ontop of lamp, NewSoupVi
	{ 0xEE075, {{-64.948, -4.648, 1.964}, EGG_MAGENTA * 0.44f}}, // Walkway Tiles, hatkirby

	// Boat
	{ 0xEE076, {{-170.391, 32.1132, 0.0269997}, EGG_ORANGE * 4.0f}}, // Glass Factory Optional Path, NewSoupVi
	{ 0xEE077, {{164.824, 181.399, 0.653992}, EGG_GREEN * 7.0f}}, // Treehouse Optional Path, NewSoupVi
};

RgbColor getColorByItemIdOrFlag(const __int64 itemId, const __int64 flags);
std::string getStringFromFlag(unsigned int flags);
void populateWarpLookup();

class Vector3;
struct WitnessDrawnSphere;
std::vector<WitnessDrawnSphere> makeEgg(Vector3 originalPosition, float scale = 1.0f, RgbColor color = RgbColor(1.0f, 1.0f, 1.0f, 1.0f));